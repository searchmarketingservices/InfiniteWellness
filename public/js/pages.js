/*! For license information please see pages.js.LICENSE.txt */
(() => {
    var __webpack_modules__ = {
        8095: () => {
          "use strict";
          listen("click", ".delete-accountant-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#accountantURL").val() + "/" + t,
              "#accountantsTbl",
              $("#Accountant").val()
            );
          }),
            listenChange(".accountant-status", function (e) {
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url: $("#accountantURL").val() + "/" + +t + "/active-deactive",
                  method: "post",
                  cache: !1,
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      livewire.emit("refresh"));
                  }
                });
            }),
            listen("click", "#resetFilter", function () {
              $("#accountant_filter_status").val(0).trigger("change"),
                hideDropdownManually(
                  $("#accountantFilterBtn"),
                  $(".dropdown-menu")
                );
            }),
            listenChange("#accountant_filter_status", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            });
        },
        3106: () => {},
        5250: () => {
          "use strict";
          function e(e, t) {
            var a = $(e).val().split(".").pop().toLowerCase();
            return (
              -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
            );
          }
          document.addEventListener("turbo:load", function () {
            if (
              !$("#createAccountantForm").length &&
              !$("#editAccountantForm").length
            )
              return !1;
            var e = $("#bloodGroup"),
              t = $("#birthDate"),
              a = $("#createAccountantForm"),
              n = $("#editAccountantForm");
            t.length &&
              $("#birthDate").flatpickr({
                format: "YYYY-MM-DD",
                useCurrent: !0,
                sideBySide: !0,
                maxDate: new Date(),
                locale: $(".userCurrentLanguage").val()
              }),
              a.length && a.find("input:text:visible:first").focus(),
              n.length && n.find("input:text:visible:first").focus(),
              e.length && $("#bloodGroup").select2({ width: "100%" });
          }),
            listenChange(".accountantProfileImage", function () {
              var t = e($(this), "#customValidationErrorsBox");
              console.log(t),
                isEmpty(t) || 0 == t
                  ? ($(this).val(""),
                    $("#customValidationErrorsBox").removeClass("d-none hide"),
                    $("#customValidationErrorsBox")
                      .text("The image must be a file of type: jpg, jpeg, png.")
                      .show(),
                    $("[id=customValidationErrorsBox]").focus(),
                    $("html, body").animate({ scrollTop: "0" }, 500),
                    $(".alert").delay(5e3).slideUp(300))
                  : ($("#customValidationErrorsBox").html("").hide(),
                    displayDocument(this, "#customValidationErrorsBox", t));
            }),
            listenChange(".editAccountantProfileImage", function () {
              var t = e($(this), "#editAccountantErrorBox");
              isEmpty(t) || 0 == t
                ? ($(this).val(""),
                  $("#editAccountantErrorBox").removeClass("d-none hide"),
                  $("#editAccountantErrorBox")
                    .text("The image must be a file of type: jpg, jpeg, png.")
                    .show(),
                  $("[id=editAccountantErrorBox]").focus(),
                  $("html, body").animate({ scrollTop: "0" }, 500),
                  $(".alert").delay(5e3).slideUp(300))
                : ($("#editAccountantErrorBox").html("").hide(),
                  displayDocument(this, "#editAccountantErrorBox", t));
            }),
            listenClick(".remove-accountant-image", function () {
              defaultImagePreview("#previewImage", 1);
            }),
            listenSubmit(
              "#createAccountantForm, #editAccountantForm",
              function () {
                if ("" !== $(".error-msg").text())
                  return $("#phoneNumber").focus(), !1;
              }
            );
        },
        4111: () => {
          "use strict";
          document.addEventListener("turbo:load", function () {
            if (!$("#addAccountForm").length && !$("#editAccountForm").length)
              return !1;
          }),
            listenChange(".account-status", function (e) {
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url:
                    $(".indexAccountUrl").val() + "/" + +t + "/active-deactive",
                  method: "post",
                  cache: !1,
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      livewire.emit("refresh"));
                  }
                });
            }),
            listenSubmit("#addAccountForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#btnAccountSave");
              t.button("loading");
              var a = {
                formSelector: $(this),
                url: $("#indexAccountCreateUrl").val(),
                type: "POST"
              };
              newRecord(a, t, "#add_accounts_modal");
            }),
            listenSubmit("#editAccountForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editAccountSave");
              t.button("loading");
              var a = $("#accountId").val(),
                n = $("#indexAccountUrl").val() + "/" + +a,
                i = { formSelector: $(this), url: n, type: "PUT" };
              $("#accountShowUrl").length
                ? (editRecordWithForm(i, t, "#edit_accounts_modal"),
                  (window.location.href = $("#accountShowUrl").val()))
                : editRecordWithForm(i, t, "#edit_accounts_modal");
            }),
            listen("click", ".account-edit-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#indexAccountUrl").val() + "/" + +t + "/edit",
                    type: "GET",
                    success: function (e) {
                      e.success &&
                        ($("#accountId").val(e.data.id),
                        $("#editName").val(e.data.name),
                        $("#editDescription").val(e.data.description),
                        e.data.status &&
                          $("#editIsActive").val(1).prop("checked", !0),
                        1 == e.data.type
                          ? $("#editDebit").prop("checked", !0)
                          : $("#editCredit").prop("checked", !0),
                        $("#edit_accounts_modal").modal("show"),
                        ajaxCallCompleted());
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listen("click", ".account-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#indexAccountUrl").val() + "/" + +t,
                "",
                $("#Account").val()
              );
            }),
            listenChange("#account_filter_status", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            }),
            listenChange("#account_filter_type", function () {
              window.livewire.emit(
                "changeTypeFilter",
                "account_filter_type",
                $(this).val()
              );
            }),
            listen("click", "#accountResetFilter", function () {
              $("#account_filter_status, #account_filter_type")
                .val(0)
                .trigger("change"),
                hideDropdownManually(
                  $("#accountantFilterBtn"),
                  $(".dropdown-menu")
                );
            }),
            listenHiddenBsModal("#add_accounts_modal", function () {
              resetModalForm("#addAccountForm", "#validationErrorsBox");
            }),
            listenHiddenBsModal("#edit_accounts_modal", function () {
              resetModalForm("#editAccountForm", "#editValidationErrorsBox");
            });
        },
        8277: () => {},
        4376: () => {},
        9960: () => {
          function e(e, t) {
            var a = $(e).val().split(".").pop().toLowerCase();
            return (
              -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
            );
          }
          document.addEventListener("turbo:load", function () {
            $("#adminBirthDate").flatpickr({
              format: "YYYY-MM-DD",
              useCurrent: !0,
              sideBySide: !0,
              maxDate: new Date(),
              locale: $(".userCurrentLanguage").val()
            }),
              $("#editAdminBirthDate").flatpickr({
                format: "YYYY-MM-DD",
                useCurrent: !0,
                sideBySide: !0,
                maxDate: new Date(),
                locale: $(".userCurrentLanguage").val()
              }),
              listenClick(".delete-admin-btn", function (e) {
                var t = $(e.currentTarget).attr("data-id");
                deleteItem($("#adminURL").val() + "/" + t, "", $("#admin").val());
              });
          }),
            listenSubmit("#createAdminForm, #editAdminForm", function () {
              if ("" !== $(".error-msg").text())
                return $(".phoneNumber").focus(), !1;
            }),
            listenChange(".admin-status", function (e) {
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url: $("#adminURL").val() + "/" + +t + "/active-deactive",
                  method: "post",
                  cache: !1,
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      livewire.emit("refresh"));
                  },
                  error: function (e) {
                    manageAjaxErrors(e);
                  }
                });
            }),
            listenChange("#admin_filter_status", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            }),
            listen("click", "#accountResetFilter", function () {
              $("#admin_filter_status").val(0).trigger("change"),
                hideDropdownManually($("#adminFilterBtn"), $(".dropdown-menu"));
            }),
            listenChange(".adminProfileImage", function () {
              var t = e($(this), "#adminErrorBox");
              isEmpty(t) || 0 == t
                ? ($(this).val(""),
                  $("#adminErrorBox").removeClass("d-none hide"),
                  $("#adminErrorBox")
                    .text("The image must be a file of type: jpg, jpeg, png.")
                    .show(),
                  $("[id=adminErrorBox]").focus(),
                  $("html, body").animate({ scrollTop: "0" }, 500),
                  $(".alert").delay(5e3).slideUp(300))
                : ($("#adminErrorBox").html("").hide(),
                  displayDocument(this, "#customValidationErrorsBox", t));
            }),
            listenChange(".adminProfileImage", function () {
              var t = e($(this), "#editAdminErrorBox");
              console.log(t),
                isEmpty(t) || 0 == t
                  ? ($(this).val(""),
                    $("#editAdminErrorBox").removeClass("d-none hide"),
                    $("#editAdminErrorBox")
                      .text("The image must be a file of type: jpg, jpeg, png.")
                      .show(),
                    $("[id=editAdminErrorBox]").focus(),
                    $("html, body").animate({ scrollTop: "0" }, 500),
                    $(".alert").delay(5e3).slideUp(300))
                  : ($("#editAdminErrorBox").html("").hide(),
                    displayDocument(this, "#customValidationErrorsBox", t));
            });
        },
        7684: () => {
          "use strict";
          listen("click", ".advance-payment-delete-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#indexAdvancedPaymentUrl").val() + "/" + t,
              "",
              $("#advancedPayment").val()
            );
          });
        },
        4173: () => {
          "use strict";
          document.addEventListener("turbo:load", function () {
            if (
              !$("#addAdvancedPaymentForm").length &&
              !$("#editAdvancedPaymentsForm").length
            )
              return !1;
            var e = $("#advancedPaymentDate"),
              t = $("#editAdvancedPaymentDate"),
              a = $("#advancePaymentPatientId"),
              n = $("#editPatientId");
            e.length &&
              $("#advancedPaymentDate").flatpickr({
                defaultDate: new Date(),
                dateFormat: "Y-m-d",
                locale: $(".userCurrentLanguage").val()
              });
            t.length &&
              $("#editAdvancedPaymentDate").flatpickr({
                dateFormat: "Y-m-d",
                locale: $(".userCurrentLanguage").val()
              });
            a.length &&
              $("#advancePaymentPatientId").select2({
                dropdownParent: $("#add_advanced_payments_modal")
              });
            n.length &&
              $("#editPatientId").select2({
                dropdownParent: $("#edit_advanced_payments_modal")
              });
          }),
            listenShownBsModal(
              "#add_advanced_payments_modal, #edit_advanced_payments_modal",
              function () {
                $("#patientId, #editPatientId:first").focus(),
                  $("#advancePaymentPatientId").select2({
                    width: "100%",
                    dropdownParent: $("#add_advanced_payments_modal")
                  }),
                  $("#editPatientId").select2({
                    dropdownParent: $("#edit_advanced_payments_modal")
                  });
                var e = Math.random().toString(36).substr(2, 8).toUpperCase();
                $("#receiptNoId").val(e);
              }
            ),
            listenSubmit("#addAdvancedPaymentForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#advancedPaymentSave");
              t.button("loading"),
                $.ajax({
                  url: $("#indexAdvancePaymentCreateUrl").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_advanced_payments_modal").modal("hide"),
                      livewire.emit("refresh"));
                  },
                  error: function (e) {
                    printErrorMessage("#advancedPaymentErrorsBox", e);
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listen("click", ".advance-payment-edit-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: route("advanced-payments.edit", t),
                    type: "GET",
                    success: function (e) {
                      e.success &&
                        ($("#advancePaymentId").val(e.data.id),
                        $("#editPatientId")
                          .val(e.data.patient_id)
                          .trigger("change.select2"),
                        $("#editReceiptNo").val(e.data.receipt_no),
                        $("#editAmount").val(e.data.amount),
                        $(".price-input").trigger("input"),
                        $("#editAdvancedPaymentDate").val(
                          format(e.data.date, "YYYY-MM-DD")
                        ),
                        $("#edit_advanced_payments_modal").modal("show"),
                        ajaxCallCompleted());
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#editAdvancedPaymentsForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editAdvancedPaymentSave");
              t.button("loading");
              var a = $("#advancePaymentId").val();
              $.ajax({
                url: $(".advancedPaymentUrl").val() + "/" + a,
                type: "patch",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_advanced_payments_modal").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  manageAjaxErrors(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_advanced_payments_modal", function () {
              resetModalForm(
                "#addAdvancedPaymentForm",
                "#advancedPaymentErrorsBox"
              ),
                $("#advancedPaymentDate").flatpickr({
                  defaultDate: new Date(),
                  dateFormat: "Y-m-d",
                  locale: $(".userCurrentLanguage").val()
                }),
                $("#advancePaymentPatientId").val("").trigger("change.select2");
            }),
            listenHiddenBsModal("#edit_advanced_payments_modal", function () {
              resetModalForm(
                "#editAdvancedPaymentsForm",
                "#editAdvancedPaymentErrorsBox"
              );
            });
        },
        3362: () => {
          "use strict";
          listenClick(".ambulance-call-delete-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#showAmbulanceCallUrl").val() + "/" + t,
              "",
              $("#ambulanceCalls").val()
            );
          });
        },
        9932: () => {
          "use strict";
          document.addEventListener("turbo:load", function () {
            if (
              !$("#createAmbulanceCall").length &&
              !$("#editAmbulanceCall").length
            )
              return !1;
            var e = $("#callAmbulanceId"),
              t = $("#ambulanceCallPatientId"),
              a = $("#ambulanceCallDate");
            e.length && $("#callAmbulanceId").select2({ width: "100%" }),
              t.length && $("#ambulanceCallPatientId").select2({ width: "100%" }),
              a.length &&
                $("#ambulanceCallDate").flatpickr({
                  format: "YYYY-MM-DD",
                  useCurrent: !0,
                  sideBySide: !0,
                  locale: $(".userCurrentLanguage").val()
                }),
              $(".price-input").trigger("input");
          }),
            listenChange("#callAmbulanceId", function () {
              $("#ambulanceCallDriverName").val(""),
                isEmpty($(this).val()) ||
                  $.ajax({
                    url: $(".getDriverNameUrl").val(),
                    type: "get",
                    dataType: "json",
                    data: { id: $(this).val() },
                    success: function (e) {
                      $("#ambulanceCallDriverName").val(e.data);
                    },
                    error: function (e) {
                      printErrorMessage("#ambulanceCallValidationErrorsBox", e);
                    }
                  });
            }),
            listenSubmit("#createAmbulanceCall, #editAmbulanceCall", function () {
              $("#ambulanceCallSaveBtn").attr("disabled", !0);
            });
        },
        1676: () => {
          "use strict";
          listen("click", ".ambulance-delete-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#indexAmbulanceUrl").val() + "/" + t,
              "",
              $("#Ambulance").val()
            );
          }),
            listenChange(".ambulance-status", function (e) {
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url:
                    $("#indexAmbulanceUrl").val() + "/" + t + "/active-deactive",
                  method: "post",
                  cache: !1,
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      livewire.emit("refresh"));
                  }
                });
            }),
            listenChange("#ambulance_filter_status", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            }),
            listenClick("#ambulanceResetFilter", function () {
              $("#ambulance_filter_status").val(0).trigger("change"),
                hideDropdownManually(
                  $("#ambulanceFilterBtn"),
                  $(".dropdown-menu")
                );
            });
        },
        3616: () => {
          "use strict";
          document.addEventListener("turbo:load", function () {
            if (
              !$("#createAmbulanceForm").length &&
              !$("#editAmbulanceForm").length
            )
              return !1;
            var e = $("#vehicleType"),
              t = $("#createAmbulanceForm"),
              a = $("#editAmbulanceForm");
            e.length && $("#vehicleType").select2({ width: "100%" }),
              t.length &&
                $("#createAmbulanceForm")
                  .find("input:text:visible:first")
                  .focus(),
              a.length &&
                $("#editAmbulanceForm").find("input:text:visible:first").focus();
          }),
            listenSubmit("#createAmbulanceForm, #editAmbulanceForm", function () {
              if (
                ($(".btnSave").attr("disabled", !0),
                "" !== $(".error-msg").text())
              )
                return (
                  $(".phoneNumber").focus(),
                  $(".btnSave").attr("disabled", !1),
                  !1
                );
            }),
            listen(
              "keyup keypress",
              "#createAmbulanceForm, #editAmbulanceForm",
              function (e) {
                if (13 === (e.keyCode || e.which)) return e.preventDefault(), !1;
              }
            );
        },
        770: () => {
          "use strict";
          function e(e) {
            var t = new Date();
            return (
              t.setHours(e.substring(11, 13)),
              t.setMinutes(e.substring(14, 16)),
              t
            );
          }
          var t, a;
          document.addEventListener("turbo:load", function () {
            if (!$("#calendar").length) return !1;
            var e = $("#patientIdAppointment"),
              t = $("#doctorIdAppointment");
            e.length &&
              $("#patientIdAppointment").select2({
                width: "100%",
                dropdownParent: $("#addAppointmentModal")
              });
            t.length &&
              $("#doctorIdAppointment").select2({
                width: "100%",
                dropdownParent: $("#addAppointmentModal")
              });
            var a = document.getElementById("calendar");
            $("#calendar").length &&
              (screenLock(),
              $.ajax({
                url: "calendar-list",
                type: "GET",
                dataType: "json",
                success: function (e) {
                  screenUnLock(),
                    new FullCalendar.Calendar(a, {
                      themeSystem: "bootstrap5",
                      height: 750,
                      locale: $(".getLanguage").val(),
                      headerToolbar: {
                        left: "title",
                        center: "prev,next today",
                        right: "dayGridMonth,timeGridWeek,timeGridDay"
                      },
                      buttonText: {
                        today: $("#todayText").val(),
                        month: $("#monthText").val(),
                        week: $("#weekText").val(),
                        day: $("#dayText").val()
                      },
                      initialDate: new Date(),
                      initialView: "dayGridMonth",
                      editable: !1,
                      selectable: !0,
                      selectMirror: !0,
                      timeZone: "UTC",
                      dayMaxEvents: !0,
                      select: function (e) {
                        $("#opdDateAppointment").val(
                          moment(e.startStr).format("YYYY-MM-DD")
                        );
                        var t = moment().format("YYYY-MM-DD");
                        e.startStr >= t &&
                          1 != $("#isDoctor").val() &&
                          $("#addAppointmentModal").modal("show");
                      },
                      eventDidMount: function (e, t) {
                        $(t).tooltip({ title: e.title, container: "body" });
                      },
                      events: e.data,
                      eventTimeFormat: {
                        hour12: !0,
                        hour: "2-digit",
                        minute: "2-digit"
                      },
                      loading: function (e) {
                        e ||
                          setTimeout(function () {
                            $("#calendar button.fc-today-button")
                              .removeClass("disabled")
                              .prop("disabled", !1);
                          }, 100);
                      },
                      eventClick: function (e) {
                        var t;
                        (t = e.event.id),
                          $.ajax({
                            url: "appointment-detail/" + t,
                            type: "GET",
                            beforeSend: function () {
                              screenLock();
                            },
                            success: function (e) {
                              $("#showPatientName").text(e.data.patient),
                                $("#showDepartmentName").text(e.data.department),
                                $("#showDoctorName").text(e.data.doctor),
                                $("#showOpdDate").text(e.data.opdDate),
                                $("#showStatus").text(e.data.status),
                                $("#showIsCompleted").text(e.data.is_completed),
                                $("#showProblem").text(
                                  (function (e, t) {
                                    var a = "";
                                    if (null != e) {
                                      for (; e.length > 0; )
                                        (a += e.substring(0, t) + "\n"),
                                          (e = e.substring(t));
                                      return a;
                                    }
                                    return "N/A";
                                  })(e.data.problem, 30)
                                ),
                                $(".tooltip ").tooltip("hide"),
                                $("#appointmentDetailModal").modal("show");
                            },
                            complete: function () {
                              screenUnLock();
                            }
                          });
                      }
                    }).render();
                },
                error: function (e) {
                  console.log(e.responseJSON.message);
                }
              }));
          }),
            listenShownBsModal("#addAppointmentModal", function () {
              $("#patientIdAppointment:first").focus();
            }),
            listenClick(".time-interval", function (e) {
              var a = $(e.currentTarget).attr("data-id");
              $(this).data("id") == a &&
                $(this).parent().hasClass("booked") &&
                $(".time-slot-book").css("background-color", "#ffa0a0"),
                (t = $(this).text()),
                $(".time-slot").removeClass("time-slot-book"),
                $(this).parent().addClass("time-slot-book");
            }),
            listenSubmit("#calenderAppointmentForm", function (e) {
              if (null == t || "" == t)
                return (
                  $("#calenderAppointmentErrorsBox")
                    .show()
                    .removeClass("d-none")
                    .html("Please select appointment time slot"),
                  $(".alert-danger")
                    .delay(5e3)
                    .slideUp(300, function () {
                      $(".alert-danger").attr("style", "display:none");
                    }),
                  !1
                );
              e.preventDefault(), screenLock();
              var a = $(this).serialize() + "&time=" + t;
              $.ajax({
                url: $("#calenderAppointmentSaveUrl").val(),
                type: "POST",
                dataType: "json",
                data: a,
                success: function (e) {
                  displaySuccessMessage(e.message),
                    (window.location.href = $("#calenderIndexPage").val());
                },
                error: function (e) {
                  printErrorMessage("#calenderAppointmentErrorsBox", e),
                    screenUnLock();
                }
              });
            });
          var n,
            i,
            r = !1;
          listenChange("#doctorIdAppointment", function () {
            if (
              (r && ($(".error-message").css("display", "none"), (r = !0)),
              $(".error-message").css("display", "none"),
              (a = $(this).val()),
              (r = !0),
              "" !== $("#opdDateAppointment").val())
            ) {
              if (
                ($(".doctor-schedule").css("display", "none"),
                $(".error-message").css("display", "none"),
                $(".available-slot-heading").css("display", "none"),
                $(".color-information").css("display", "none"),
                $(".time-slot").remove(),
                "" == $("#doctorIdAppointment").val())
              )
                return (
                  $("#calenderAppointmentErrorsBox")
                    .show()
                    .html("Please select Doctor"),
                  $("#calenderAppointmentErrorsBox").delay(5e3).fadeOut(),
                  $("#opdDateAppointment").val(""),
                  $("#opdDateAppointment").data("DateTimePicker").clear(),
                  !1
                );
              r = $("#opdDateAppointment").val();
              var t = [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ][new Date(r).getDay()];
              if (null == t || "" == t) return !1;
              if (
                ($.ajax({
                  type: "GET",
                  url: $("#doctorScheduleList").val(),
                  data: { day_name: t, doctor_id: a },
                  success: function (t) {
                    if (t.success && "" != t.data)
                      if (0 != t.data.scheduleDay.length) {
                        var a = r + " " + t.data.scheduleDay[0].available_from,
                          i = r + " " + t.data.scheduleDay[0].available_to,
                          s = t.data.perPatientTime[0].per_patient_time.split(
                            ":"
                          ),
                          o = 60 * +s[0] + +s[1],
                          d = e(a),
                          l = e(i);
                        if (
                          (n = (function (e, t, a) {
                            for (var n = []; e < t; )
                              n.push(e.toTimeString().substring(0, 5)),
                                e.setMinutes(e.getMinutes() + a);
                            return n;
                          })(d, l, o)).length > 0
                        ) {
                          var c;
                          $(".available-slot-heading").css("display", "block"),
                            $(".color-information").css("display", "block");
                          var u = "";
                          for (c = 0; c < n.length; ++c) {
                            var m = [{ index: c, timeSlot: n[c] }];
                            u += prepareTemplateRender(
                              "#appointmentSlotTemplate",
                              m
                            );
                          }
                          $(".available-slot").append(u);
                        }
                        "00:00:00" != t.data.scheduleDay[0].available_from &&
                        "00:00:00" != t.data.scheduleDay[0].available_to &&
                        a != i
                          ? ($(".doctor-schedule").css("display", "block"),
                            $(".color-information").css("display", "block"),
                            $(".day-name").html(
                              t.data.scheduleDay[0].available_on
                            ),
                            $(".schedule-time").html(
                              "[" +
                                t.data.scheduleDay[0].available_from +
                                " - " +
                                t.data.scheduleDay[0].available_to +
                                "]"
                            ))
                          : ($(".doctor-schedule").css("display", "none"),
                            $(".color-information").css("display", "none"),
                            $(".error-message").css("display", "block"),
                            $(".error-message").html(
                              "Doctor Schedule not available this date."
                            ));
                      } else
                        $(".doctor-schedule").css("display", "none"),
                          $(".color-information").css("display", "none"),
                          $(".error-message").css("display", "block"),
                          $(".error-message").html(
                            "Doctor Schedule not available this date."
                          );
                  }
                }),
                $(".isCreate").val())
              ) {
                setTimeout(function () {
                  var e = null;
                  $(".isCreate").val() &&
                    (e = { editSelectedDate: r, doctor_id: a }),
                    $.ajax({
                      url: $("#getBookingSlot").val(),
                      type: "GET",
                      data: e,
                      success: function (e) {
                        (i = e.data.bookingSlotArr),
                          e.data.hasOwnProperty("onlyTime")
                            ? (e.data.bookingSlotArr.length > 0 &&
                                ((editTimeSlot = e.data.onlyTime.toString()),
                                $.each(e.data.bookingSlotArr, function (e, t) {
                                  $.each(n, function (e, a) {
                                    t == a &&
                                      $(".time-interval").each(function () {
                                        $(this).data("id") == e &&
                                          $(this).html() != editTimeSlot &&
                                          ($(this)
                                            .parent()
                                            .css({
                                              "background-color": "#ffa721",
                                              border: "1px solid #ffa721",
                                              color: "#ffffff"
                                            }),
                                          $(this).parent().addClass("booked"),
                                          $(this)
                                            .parent()
                                            .children()
                                            .prop("disabled", !0));
                                      });
                                  });
                                })),
                              $(".time-interval").each(function () {
                                $(this).html() == editTimeSlot &&
                                  e.data.bookingSlotArr.length > 0 &&
                                  ($(this).parent().addClass("time-slot-book"),
                                  $(this).parent().removeClass("booked"),
                                  $(this)
                                    .parent()
                                    .children()
                                    .prop("disabled", !1),
                                  $(this).click());
                              }))
                            : i.length > 0 &&
                              $.each(i, function (e, t) {
                                $.each(n, function (e, a) {
                                  t == a &&
                                    $(".time-interval").each(function () {
                                      $(this).data("id") == e &&
                                        ($(this)
                                          .parent()
                                          .addClass("time-slot-book"),
                                        $(".time-slot-book").css({
                                          "background-color": "#ffa721",
                                          border: "1px solid #ffa721",
                                          color: "#ffffff"
                                        }),
                                        $(this).parent().addClass("booked"),
                                        $(this)
                                          .parent()
                                          .children()
                                          .prop("disabled", !0));
                                    });
                                });
                              });
                      }
                    });
                }, 200);
              }
            }
          }),
            listenHiddenBsModal("#addAppointmentModal", function () {
              resetModalForm(
                "#calenderAppointmentForm",
                "#calenderAppointmentErrorsBox"
              ),
                $(".day-name").html(""),
                $(".schedule-time").html(""),
                $(".doctor-schedule").css("display", "none"),
                $(".error-message").css("display", "none"),
                $(".available-slot-heading").css("display", "none"),
                $(".available-slot").html(""),
                $(".color-information").css("display", "none"),
                (t = null),
                $("#patientIdAppointment, #doctorIdAppointment")
                  .val("")
                  .trigger("change.select2");
            });
        },
        2880: () => {
          "use strict";
          function e(e, t, a) {
            return (
              t in e
                ? Object.defineProperty(e, t, {
                    value: a,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                  })
                : (e[t] = a),
              e
            );
          }
          document.addEventListener("turbo:load", function () {
            var t = $("#time_range"),
              a = moment().startOf("week"),
              n = moment().endOf("week"),
              i = "",
              r = "";
            $("#appointmentStatus").length && $("#appointmentStatus").select2();
            function s(e, t) {
              $("#time_range").html(
                e.format("MMM D, YYYY") + " - " + t.format("MMM D, YYYY")
              );
            }
            if (t.length) {
              var o;
              Lang.setLocale($(".userCurrentLanguage").val()),
                t.daterangepicker(
                  {
                    startDate: a,
                    endDate: n,
                    locale: {
                      customRangeLabel: Lang.get("messages.common.custom"),
                      applyLabel: Lang.get("messages.common.apply"),
                      cancelLabel: Lang.get("messages.common.cancel"),
                      fromLabel: Lang.get("messages.common.from"),
                      toLabel: Lang.get("messages.common.to"),
                      monthNames: [
                        Lang.get("messages.months.jan"),
                        Lang.get("messages.months.feb"),
                        Lang.get("messages.months.mar"),
                        Lang.get("messages.months.apr"),
                        Lang.get("messages.months.may"),
                        Lang.get("messages.months.jun"),
                        Lang.get("messages.months.jul"),
                        Lang.get("messages.months.aug"),
                        Lang.get("messages.months.sep"),
                        Lang.get("messages.months.oct"),
                        Lang.get("messages.months.nov"),
                        Lang.get("messages.months.dec")
                      ],
                      daysOfWeek: [
                        Lang.get("messages.weekdays.sun"),
                        Lang.get("messages.weekdays.mon"),
                        Lang.get("messages.weekdays.tue"),
                        Lang.get("messages.weekdays.wed"),
                        Lang.get("messages.weekdays.thu"),
                        Lang.get("messages.weekdays.fri"),
                        Lang.get("messages.weekdays.sat")
                      ]
                    },
                    ranges:
                      ((o = {}),
                      e(o, Lang.get("messages.appointment.today"), [
                        moment(),
                        moment()
                      ]),
                      e(o, Lang.get("messages.appointment.yesterday"), [
                        moment().subtract(1, "days"),
                        moment().subtract(1, "days")
                      ]),
                      e(o, Lang.get("messages.appointment.this_week"), [
                        moment().startOf("week"),
                        moment().endOf("week")
                      ]),
                      e(o, Lang.get("messages.appointment.last_7_days"), [
                        moment().subtract(6, "days"),
                        moment()
                      ]),
                      e(o, Lang.get("messages.appointment.last_30_days"), [
                        moment().subtract(29, "days"),
                        moment()
                      ]),
                      e(o, Lang.get("messages.appointment.this_month"), [
                        moment().startOf("month"),
                        moment().endOf("month")
                      ]),
                      e(o, Lang.get("messages.appointment.last_month"), [
                        moment().subtract(1, "month").startOf("month"),
                        moment().subtract(1, "month").endOf("month")
                      ]),
                      o)
                  },
                  s
                ),
                s(a, n),
                t.on("apply.daterangepicker", function (e, t) {
                  (i = t.startDate.format("YYYY-MM-D  H:mm:ss")),
                    (r = t.endDate.format("YYYY-MM-D  H:mm:ss")),
                    window.livewire.emit("changeDateFilter", "statusFilter", [
                      i,
                      r
                    ]);
                });
            }
            function d(e, t, a, n) {
              swal({
                title: Lang.get("messages.appointment.change_status"),
                text:
                  Lang.get("messages.appointment.are_you_sure_want_to_change") +
                  " " +
                  a +
                  " ?",
                type: "warning",
                icon: "warning",
                showCancelButton: !0,
                closeOnConfirm: !1,
                confirmButtonColor: "#50cd89",
                showLoaderOnConfirm: !0,
                buttons: {
                  confirm: Lang.get("messages.common.yes"),
                  cancel: Lang.get("messages.common.no")
                }
              }).then(function (t) {
                t &&
                  (function (e, t, a, n) {
                    $.ajax({
                      url: e,
                      type: "POST",
                      success: function (e) {
                        e.success && Livewire.emit("refresh"),
                          swal({
                            title: Lang.get(
                              "messages.appointment.changed_appointment"
                            ),
                            text:
                              a +
                              " " +
                              Lang.get("messages.appointment.has_been_changed"),
                            icon: "success",
                            confirmButtonColor: "#50cd89",
                            buttons: { confirm: Lang.get("messages.common.ok") },
                            timer: 2e3
                          });
                      },
                      error: function (e) {
                        swal({
                          title: "Error",
                          icon: "error",
                          text: e.responseJSON.message,
                          type: "error",
                          confirmButtonColor: "#50cd89",
                          buttons: { confirm: Lang.get("messages.common.ok") },
                          timer: 5e3
                        });
                      }
                    });
                  })(e, 0, a);
              });
            }
            listenClick(".appointment-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $(".appointmentURL").val() + "/" + t,
                "",
                $("#Appointment").val()
              );
            }),
              listenChange("#appointmentStatus", function () {
                var e = $(this).val();
                window.livewire.emit("changeFilter", "statusFilter", [i, r, e]);
              }),
              listenClick("#appointmentResetFilter", function () {
                var e = $("#time_range");
                (i = e
                  .data("daterangepicker")
                  .setStartDate(moment().startOf("week").format("MM/DD/YYYY"))),
                  (r = e
                    .data("daterangepicker")
                    .setEndDate(moment().endOf("week").format("MM/DD/YYYY"))),
                  $("#appointmentStatus").val(2).trigger("change"),
                  hideDropdownManually(
                    $("#appointmentFilterBtn"),
                    $(".dropdown-menu")
                  );
              }),
              listenClick(".appointment-complete-status", function (e) {
                var t = $(e.currentTarget).attr("data-id");
                d(
                  $(".appointmentURL").val() + "/" + t + "/status",
                  0,
                  Lang.get("messages.web_menu.appointment") +
                    " " +
                    Lang.get("messages.user.status")
                );
              }),
              listenClick(".cancel-appointment", function () {
                var e = $(this).attr("data-id");
                cancelAppointment(
                  $(".appointmentURL").val() + "/" + e + "/cancel",
                  "",
                  Lang.get("messages.web_menu.appointment")
                );
              });
          });
        },
        3879: () => {
          "use strict";
          document.addEventListener("turbo:load", function () {
            if (
              !$("#appointmentForm").length &&
              !$("#editAppointmentForm").length
            )
              return !1;
            var e,
              t,
              a,
              n = function (e) {
                var t = new Date();
                return (
                  t.setHours(e.substring(11, 13)),
                  t.setMinutes(e.substring(14, 16)),
                  t
                );
              },
              i = $("#appointmentPatientId"),
              r = $("#appointmentDoctorId"),
              s = $("#appointmentDepartmentId");
            i.length &&
              ($("#appointmentPatientId").select2({ width: "100%" }),
              $("#appointmentPatientId").first().focus()),
              r.length && $("#appointmentDoctorId").select2({ width: "100%" }),
              s.length &&
                $("#appointmentDepartmentId").select2({ width: "100%" }),
              Lang.setLocale($(".userCurrentLanguage").val());
            var o,
              d = $(".opdDate").flatpickr({
                enableTime: !1,
                minDate: moment(new Date()).format("YYYY-MM-DD"),
                dateFormat: "Y-m-d",
                locale: $(".userCurrentLanguage").val(),
                onChange: function (i, r, s) {
                  if (!isEmpty(r)) {
                    if (
                      ($(".doctor-schedule").css("display", "none"),
                      $(".error-message").css("display", "none"),
                      $(".available-slot-heading").css("display", "none"),
                      $(".color-information").css("display", "none"),
                      $(".available-slot").css("display", "none"),
                      $(".time-slot").remove(),
                      "" == $("#appointmentDepartmentId").val())
                    )
                      return (
                        $("#createAppointmentErrorsBox")
                          .show()
                          .html(
                            Lang.get(
                              "messages.appointment.please_select_doctor_department"
                            )
                          ),
                        $("#createAppointmentErrorsBox").delay(5e3).fadeOut(),
                        $(".opdDate").val(""),
                        d.clear(),
                        !1
                      );
                    if ("" == $("#appointmentDoctorId").val())
                      return (
                        $("#createAppointmentErrorsBox")
                          .show()
                          .html(
                            Lang.get("messages.appointment.please_select_doctor")
                          ),
                        $("#createAppointmentErrorsBox").delay(5e3).fadeOut(),
                        $(".opdDate").val(""),
                        d.clear(),
                        !1
                      );
                    var l = [
                      "Sunday",
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday"
                    ][new Date(r).getDay()];
                    if (((e = r), null == l || "" == l)) return !1;
                    if (
                      ($.ajax({
                        type: "GET",
                        url: $(".doctorScheduleList").val(),
                        data: { day_name: l, doctor_id: o },
                        success: function (a) {
                          if (a.success && "" != a.data)
                            if (0 != a.data.scheduleDay.length) {
                              var i = "";
                              moment(new Date()).format("YYYY-MM-DD") === r
                                ? ((i = moment().ceil(
                                    moment
                                      .duration(
                                        a.data.perPatientTime[0].per_patient_time
                                      )
                                      .asMinutes(),
                                    "minute"
                                  )),
                                  (i = moment(i.toString()).format("H:mm:ss")))
                                : (i = a.data.scheduleDay[0].available_from);
                              var s = e + " " + i,
                                o = e + " " + a.data.scheduleDay[0].available_to,
                                d = a.data.perPatientTime[0].per_patient_time.split(
                                  ":"
                                ),
                                l = 60 * +d[0] + +d[1],
                                c = n(s),
                                u = n(o);
                              if (
                                (t = (function (e, t, a) {
                                  for (var n = []; e < t; )
                                    n.push(e.toTimeString().substring(0, 5)),
                                      e.setMinutes(e.getMinutes() + a);
                                  return n;
                                })(c, u, l)).length > 0
                              ) {
                                var m;
                                $(".available-slot-heading").css(
                                  "display",
                                  "block"
                                ),
                                  $(".color-information").css("display", "block"),
                                  $(".available-slot").css("display", "block");
                                var _ = "";
                                for (m = 0; m < t.length; ++m) {
                                  var h = [{ index: m, timeSlot: t[m] }];
                                  _ += prepareTemplateRender(
                                    "#appointmentSlotTemplate",
                                    h
                                  );
                                  if($(".isEdit").val() == 1){
                                    console.log(a);
                                    $(".available-slot").append(`
                                    <div class="time-slot">
                                    <span class="time-interval" data-id=${index}">${t[m]}</span>
                                    </div>`);
                                  }
                                }
                                  if($(".isCreate").val() == 1){
                                    $(".available-slot").append(_);
                                  }
                              }
                              "00:00:00" != i &&
                              "00:00:00" != a.data.scheduleDay[0].available_to &&
                              s != o
                                ? ($(".doctor-schedule").css("display", "block"),
                                  $(".color-information").css("display", "block"),
                                  $(".available-slot").css("display", "block"),
                                  $(".day-name").html(
                                    a.data.scheduleDay[0].available_on
                                  ),
                                  $(".schedule-time").html(
                                    "[" +
                                      i +
                                      " - " +
                                      a.data.scheduleDay[0].available_to +
                                      "]"
                                  ))
                                : ($(".doctor-schedule").css("display", "none"),
                                  $(".color-information").css("display", "none"),
                                  $(".available-slot").css("display", "none"),
                                  $(".error-message").css("display", "block"),
                                  $(".error-message").html(
                                    Lang.get(
                                      "messages.appointment.doctor_schedule_not_available_on_this_date"
                                    )
                                  ));
                            } else
                              $(".doctor-schedule").css("display", "none"),
                                $(".color-information").css("display", "none"),
                                $(".available-slot").css("display", "none"),
                                $(".error-message").css("display", "block"),
                                $(".error-message").html(
                                  Lang.get(
                                    "messages.appointment.doctor_schedule_not_available_on_this_date"
                                  )
                                );
                        },
                        error: function (e) {
                          displayErrorMessage(e.responseJSON.message);

                        }
                      }),
                      $(".isCreate").val() || $(".isEdit").val())
                    ) {
                      setTimeout(function () {
                        if ($(".isCreate").val())
                          var n = { editSelectedDate: e, doctor_id: o };
                        else
                          n = {
                            editSelectedDate: e,
                            editId: $("#appointmentEditsID").val(),
                            doctor_id: o
                          };
                        $.ajax({
                          url: $(".getBookingSlot").val(),
                          type: "GET",
                          data: n,
                          success: function (e) {
                            (a = e.data.bookingSlotArr),
                              e.data.hasOwnProperty("onlyTime")
                                ? (e.data.bookingSlotArr.length > 0 &&
                                    ((c = e.data.onlyTime.toString()),
                                    $.each(
                                      e.data.bookingSlotArr,
                                      function (e, a) {
                                        $.each(t, function (e, t) {
                                          a == t &&
                                            $(".time-interval").each(function () {
                                              $(this).data("id") == e &&
                                                $(this).html() != c &&
                                                ($(this)
                                                  .parent()
                                                  .css({
                                                    "background-color": "#ffa721",
                                                    border: "1px solid #ffa721",
                                                    color: "#ffffff"
                                                  }),
                                                $(this)
                                                  .parent()
                                                  .addClass("booked"),
                                                $(this)
                                                  .parent()
                                                  .children()
                                                  .prop("disabled", !0));
                                            });
                                        });
                                      }
                                    )),
                                  $(".time-interval").each(function () {
                                    $(this).html() == c &&
                                      e.data.bookingSlotArr.length > 0 &&
                                      ($(this)
                                        .parent()
                                        .addClass("time-slot-book"),
                                      $(this).parent().removeClass("booked"),
                                      $(this)
                                        .parent()
                                        .children()
                                        .prop("disabled", !1),
                                      $(this).click());
                                  }))
                                : a.length > 0 &&
                                  $.each(a, function (e, a) {
                                    $.each(t, function (e, t) {
                                      a == t &&
                                        $(".time-interval").each(function () {
                                          $(this).data("id") == e &&
                                            ($(this)
                                              .parent()
                                              .addClass("time-slot-book"),
                                            $(".time-slot-book").css({
                                              "background-color": "#ffa721",
                                              border: "1px solid #ffa721",
                                              color: "#ffffff"
                                            }),
                                            $(this).parent().addClass("booked"),
                                            $(this)
                                              .parent()
                                              .children()
                                              .prop("disabled", !0));
                                        });
                                    });
                                  });
                          }
                        });
                      }, 200);
                    }
                  }
                }
              });
            listenChange("#appointmentDepartmentId", function () {
              $(".error-message").css("display", "none"),
                d.clear(),
                $(".doctor-schedule").css("display", "none"),
                $(".available-slot-heading").css("display", "none"),
                $(".available-slot").css("display", "none"),
                $.ajax({
                  url: $(".doctorDepartmentUrl").val(),
                  type: "get",
                  dataType: "json",
                  data: { id: $(this).val() },
                  success: function (e) {
                    $("#appointmentDoctorId").empty(),
                      $("#appointmentDoctorId").append(
                        $('<option value="">Select Doctor</option>')
                      ),
                      $.each(e.data, function (e, t) {
                        $("#appointmentDoctorId").append(
                          $("<option></option>").attr("value", e).text(t)
                        );
                      });
                  }
                });
            });
            var l,
              c,
              u = !1;
            listenChange("#appointmentDoctorId", function () {
              u &&
                ($(".doctor-schedule").css("display", "none"),
                $(".available-slot-heading").css("display", "none"),
                $(".available-slot").css("display", "none"),
                $(".error-message").css("display", "none"),
                d.clear(),
                (u = !0)),
                $(".error-message").css("display", "none"),
                (o = $(this).val()),
                (u = !0);
            }),
              $(".isEdit").val() &&
                ($("#appointmentDoctorId").trigger("change", function (e) {
                  o = $(this).val();
                }),
                $(".opdDate").trigger("dp.change", function () {
                  new Date($(this).val());
                })),
              listenClick(".time-interval", function (e) {
                var t = $(e.currentTarget).attr("data-id");
                $(this).data("id") == t &&
                  $(this).parent().hasClass("booked") &&
                  $(".time-slot-book").css("background-color", "#ffa0a0"),
                  (l = $(this).text()),
                  $(".time-slot").removeClass("time-slot-book"),
                  $(this).parent().addClass("time-slot-book");
              }),
              listenSubmit("#appointmentForm", function (e) {
                if (null == l || "" == l)
                  return (
                    $("#createAppointmentErrorsBox")
                      .show()
                      .removeClass("d-none")
                      .html(
                        Lang.get(
                          "messages.appointment.please_select_appointment_time_slot"
                        )
                      ),
                    !1
                  );
                e.preventDefault(), screenLock();
                var t = $(this).serialize() + "&time=" + l;
                $.ajax({
                  url: $("#saveAppointmentURLID").val(),
                  type: "POST",
                  dataType: "json",
                  data: t,
                  success: function (e) {
                    displaySuccessMessage(e.message),
                      (window.location.href = $(".appointmentIndexPage").val());
                  },
                  error: function (e) {
                    printErrorMessage("#createAppointmentErrorsBox", e),
                      screenUnLock();
                  },
                  complete: function () {
                    processingBtn("#appointmentForm", "#saveAppointment");
                  }
                });
              }),
              listenClick(".time-interval", function () {
                c = $(this).text();
              }),
              listenSubmit("#editAppointmentForm", function (e) {
                if (null == c || "" == c)
                  return (
                    $("#editAppointmentErrorsBox")
                      .show()
                      .html(
                        Lang.get(
                          "messages.appointment.please_select_appointment_time_slot"
                        )
                      ),
                    !1
                  );
                e.preventDefault(), screenLock();
                var t = $(this).serialize() + "&time=" + c;
                $.ajax({
                  url: $("#appointmentUpdateUrl").val(),
                  type: "POST",
                  dataType: "json",
                  data: t,
                  success: function (e) {
                    displaySuccessMessage(e.message),
                      (window.location.href = $(".appointmentIndexPage").val());
                  },
                  error: function (e) {
                    printErrorMessage("#editAppointmentErrorsBox", e),
                      screenUnLock();
                  }
                });
              });
          });
        },
        6539: () => {},
        5775: () => {
          "use strict";
          listenClick(".bed-assign-delete-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#bedAssignUrl").val() + "/" + t,
              "",
              $("#bedAssign").val()
            );
          }),
            listenChange(".bed-assign-status", function (e) {
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url: $("#bedAssignUrl").val() + "/" + +t + "/active-deactive",
                  method: "post",
                  cache: !1,
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      Livewire.emit("refresh"));
                  }
                });
            }),
            listen("click", "#bedAssignResetFilter", function () {
              $("#bed_assigns_filter_status").val(0).trigger("change"),
                hideDropdownManually(
                  $("#bedAssignFilterBtn"),
                  $(".dropdown-menu")
                );
            }),
            listenChange("#bed_assigns_filter_status", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            });
        },
        5792: () => {
          "use strict";
          document.addEventListener("turbo:load", function () {
            if (
              ($("#BedAssignDate").flatpickr({
                enableTime: !0,
                locale: $(".userCurrentLanguage").val(),
                dateFormat: "Y-m-d H:i",
                onChange: function (t, a, n) {
                  var i = moment($("#assignDate").val()).add(1, "days").format();
                  void 0 !== e && e.set("minDate", i);
                }
              }),
              $("#editBedAssign").length)
            ) {
              setTimeout(function () {
                $("#caseId").trigger("change"),
                  $("#BedAssignDate").trigger("dp.change");
              }, 300);
              var t = $("#BedAssignDischargeDate").flatpickr({
                  enableTime: !0,
                  dateFormat: "Y-m-d H:i",
                  locale: $(".userCurrentLanguage").val()
                }),
                a = moment($("#BedAssignDate").val()).add(1, "days").format();
              t.set("minDate", a);
            }
            if (!$("#createBedAssign").length && !$("#editBedAssign").length)
              return !1;
            var n = $("#caseId"),
              i = $("#BedAssignBedId"),
              r = $("#ipdPatientId");
            n.length &&
              ($("#caseId").select2({ width: "100%" }),
              $("#caseId").first().focus()),
              i.length && $("#BedAssignBedId").select2({ width: "100%" }),
              r.length &&
                $("#ipdPatientId").select2({
                  placeholder: "Select IPD Patient",
                  width: "100%"
                });
          });
          var e = void 0;
          listenSubmit("#createBedAssign, #editBedAssign", function () {
            $("#saveBtn").attr("disabled", !0),
              "" !== $("#validationErrorsBox").text() &&
                $("#BedAssignSaveBtn").attr("disabled", !1);
          }),
            listenChange("#caseId", function () {
              "" !== $(this).val() &&
                $.ajax({
                  url: $("#ipdPatientListUrl").val(),
                  type: "get",
                  dataType: "json",
                  data: { id: $(this).val() },
                  success: function (e) {
                    0 !== e.data.length
                      ? ($("#ipdPatientId").empty(),
                        $("#ipdPatientId").removeAttr("disabled"),
                        $(".isEdit").val()
                          ? $.each(e.data, function (e, t) {
                              $(".ipdPatientId").val() == t
                                ? $("#ipdPatientId").append(
                                    $("<option></option>")
                                      .attr("value", e)
                                      .attr("selected", !0)
                                      .text(t)
                                  )
                                : $("#ipdPatientId").append(
                                    $("<option></option>")
                                      .attr("value", e)
                                      .text(t)
                                  );
                            })
                          : $.each(e.data, function (e, t) {
                              $("#ipdPatientId").append(
                                $("<option></option>").attr("value", e).text(t)
                              );
                            }))
                      : $("#ipdPatientId").prop("disabled", !0);
                  }
                }),
                $("#ipdPatientId").empty(),
                $("#ipdPatientId").append(
                  "<option>No IPD Patient Found</option>"
                ),
                $("#ipdPatientId").prop("disabled", !0);
            });
        },
        8872: () => {
          listenClick(".bed-type-edit-btn", function (e) {
            if (!$(".ajaxCallIsRunning").val()) {
              ajaxCallInProgress();
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url: $("#bedTypesUrl").val() + "/" + t + "/edit",
                  type: "GET",
                  success: function (e) {
                    if (e.success) {
                      var t = e.data;
                      $("#bedTypeId").val(t.id),
                        $("#BedTypeEditTitle").val(t.title),
                        $("#BedTypeEditDescription").val(t.description),
                        $("#edit_bed_types_modal").modal("show"),
                        ajaxCallCompleted();
                    }
                  },
                  error: function (e) {
                    manageAjaxErrors(e);
                  }
                });
            }
          }),
            listenClick(".bed-type-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#bedTypesUrl").val() + "/" + t,
                "",
                $("#bedType").val()
              );
            }),
            listenSubmit("#addNewBedTypeForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#BedBtnSave");
              t.button("loading"),
                $.ajax({
                  url: $("#bedTypesCreateUrl").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_bed_types_modal").modal("hide"),
                      livewire.emit("refresh"));
                  },
                  error: function (e) {
                    printErrorMessage("#validationErrorsBox", e);
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listenSubmit("#BedTypeEditForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#BedTyeBtnEditSave");
              t.button("loading");
              var a = $("#bedTypeId").val();
              $.ajax({
                url: $("#bedTypesUrl").val() + "/" + a,
                type: "put",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_bed_types_modal").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_bed_types_modal", function () {
              resetModalForm("#addNewBedTypeForm", "#validationErrorsBox");
            }),
            listenHiddenBsModal("#edit_bed_types_modal", function () {
              resetModalForm("#BedTypeEditForm", "#editValidationErrorsBox");
            });
        },
        318: () => {},
        9786: () => {},
        2383: () => {},
        1882: () => {
          "use strict";
          listenClick(".bed-delete-btn", function (e) {
            var t = $(e.currentTarget).data("id");
            deleteItem(
              $(".bedUrl").val() + "/" + t,
              " ",
              Lang.get("messages.patient_admission.bed")
            );
          }),
            listenChange(".bed-status", function (e) {
              var t,
                a = $(e.currentTarget).data("id");
              (t = a),
                $.ajax({
                  url: $(".bedUrl").val() + "/" + t + "/active-deactive",
                  method: "post",
                  cache: !1,
                  success: function (e) {
                    e.success && livewire.emit("refresh");
                  }
                });
            }),
            listenChange("#bed_filter_status", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            }),
            listenClick("#bedResetFilter", function () {
              $("#bed_filter_status").val(0).trigger("change"),
                hideDropdownManually(
                  $("#bedAssignFilterBtn"),
                  $(".dropdown-menu")
                );
            });
        },
        9205: () => {},
        7603: () => {
          "use strict";
          function e(e) {
            $(e).select2({ placeholder: "Select Bed Type", width: "100%" });
          }
          function t() {
            var t = 1;
            if (
              ($(".bulk-beds-item-container>tr").each(function () {
                $(this).find(".item-number").text(t), t++;
              }),
              t - 1 == 0)
            ) {
              var a = $("#uniqueId").val(),
                n = { services: JSON.parse($("#bedTypes").val()), uniqueId: a },
                i = prepareTemplateRender("#bulkBedActionTemplate", n);
              $(".bulk-beds-item-container").append(i), e(".bedType"), a++;
            }
          }
          document.addEventListener("turbo:load", function () {
            if (!$("#bulkBedsForm").length) return !1;
            e(".bedType");
          }),
            listenClick("#addNewBedItem", function () {
              var a = $("#uniqueId").val(),
                n = { bedTypes: JSON.parse($("#bedTypes").val()), uniqueId: a },
                i = prepareTemplateRender("#bulkBedActionTemplate", n);
              $(".bulk-beds-item-container").append(i),
                e(".bedType"),
                a++,
                $("#uniqueId").val(a),
                t();
            }),
            listenClick(".delete-invoice-item", function () {
              $(this).parents("tr").remove(), t();
            }),
            listenSubmit("#bulkBedsForm", function (e) {
              e.preventDefault(), $(".bulk-button").prop("disabled", !0);
              var t = new FormData($(this)[0]);
              $.ajax({
                url: $("#bulkBedSaveUrl").val(),
                type: "POST",
                dataType: "json",
                data: t,
                processData: !1,
                contentType: !1,
                success: function (e) {
                  displaySuccessMessage(e.message),
                    $(".bulk-button").prop("disabled", !1),
                    (window.location.href = $("#bulkBedUrl").val());
                },
                error: function (e) {
                  printErrorMessage("#validationErrorsBox", e),
                    $(".bulk-button").prop("disabled", !1);
                }
              });
            });
        },
        295: () => {
          "use strict";
          document.addEventListener("turbo:load", function () {
            if (!$("#addNewBedsForm").length && !$("#EditBedsForm").length)
              return !1;
            $("#editBedType").length &&
              $("#editBedType").select2({
                width: "100%",
                dropdownParent: $("#edit_beds_modal")
              });
          }),
            listenSubmit("#addNewBedsForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#BedSaveBtn");
              t.button("loading"),
                $.ajax({
                  url: $("#bedCreateUrl").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_beds_modal").modal("hide"),
                      livewire.emit("refresh"));
                  },
                  error: function (e) {
                    printErrorMessage("#validationErrorsBox", e);
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listenClick(".bed-edit-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).data("id");
                (t = a),
                  $.ajax({
                    url: $(".bedUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      e.success &&
                        ($("#bedId").val(e.data.id),
                        $("#editBedName").val(e.data.name),
                        $("#editBedType")
                          .val(e.data.bed_type)
                          .trigger("change.select2"),
                        $("#editBedDescription").val(e.data.description),
                        $("#editBedCharge").val(e.data.charge),
                        $(".price-input").trigger("input"),
                        $("#edit_beds_modal").modal("show"),
                        ajaxCallCompleted());
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#EditBedsForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#btnEditSave");
              t.button("loading");
              var a = $("#bedId").val();
              $.ajax({
                url: $(".bedUrl").val() + "/" + a,
                type: "patch",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_beds_modal").modal("hide"),
                    $("#bedDetailShowUrl").length
                      ? (window.location.href = $("#bedDetailShowUrl").val())
                      : livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_beds_modal", function () {
              resetModalForm("#addNewBedsForm", "#validationErrorsBox"),
                $("#bedType").trigger("change.select2");
            }),
            listenHiddenBsModal("#edit_beds_modal", function () {
              resetModalForm("#EditBedsForm", "#editValidationErrorsBox");
            }),
            listenShownBsModal("#add_beds_modal", function () {
              $("#bedType").select2({
                width: "100%",
                dropdownParent: $("#add_beds_modal")
              });
            });
        },
        1669: () => {
          "use strict";
          listenClick(".bill-delete-btn", function (e) {
            var t = $(e.currentTarget).data("id");
            deleteItem($("#indexBillUrl").val() + "/" + t, "", $("#Bill").val());
          });
        },
        7565: () => {
          "use strict";
          document.addEventListener("turbo:load", function () {
            if (!$("#editBillPatientAdmissionId").length) return !1;
            setTimeout(function () {
              $("#patientAdmissionId").val(
                $("#editBillPatientAdmissionId").val()
              ),
                $("#patientAdmissionId").trigger("change");
            }, 500);
          });
        },
        974: () => {
          "use strict";
          document.addEventListener("turbo:load", function () {
            if (!$("#billForm").length) return !1;
            var t = $("#female"),
              a = $("#male"),
              n = $("#patient_id"),
              i = $("#patientAdmissionId"),
              r = $("#bill_date"),
              s = $("#editBillDate");
            $('input:text:not([readonly="readonly"])').first().blur(),
              t.length && $("#female").attr("disabled", !0);
            a.length && $("#male").attr("disabled", !0);
            n.length && $("#patient_id").select2({ width: "100%" });
            i.length && $("#patientAdmissionId").select2({ width: "100%" });
            r.length &&
              $("#bill_date").flatpickr({
                enableTime: !0,
                defaultDate: new Date(),
                dateFormat: "Y-m-d H:i",
                locale: $(".userCurrentLanguage").val()
              });
            s.length &&
              $("#editBillDate").flatpickr({
                enableTime: !0,
                dateFormat: "Y-m-d H:i",
                locale: $(".userCurrentLanguage").val()
              });
            e(".accountId");
          });
          var e = function (e) {
            $(e).select2({ placeholder: "Select Medicine", width: "100%" });
          };
          listenClick("#addBillItem", function () {
            var a = $(".uniqueId").val(),
              n = {
                medicines: JSON.parse($(".associateMedicines").val()),
                uniqueId: a
              },
              i = prepareTemplateRender("#billItemTemplate", n);
            $(".bill-item-container").append(i), e(".medicineId"), a++, t();
          });
          var t = function () {
            var e = 1;
            $(".bill-item-container>tr").each(function () {
              $(this).find(".item-number").text(e), e++;
            }),
              e - 1 == 0 &&
                $("#billTbl tbody").append(
                  '<tr><td class="text-center item-number">1</td><td class="table__item-desc"><input class="form-control itemName" required name="item_name[]" type="text"></td><td class="table__qty"><input class="form-control qty quantity" required name="qty[]" type="text"></td><td><input class="form-control price-input price" required name="price[]" type="text"></td><td class="amount text-right itemTotal"></td><td class="text-center"><i class="fa fa-trash text-danger delete-bill-bulk-item pointer"></i></td></tr>'
                );
          };
          listenClick(".delete-bill-bulk-item", function () {
            $(this).parents("tr").remove(), t(), i();
          });
          var a = function (e) {
            return e.replace(/,/g, "");
          };
          listenKeyup(".qty", function () {
            var e = parseInt($(this).val()),
              t = $(this).parent().siblings().find(".price").val();
            t = parseInt(a(t));
            var r = n(e, t);
            $(this).parent().siblings(".amount").text(addCommas(r.toString())),
              i();
          }),
            listenKeyup(".price", function () {
              var e = $(this).val();
              e = parseInt(a(e));
              var t = parseInt($(this).parent().siblings().find(".qty").val()),
                r = n(t, e);
              $(this).parent().siblings(".amount").text(addCommas(r.toString())),
                i();
            });
          var n = function (e, t) {
              return e > 0 && t > 0 ? e * t : 0;
            },
            i = function () {
              var e = 0;
              $(".bill-item-container>tr").each(function () {
                var t = $(this).find(".itemTotal").text();
                (t = a(t)), (t = isEmpty($.trim(t)) ? 0 : parseInt(t)), (e += t);
              }),
                (e = parseFloat(e)),
                $("#totalPrice").text(
                  $(".currentCurrency").val() + addCommas(e.toFixed(2))
                ),
                $("#totalAmount").val(e);
            };
          listenSubmit("#billForm", function (e) {
            e.preventDefault(),
              $("#billSave").attr("disabled", !0),
              jQuery(this).find("#saveInvoiceBtn").button("loading");
            var t = new FormData($(this)[0]);
            $.ajax({
              url: $(".billSaveUrl").val(),
              type: "POST",
              dataType: "json",
              data: t,
              processData: !1,
              contentType: !1,
              success: function (e) {
                displaySuccessMessage(e.message),
                  (window.location.href = $(".billUrl").val() + "/" + e.data.id);
              },
              error: function (e) {
                printErrorMessage("#validationErrorsBox", e),
                  $("#billSave").attr("disabled", !1);
              }
            });
          }),
            listenChange("#patientAdmissionId", function () {
              var e;
              $("#patientAdmissionId").attr("disabled", !0),
                "" != $(this).val() && null != $(this).val()
                  ? ($("#patientAdmissionId").attr("disabled", !1),
                    (e = $(".isEdit").val()
                      ? {
                          editBillId: $(".billId").val(),
                          patient_admission_id: $(this).val()
                        }
                      : { patient_admission_id: $(this).val() }),
                    $.ajax({
                      url: $(".patientAdmissionDetailUrl").val(),
                      type: "GET",
                      data: e,
                      success: function (e) {
                        if (e.success) {
                          var t = e.data;
                          if (
                            ($("#pAdmissionId").val(
                              $("#patientAdmissionId").find(":selected").val()
                            ),
                            $("#female,#male").attr("disabled", !0),
                            $("#billsPatientId").val(t.patientDetails.owner_id),
                            $("#name").val(t.patientDetails.full_name),
                            $("#userEmail").val(t.patientDetails.email),
                            $("#userPhone").val(
                              null != t.patientDetails.phone
                                ? t.patientDetails.phone
                                : "N/A"
                            ),
                            1 == t.patientDetails.gender
                              ? $("#female").prop("checked", !0)
                              : $("#male").prop("checked", !0),
                            $("#dob").val(
                              null != t.patientDetails.dob
                                ? t.patientDetails.dob
                                : "N/A"
                            ),
                            $("#billDoctorId").val(t.doctorName),
                            $("#admissionDate").val(
                              moment(t.admissionDetails.admission_date).format(
                                "YYYY-MM-DD"
                              ) +
                                " " +
                                moment(t.admissionDetails.admission_date).format(
                                  "HH:mm:ss"
                                )
                            ),
                            $("#dischargeDate").val(
                              null != t.admissionDetails.discharge_date
                                ? moment(
                                    t.admissionDetails.discharge_date
                                  ).format("YYYY-MM-DD") +
                                    " " +
                                    moment(
                                      t.admissionDetails.discharge_date
                                    ).format("HH:mm:ss")
                                : "N/A"
                            ),
                            "" != t.package
                              ? $("#packageId").val(
                                  null != t.package.name ? t.package.name : "N/A"
                                )
                              : $("#packageId").val("N/A"),
                            null != t.admissionDetails.insurance
                              ? $("#insuranceId").val(
                                  t.admissionDetails.insurance.name
                                )
                              : $("#insuranceId").val("N/A"),
                            $("#totalDays").val(t.admissionDetails.totalDays),
                            $("#policyNo").val(
                              "" != t.admissionDetails.policy_no
                                ? t.admissionDetails.policy_no
                                : "N/A"
                            ),
                            ("" != t.package ||
                              "" == t.package ||
                              !t.hasOwnProperty("billItems") ||
                              t.hasOwnProperty("billItems") ||
                              t.billItems.length <= 0 ||
                              t.billItems.length >= 0) &&
                              ($(".bill-item-container tr").each(function () {
                                $(this).closest("tr").remove();
                              }),
                              $("#totalPrice").text("0"),
                              $("#billTbl tbody").append(
                                '<tr><td class="text-center item-number">1</td><td class="table__item-desc"><input class="form-control itemName" required name="item_name[]" type="text"></td><td class="table__qty"><input class="form-control qty quantity" required name="qty[]" type="text"></td><td><input class="form-control price-input price" required name="price[]" type="text"></td><td class="amount text-right itemTotal"></td><td class="text-center"><i class="fa fa-trash text-danger delete-bill-bulk-item pointer"></i></td></tr>'
                              )),
                            "" != t.package &&
                              t.hasOwnProperty("billItems") &&
                              t.billItems.length > 0)
                          ) {
                            var a = t.billItems.length - 1;
                            $("#totalAmount").val(0);
                            for (var n = 0, i = 1; i <= a; i++)
                              $("#addBillItem").trigger("click");
                            $(".bill-item-container tr").each(function (e) {
                              var a = $(this);
                              a.find(".itemName").val(t.billItems[e].item_name),
                                a.find(".quantity").val(t.billItems[e].qty),
                                a.find(".price").val(t.billItems[e].price),
                                a.find(".amount").text(t.billItems[e].amount),
                                (n += parseInt(a.find(".itemTotal").text())),
                                $("#totalPrice").text(
                                  $(".currentCurrency").val() + n
                                );
                            }),
                              $("#totalAmount").val($("#total").text()),
                              setTimeout(function () {
                                $(".price").trigger("keyup");
                              }, 500);
                          } else if ("" != t.package) {
                            if (t.package.package_services_items.length > 0) {
                              var r = t.package.package_services_items.length - 1;
                              $("#totalAmount").val(0);
                              for (var s = 0, o = 1; o <= r; o++)
                                $("#addBillItem").trigger("click");
                              $(".bill-item-container tr").each(function (e) {
                                var a = $(this);
                                a
                                  .find(".itemName")
                                  .val(
                                    t.package.package_services_items[e].service
                                      .name
                                  ),
                                  a
                                    .find(".quantity")
                                    .val(
                                      t.package.package_services_items[e].quantity
                                    ),
                                  a
                                    .find(".price")
                                    .val(
                                      t.package.package_services_items[e].rate
                                    ),
                                  a
                                    .find(".amount")
                                    .text(
                                      t.package.package_services_items[e].amount
                                    ),
                                  (s += parseInt(a.find(".itemTotal").text())),
                                  $("#totalPrice").text(
                                    $(".currentCurrency").val() + s
                                  );
                              }),
                                $("#totalAmount").val($("#total").text());
                            }
                          } else if (
                            t.hasOwnProperty("billItems") &&
                            t.billItems.length > 0
                          ) {
                            var d = t.billItems.length - 1;
                            $("#totalAmount").val(0);
                            for (var l = 0, c = 1; c <= d; c++)
                              $("#addBillItem").trigger("click");
                            $(".bill-item-container tr").each(function (e) {
                              var a = $(this);
                              a.find(".itemName").val(t.billItems[e].item_name),
                                a.find(".quantity").val(t.billItems[e].qty),
                                a.find(".price").val(t.billItems[e].price),
                                a.find(".amount").text(t.billItems[e].amount),
                                (l += parseInt(a.find(".itemTotal").text())),
                                $("#totalPrice").text(
                                  $(".currentCurrency").val() + l
                                );
                            }),
                              $("#totalAmount").val($("#total").text());
                          }
                        }
                      },
                      error: function (e) {
                        manageAjaxErrors(e),
                          $("#patientAdmissionId").attr("disabled", !1);
                      }
                    }))
                  : $("#patientAdmissionId").attr("disabled", !1);
            });
        },
        7710: () => {
          "use strict";
          listenClick(".birth-report-delete-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $(".birthReportUrl").val() + "/" + t,
              "",
              $("#birthReport").val()
            );
          });
        },
        1470: () => {},
        629: () => {
          document.addEventListener("turbo:load", function () {
            if (
              !$("#addBirthReportForm").length &&
              !$("#editBirthReportForm").length
            )
              return !1;
            var e = $("#birthCaseId"),
              t = $("#birthDoctorId"),
              a = $("#editBirthCaseId"),
              n = $("#editBirthDoctorId"),
              i = $("#birthDate"),
              r = $("#editBirthDate");
            e.length &&
              $("#birthCaseId").select2({
                width: "100%",
                dropdownParent: $("#add_birth_reports_modal")
              });
            t.length &&
              $("#birthDoctorId").select2({
                width: "100%",
                dropdownParent: $("#add_birth_reports_modal")
              });
            a.length &&
              $("#editBirthCaseId").select2({
                width: "100%",
                dropdownParent: $("#edit_birth_reports_modal")
              });
            n.length &&
              $("#editBirthDoctorId").select2({
                width: "100%",
                dropdownParent: $("#edit_birth_reports_modal")
              });
            i.length &&
              $("#birthDate").flatpickr({
                dateFormat: "Y-m-d h:i K",
                useCurrent: !0,
                sideBySide: !0,
                enableTime: !0,
                maxDate: new Date(),
                locale: $(".userCurrentLanguage").val()
              });
            r.length &&
              $("#editBirthDate").flatpickr({
                dateFormat: "Y-m-d h:i K",
                useCurrent: !0,
                sideBySide: !0,
                enableTime: !0,
                maxDate: new Date(),
                locale: $(".userCurrentLanguage").val()
              });
          }),
            listenSubmit("#addBirthReportForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#btnBirthSave");
              t.button("loading"),
                $.ajax({
                  url: $("#indexBirthReportCreateUrl").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_birth_reports_modal").modal("hide"),
                      Livewire.emit("refresh"));
                  },
                  error: function (e) {
                    printErrorMessage("#birthValidationErrorsBox", e);
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listenClick(".birth-report-edit-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $(".birthReportUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      e.success &&
                        ($("#birthReportId").val(e.data.id),
                        $("#editBirthCaseId")
                          .val(e.data.case_id)
                          .trigger("change.select2"),
                        $("#editBirthDoctorId")
                          .val(e.data.doctor_id)
                          .trigger("change.select2"),
                        $("#editBirthDescription").val(e.data.description),
                        document
                          .querySelector("#editBirthDate")
                          ._flatpickr.setDate(moment(e.data.date).format()),
                        $("#edit_birth_reports_modal").modal("show"),
                        ajaxCallCompleted());
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#editBirthReportForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#btnBirthEditSave");
              t.button("loading");
              var a = $("#birthReportId").val();
              $.ajax({
                url: $(".birthReportUrl").val() + "/" + a,
                type: "patch",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_birth_reports_modal").modal("hide"),
                    Livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_birth_reports_modal", function () {
              resetModalForm("#addBirthReportForm", "#birthValidationErrorsBox"),
                $("#birthCaseId, #birthDoctorId")
                  .val("")
                  .trigger("change.select2");
            }),
            listenHiddenBsModal("#edit_birth_reports_modal", function () {
              resetModalForm(
                "#editBirthReportForm",
                "#editBirthValidationErrorsBox"
              );
            });
        },
        3830: () => {
          "use strict";
          listenSubmit("#addBloodBankForm", function (e) {
            e.preventDefault();
            var t = jQuery(this).find("#bloodBankSave");
            t.button("loading"),
              $.ajax({
                url: $("#bloodBankCreateUrl").val(),
                type: "POST",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#add_blood_banks_modal").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  printErrorMessage("#bloodBankErrorsBox", e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
          }),
            listenSubmit("#editBloodBankForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editBloodBankSave");
              t.button("loading");
              var a = $("#bloodBankId").val();
              $.ajax({
                url: $("#bloodBankUrl").val() + "/" + a,
                type: "put",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_blood_banks_modal").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_blood_banks_modal", function () {
              resetModalForm("#addBloodBankForm", "#bloodBankErrorsBox");
            }),
            listenHiddenBsModal("#edit_blood_banks_modal", function () {
              resetModalForm("#editBloodBankForm", "#editBloodBankErrorsBox");
            }),
            listen("click", ".blood-bank-edit-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#bloodBankUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      if (e.success) {
                        var t = e.data;
                        $("#bloodBankId").val(t.id),
                          $("#editBloodGroup").val(t.blood_group),
                          $("#editBloodBankRemainedBags").val(t.remained_bags),
                          $("#edit_blood_banks_modal").modal("show"),
                          ajaxCallCompleted();
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listen("click", ".blood-bank-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#bloodBankUrl").val() + "/" + t,
                "",
                $("#bloodBank").val()
              );
            });
        },
        2267: () => {
          "use strict";
          document.addEventListener("turbo:load", function () {
            if (
              !$("#addBloodDonationForm").length &&
              !$("#editBloodDonationForm").length
            )
              return !1;
            var e = $("#donationDonorName"),
              t = $("#editDonationDonorName");
            listenShownBsModal("#add_blood_donation_modal", function () {
              e.length &&
                $("#donationDonorName").select2({
                  width: "100%",
                  dropdownParent: $("#add_blood_donation_modal")
                });
            }),
              listenShownBsModal("#edit_blood_donation_modal", function () {
                t.length &&
                  $("#editDonationDonorName").select2({
                    width: "100%",
                    dropdownParent: $("#edit_blood_donation_modal")
                  });
              });
          }),
            listenSubmit("#addBloodDonationForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#bloodDonationSave");
              t.button("loading"),
                $.ajax({
                  url: $("#bloodDonationCreateUrl").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_blood_donation_modal").modal("hide"),
                      livewire.emit("refresh"),
                      setTimeout(function () {
                        t.button("reset");
                      }, 2500));
                  },
                  error: function (e) {
                    printErrorMessage("#bloodDonationErrorsBox", e),
                      setTimeout(function () {
                        t.button("reset");
                      }, 2e3);
                  }
                });
            }),
            listenSubmit("#editBloodDonationForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editBloodDonationSave");
              t.button("loading");
              var a = $("#bloodDonationId").val();
              $.ajax({
                url: $("#bloodDonationUrl").val() + "/" + a,
                type: "post",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_blood_donation_modal").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  manageAjaxErrors(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_blood_donation_modal", function () {
              $("#donationDonorName").val("").trigger("change.select2"),
                resetModalForm(
                  "#addBloodDonationForm",
                  "#bloodDonationErrorsBox"
                );
            }),
            listenHiddenBsModal("#edit_blood_donation_modal", function () {
              resetModalForm(
                "#editBloodDonationForm",
                "#editBloodDonationErrorsBox"
              );
            }),
            listen("click", ".blood-donation-edit-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#bloodDonationUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      if (e.success) {
                        var t = e.data;
                        $("#bloodDonationId").val(t.id),
                          $("#editDonationDonorName").val(t.blood_donor_id),
                          $("#editDonationDonorName").trigger("change"),
                          $("#editDonationBags").val(t.bags),
                          $("#edit_blood_donation_modal").modal("show"),
                          ajaxCallCompleted();
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listen("click", ".blood-donation-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#bloodDonationUrl").val() + "/" + t,
                "",
                $("#bloodDonation").val()
              );
            }),
            listenShownBsModal("#edit_blood_donation_modal", function () {
              $("#editDonationDonorName:first").focus();
            });
        },
        5688: () => {
          "use strict";
          document.addEventListener("turbo:load", function () {
            if (
              !$("#addBloodDonorForm").length &&
              !$("#editBloodDonorForm").length
            )
              return !1;
            var e = $("#donorBloodGroup"),
              t = $("#editDonorBloodGroup"),
              a = $("#lastDonationDate");
            e.length &&
              $("#donorBloodGroup").select2({
                width: "100%",
                dropdownParent: $("#add_blood_donors_modal")
              });
            t.length &&
              $("#editDonorBloodGroup").select2({
                width: "100%",
                dropdownParent: $("#edit_blood_donors_modal")
              });
            a.length &&
              $("#lastDonationDate").flatpickr({
                format: "YYYY-MM-DD",
                useCurrent: !1,
                sideBySide: !1,
                locale: $(".userCurrentLanguage").val()
              });
          }),
            listenSubmit("#addBloodDonorForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#bloodDonorSave");
              t.button("loading"),
                $.ajax({
                  url: $("#bloodDonorCreateUrl").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_blood_donors_modal").modal("hide"),
                      livewire.emit("refresh"));
                  },
                  error: function (e) {
                    printErrorMessage("#bloodDonorErrorsBox", e);
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listenSubmit("#editBloodDonorForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editBloodDonorSave");
              t.button("loading");
              var a = $("#bloodDonorId").val();
              $.ajax({
                url: $("#bloodDonorUrl").val() + "/" + a,
                type: "put",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_blood_donors_modal").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  manageAjaxErrors(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_blood_donors_modal", function () {
              resetModalForm("#addBloodDonorForm", "#bloodDonorErrorsBox");
            }),
            listenHiddenBsModal("#edit_blood_donors_modal", function () {
              resetModalForm("#editBloodDonorForm", "#editBloodDonorErrorsBox");
            }),
            listen("click", ".blood-donor-edit-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#bloodDonorUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      if (e.success) {
                        var t = e.data;
                        $("#bloodDonorId").val(t.id),
                          $("#editBloodDonorName").val(t.name),
                          $("#editBloodDonorAge").val(t.age),
                          $("#editBloodDonorMale,#editBloodDonorFemale").prop(
                            "checked",
                            !1
                          ),
                          1 == t.gender
                            ? $("#editBloodDonorMale").prop("checked", !0)
                            : $("#editBloodDonorFemale").prop("checked", !0),
                          $("#editDonorBloodGroup").val(t.blood_group),
                          $("#editDonorBloodGroup").select2({
                            dropdownParent: $("#edit_blood_donors_modal")
                          }),
                          $("#editDonorBloodGroup").trigger("change"),
                          $("#editLastDonationDate")
                            .flatpickr({
                              format: "YYYY-MM-DD",
                              useCurrent: !1,
                              sideBySide: !1,
                              locale: $(".userCurrentLanguage").val()
                            })
                            .setDate(
                              format(e.data.last_donate_date, "YYYY-MM-DD")
                            ),
                          $("#edit_blood_donors_modal").modal("show"),
                          ajaxCallCompleted();
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listen("click", ".blood-donor-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#bloodDonorUrl").val() + "/" + t,
                "",
                $("#bloodDonor").val()
              );
            }),
            listenShownBsModal("#add_blood_donors_modal", function () {
              $("#donorBloodGroup").select2({
                width: "100%",
                dropdownParent: $("#add_blood_donors_modal")
              });
            });
        },
        502: () => {
          "use strict";
          function e(e, t) {
            $.ajax({
              url: $("#bloodGroupUrl").val(),
              type: "get",
              dataType: "json",
              data: { id: t },
              success: function (t) {
                $(e).empty(),
                  $.each(t.data, function (t, a) {
                    $(e).append($("<option></option>").attr("value", t).text(a));
                  });
              }
            });
          }
          document.addEventListener("turbo:load", function () {
            if (
              !$("#addBloodIssueForm").length &&
              !$("#editBloodIssueForm").length
            )
              return !1;
            var e = $("#bloodIssueDoctorName"),
              t = $("#bloodIssuePatientName"),
              a = $("#donorName"),
              n = $("#issuedBloodGroup"),
              i = $("#editBloodIssueDoctorName"),
              r = $("#editBloodIssuePatientName"),
              s = $("#editDonorName"),
              o = $("#editIssuedBloodGroup"),
              d = $("#bloodIssueDate");
            e.length &&
              $("#bloodIssueDoctorName").select2({
                width: "100%",
                dropdownParent: $("#add_blood_issues_modal")
              });
            t.length &&
              $("#bloodIssuePatientName").select2({
                width: "100%",
                dropdownParent: $("#add_blood_issues_modal")
              });
            a.length &&
              $("#donorName").select2({
                width: "100%",
                dropdownParent: $("#add_blood_issues_modal")
              });
            n.length &&
              $("#issuedBloodGroup").select2({
                width: "100%",
                dropdownParent: $("#add_blood_issues_modal")
              });
            i.length &&
              $("#editBloodIssueDoctorName").select2({
                width: "100%",
                dropdownParent: $("#edit_blood_issues_modal")
              });
            r.length &&
              $("#editBloodIssuePatientName").select2({
                width: "100%",
                dropdownParent: $("#edit_blood_issues_modal")
              });
            s.length &&
              $("#editDonorName").select2({
                width: "100%",
                dropdownParent: $("#edit_blood_issues_modal")
              });
            o.length &&
              $("#editIssuedBloodGroup").select2({
                width: "100%",
                dropdownParent: $("#edit_blood_issues_modal")
              });
            d.length &&
              $("#bloodIssueDate").flatpickr({
                enableTime: !0,
                defaultDate: new Date(),
                maxDate: new Date(),
                dateFormat: "Y-m-d H:i",
                locale: $(".userCurrentLanguage").val()
              });
          }),
            listenSubmit("#addBloodIssueForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#bloodIssueSave");
              t.button("loading"),
                $.ajax({
                  url: $("#bloodIssueCreateUrl").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_blood_issues_modal").modal("hide"),
                      livewire.emit("refresh"),
                      setTimeout(function () {
                        t.button("reset");
                      }, 2500));
                  },
                  error: function (e) {
                    printErrorMessage("#bloodIssueErrorsBox", e),
                      setTimeout(function () {
                        t.button("reset");
                      }, 2e3);
                  }
                });
            }),
            listenChange("#donorName", function () {
              e("#issuedBloodGroup", $(this).val());
            }),
            listenChange("#editDonorName", function () {
              e("#editIssuedBloodGroup", $(this).val());
            }),
            listenSubmit("#editBloodIssueForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editBloodIssueSave");
              t.button("loading");
              var a = $("#bloodIssueId").val();
              $.ajax({
                url: $("#bloodIssueUrl").val() + "/" + a,
                type: "post",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_blood_issues_modal").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  manageAjaxErrors(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_blood_issues_modal", function () {
              resetModalForm("#addBloodIssueForm", "#bloodIssueErrorsBox"),
                $("#bloodIssueDoctorName").val(null).trigger("change"),
                $("#bloodIssuePatientName").val(null).trigger("change"),
                $("#donorName").val(null).trigger("change"),
                $("#issuedBloodGroup").val(null).trigger("change");
            }),
            listenHiddenBsModal("#edit_blood_issues_modal", function () {
              resetModalForm("#editBloodIssueForm", "#editBloodIssueErrorsBox");
            }),
            listenShownBsModal(
              "#add_blood_issues_modal,#edit_blood_issues_modal",
              function () {
                $(
                  "#bloodIssueDoctorName,#bloodIssuePatientName,#donorName,#issuedBloodGroup"
                ).select2({
                  width: "100%",
                  dropdownParent: $("#add_blood_issues_modal")
                }),
                  $(
                    "#editBloodIssueDoctorName,#editBloodIssuePatientName,#editDonorName,#editIssuedBloodGroup"
                  ).select2({
                    width: "100%",
                    dropdownParent: $("#edit_blood_issues_modal")
                  });
              }
            ),
            listen("click", ".blood-issues-edit-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#bloodIssueUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      if (e.success) {
                        var t = e.data;
                        $("#bloodIssueId").val(t.id),
                          $("#editBloodIssueDate")
                            .flatpickr({
                              enableTime: !0,
                              maxDate: new Date(),
                              dateFormat: "Y-m-d H:i",
                              locale: $(".userCurrentLanguage").val()
                            })
                            .setDate(t.issue_date),
                          $("#editBloodIssueDoctorName")
                            .val(t.doctor_id)
                            .trigger("change"),
                          $("#editBloodIssuePatientName")
                            .val(t.patient_id)
                            .trigger("change"),
                          $("#editDonorName")
                            .val(t.donor_id)
                            .trigger("change", [{ isEdit: !0 }]),
                          $("#editBloodIssueAmount").val(t.amount),
                          $(".price-input").trigger("input"),
                          $("#editBloodIssueRemarks").val(t.remarks),
                          $("#edit_blood_issues_modal").modal("show"),
                          ajaxCallCompleted();
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listen("click", ".blood-issues-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#bloodIssueUrl").val() + "/" + t,
                "",
                $("#bloodIssue").val()
              );
            });
        },
        4166: () => {
          "use strict";
          listenClick(".brand-delete-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#indexBrandUrl").val() + "/" + t,
              "",
              $("#medicineBrand").val()
            );
          }),
            listenSubmit("#createBrandForm, #editBrandForm", function () {
              if ("" !== $(".error-msg").text())
                return $(".phoneNumber").focus(), !1;
            });
        },
        8525: () => {
          "use strict";
          listenClick("#callLogResetFilter", function () {
            $("#callType").val(0).trigger("change"),
              hideDropdownManually($("#callTypeFilterBtn"), $(".dropdown-menu"));
          }),
            listenClick(".call-log-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $(".callLogUrl").val() + "/" + t,
                "",
                $("#callLogs").val()
              );
            }),
            listenChange("#callType", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            });
        },
        7970: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#createCallLogForm").length && !$("#editCallLogForm").length)
              return !1;
            var e = void 0;
            $("editCallLogId").length
              ? $("#callLogDate").flatpickr({
                  format: "YYYY-MM-DD",
                  useCurrent: !0,
                  sideBySide: !0,
                  minDate: moment(new Date()).format("YYYY-MM-DD"),
                  locale: $(".userCurrentLanguage").val(),
                  onChange: function (e, t, a) {
                    var n = moment($("#callLogDate").val()).format();
                    "undefined" != typeof followUpDate &&
                      followUpDate.set("minDate", n);
                  }
                })
              : $("#callLogDate").flatpickr({
                  format: "YYYY-MM-DD",
                  useCurrent: !0,
                  sideBySide: !0,
                  minDate: moment(new Date()).format("YYYY-MM-DD"),
                  locale: $(".userCurrentLanguage").val(),
                  onChange: function (t, a, n) {
                    var i = moment($("#callLogDate").val()).format();
                    void 0 !== e && e.set("minDate", i);
                  }
                }),
              (e = $("#callLogFollowUpDate").flatpickr({
                format: "YYYY-MM-DD",
                useCurrent: !0,
                sideBySide: !0,
                locale: $(".userCurrentLanguage").val()
              }));
            var t = moment($("#callLogDate").val()).format();
            e.set("minDate", t);
          }),
            listenSubmit("#createCallLogForm, #editCallLogForm", function () {
              if ("" !== $(".error-msg").text())
                return $("#callLogPhoneNumber").focus(), !1;
            }),
            listen(
              "keyup keypress",
              "#createCallLogForm, #editCallLogForm",
              function (e) {
                if (13 === (e.keyCode || e.which)) return e.preventDefault(), !1;
              }
            ),
            listen(
              "keyup keypress",
              "#createCallLogForm, #editCallLogForm",
              function (e) {
                if (13 === (e.keyCode || e.which)) return e.preventDefault(), !1;
              }
            );
        },
        7828: () => {
          "use strict";
          listenClick(".delete-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#indexCaseHandlerUrl").val() + "/" + t,
              "",
              $("#caseHandler").val()
            );
          }),
            listenChange(".case-handler-status", function (e) {
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url:
                    $("#indexCaseHandlerUrl").val() +
                    "/" +
                    t +
                    "/active-deactive",
                  method: "post",
                  cache: !1,
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      livewire.emit("refresh"));
                  }
                });
            }),
            listenClick("#caseHandlerResetFilter", function () {
              $("#caseHandlerHead").val(2).trigger("change"),
                hideDropdownManually(
                  $("#caseHandlerFilterBtn"),
                  $(".dropdown-menu")
                );
            }),
            listenChange("#caseHandlerHead", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val()),
                hideDropdownManually(
                  $("#caseHandlerFilterBtn"),
                  $("#caseHandlerFilter")
                );
            });
        },
        4248: () => {
          "use strict";
          function e(e, t) {
            var a = $(e).val().split(".").pop().toLowerCase();
            return (
              -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
            );
          }
          document.addEventListener("turbo:load", function () {
            if (
              !$("#createCaseHandlerForm").length &&
              !$("#editCaseHandlerForm").length
            )
              return !1;
            var e = $("#caseHandlerBirthDate"),
              t = $("#editCaseHandlerBirthDate"),
              a = $("#createCaseHandlerForm"),
              n = $("#editCaseHandlerForm");
            e.length &&
              $("#caseHandlerBirthDate").flatpickr({
                maxDate: new Date(),
                locale: $(".userCurrentLanguage").val()
              }),
              t.length &&
                $("#editCaseHandlerBirthDate").flatpickr({
                  maxDate: new Date(),
                  locale: $(".userCurrentLanguage").val()
                }),
              a.length &&
                $("#createCaseHandlerForm")
                  .find("input:text:visible:first")
                  .focus(),
              n.length &&
                $("#editCaseHandlerForm")
                  .find("input:text:visible:first")
                  .focus();
          }),
            listenSubmit(
              "#createCaseHandlerForm, #editCaseHandlerForm",
              function () {
                if ("" !== $(".error-msg").text())
                  return $(".phoneNumber").focus(), !1;
              }
            ),
            listenClick(".case-andler-remove-image", function () {
              defaultImagePreview(".previewImage", 1);
            }),
            listenChange(".caseHandlerProfileImage", function () {
              var t = e($(this), "#caseHandlerErrorBox");
              console.log(t),
                isEmpty(t) || 0 == t
                  ? ($(this).val(""),
                    $("#caseHandlerErrorBox").removeClass("d-none hide"),
                    $("#caseHandlerErrorBox")
                      .text("The image must be a file of type: jpg, jpeg, png.")
                      .show(),
                    $("[id=caseHandlerErrorBox]").focus(),
                    $("html, body").animate({ scrollTop: "0" }, 500),
                    $(".alert").delay(5e3).slideUp(300))
                  : ($("#caseHandlerErrorBox").html("").hide(),
                    displayDocument(this, "#customValidationErrorsBox", t));
            }),
            listenChange(".editCaseHandlerProfileImage", function () {
              var t = e($(this), "#editCaseHandlerErrorsBox");
              console.log(t),
                isEmpty(t) || 0 == t
                  ? ($(this).val(""),
                    $("#editCaseHandlerErrorsBox").removeClass("d-none hide"),
                    $("#editCaseHandlerErrorsBox")
                      .text("The image must be a file of type: jpg, jpeg, png.")
                      .show(),
                    $("[id=editCaseHandlerErrorsBox]").focus(),
                    $("html, body").animate({ scrollTop: "0" }, 500),
                    $(".alert").delay(5e3).slideUp(300))
                  : ($("#editCaseHandlerErrorsBox").html("").hide(),
                    displayDocument(this, "#customValidationErrorsBox", t));
            });
        },
        972: () => {
          document.addEventListener("turbo:load", function () {
            if (!$(".editCategoryBtn").length) return;
            listenSubmit("#editMedicineCategoryForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editCategorySave");
              t.button("loading");
              var a = $("#editMedicineCategoryId").val();
              $.ajax({
                url: $("#showCategoriesUrl").val() + "/" + a,
                type: "put",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_categories_modal").modal("hide"),
                    Livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
              listenHiddenBsModal("#edit_categories_modal", function () {
                resetModalForm(
                  "#editMedicineCategoryForm",
                  "#editMedicineCategoryErrorsBox"
                );
              }),
              (window.renderCategoryDetailData = function (e) {
                $.ajax({
                  url: $("#showCategoriesUrl").val() + "/" + e + "/edit",
                  type: "GET",
                  success: function (e) {
                    if (e.success) {
                      var t = e.data;
                      $("#editMedicineCategoryId").val(t.id),
                        $("#editCategoryName").val(t.name),
                        1 === t.is_active
                          ? $("#editCategoryIsActive").prop("checked", !0)
                          : $("#editCategoryIsActive").prop("checked", !1),
                        $("#edit_categories_modal").modal("show"),
                        ajaxCallCompleted();
                    }
                  },
                  error: function (e) {
                    manageAjaxErrors(e);
                  }
                });
              }),
              listenClick(".editCategoryBtn", function (e) {
                if (!$(".ajaxCallIsRunning").val()) {
                  ajaxCallInProgress();
                  var t = $(e.currentTarget).attr("data-id");
                  renderCategoryDetailData(t);
                }
              });
          });
        },
        1554: () => {
          "use strict";
          listenSubmit("#addMedicineCategoryForm", function (e) {
            e.preventDefault();
            var t = jQuery(this).find("#medicineCategorySave");
            t.button("loading"),
              $.ajax({
                url: $("#indexCategoryCreateUrl").val(),
                type: "POST",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#add_categories_modal").modal("hide"),
                    Livewire.emit("refresh"));
                },
                error: function (e) {
                  printErrorMessage("#medicineCategoryErrorsBox", e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
          }),
            listenSubmit("#editMedicineCategoryForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editCategorySave");
              t.button("loading");
              var a = $("#editMedicineCategoryId").val();
              $.ajax({
                url: $("#indexCategoriesUrl").val() + "/" + a,
                type: "put",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_categories_modal").modal("hide"),
                    $("#categoriesShowUrl").length
                      ? (window.location.href = $("#categoriesShowUrl").val())
                      : livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_categories_modal", function () {
              resetModalForm(
                "#addMedicineCategoryForm",
                "#medicineCategoryErrorsBox"
              );
            }),
            listenHiddenBsModal("#edit_categories_modal", function () {
              resetModalForm(
                "#editMedicineCategoryForm",
                "#editMedicineCategoryErrorsBox"
              );
            }),
            listenClick(".category-edit-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#indexCategoriesUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      if (e.success) {
                        var t = e.data;
                        $("#editMedicineCategoryId").val(t.id),
                          $("#editCategoryName").val(t.name),
                          1 === t.is_active
                            ? $("#editCategoryIsActive").prop("checked", !0)
                            : $("#editCategoryIsActive").prop("checked", !1),
                          $("#edit_categories_modal").modal("show"),
                          ajaxCallCompleted();
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenClick(".category-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#indexCategoriesUrl").val() + "/" + t,
                "",
                Lang.get("messages.medicine.medicine_category")
              );
            }),
            listenChange(".medicine-category-status", function (e) {
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url:
                    $("#indexCategoriesUrl").val() + "/" + t + "/active-deactive",
                  method: "post",
                  cache: !1,
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      window.livewire.emit("refresh"));
                  }
                });
            }),
            listenClick("#categoryResetFilter", function () {
              $("#medicineCategoryHead").val(2).trigger("change"),
                hideDropdownManually(
                  $("#medicineCategoryFilterBtn"),
                  $(".dropdown-menu")
                );
            }),
            listenChange("#medicineCategoryHead", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val()),
                hideDropdownManually(
                  $("#medicineCategoryFilterBtn"),
                  $("#medicineCategoryFilter")
                );
            });
        },
        5555: () => {},
        5744: () => {
          "use strict";
          listenClick(".charge-category-delete-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#chargeCategoryURLID").val() + "/" + t,
              "",
              $("#chargeCategory").val()
            );
          }),
            document.addEventListener("success", function (e) {
              displaySuccessMessage(e.detail);
            });
        },
        4245: () => {},
        4664: () => {
          "use strict";
          document.addEventListener("turbo:load", function () {
            if (
              !$("#addChargeCategoryForm").length &&
              !$("#editChargeCategoryForm").length
            )
              return !1;
            var e = $("#chargeCategoryTypeId"),
              t = $("#editChargeCategoryTypeId");
            e.length &&
              $("#chargeCategoryTypeId").select2({
                width: "100%",
                dropdownParent: $("#add_charge_categories_modal")
              });
            t.length &&
              $("#editChargeCategoryTypeId").select2({
                width: "100%",
                dropdownParent: $("#edit_charge_categories_modal")
              });
          }),
            listenSubmit("#addChargeCategoryForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#chargeCategorySave");
              t.button("loading"),
                $.ajax({
                  url: $(".chargeCategoryCreateURLID").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_charge_categories_modal").modal("hide"),
                      livewire.emit("refresh"));
                  },
                  error: function (e) {
                    printErrorMessage("#chargeCategoryErrorsBox", e);
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listenClick(".charge-category-edit-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#chargeCategoryURLID").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      e.success &&
                        ($("#chargeCatId").val(e.data.id),
                        $("#editChargeCategoryName").val(e.data.name),
                        $("#editChargeCategoryTypeId")
                          .val(e.data.charge_type)
                          .trigger("change.select2"),
                        $("#editChargeCategoryDescription").val(
                          e.data.description
                        ),
                        $("#edit_charge_categories_modal").modal("show"),
                        ajaxCallCompleted());
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#editChargeCategoryForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editChargeCategorySave");
              t.button("loading");
              var a = $("#chargeCatId").val();
              $.ajax({
                url: $("#chargeCategoryURLID").val() + "/" + a,
                type: "patch",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_charge_categories_modal").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_charge_categories_modal", function () {
              resetModalForm(
                "#addChargeCategoryForm",
                "#chargeCategoryErrorsBox"
              ),
                $("#chargeCategoryTypeId").val("").trigger("change.select2");
            }),
            listenHiddenBsModal("#edit_charge_categories_modal", function () {
              resetModalForm(
                "#editChargeCategoryForm",
                "#editChargeCategoryErrorsBox"
              ),
                $("#editChargeCategoryTypeId").val("").trigger("change.select2");
            });
        },
        4018: () => {
          "use strict";
          listen("click", "#chargesResetFilter", function () {
            $("#filterChargeType").val(0).trigger("change"),
              hideDropdownManually($("#ChargeFilterBtn"), $(".dropdown-menu"));
          }),
            listen("click", ".charge-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $(".chargesURl").val() + "/" + t,
                "",
                $("#Charges").val()
              );
            }),
            listenChange("#filterChargeType", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            });
        },
        7506: () => {},
        2102: () => {
          "use strict";
          function e(e, t) {
            $.ajax({
              url: $(".changeChargeTypeURL").val(),
              type: "get",
              dataType: "json",
              data: { id: t },
              success: function (t) {
                $(e).empty(),
                  $.each(t.data, function (t, a) {
                    $(e).append($("<option></option>").attr("value", t).text(a));
                  });
              }
            });
          }
          document.addEventListener("turbo:load", function () {
            if (!$("#addChargesForm").length && !$("#editChargesForm").length)
              return !1;
            var e = $("#chargeTypeId"),
              t = $("#chargeCategoryId"),
              a = $("#editChargeTypeId"),
              n = $("#editChargeCategoryId");
            e.length &&
              $("#chargeTypeId").select2({
                width: "100%",
                dropdownParent: $("#add_charges_modal"),
                placeholder: "Select Charge Category"
              });
            t.length &&
              $("#chargeCategoryId").select2({
                width: "100%",
                dropdownParent: $("#add_charges_modal"),
                placeholder: "Select Charge Category"
              });
            a.length &&
              $("#editChargeTypeId").select2({
                width: "100%",
                dropdownParent: $("#edit_charges_modal"),
                placeholder: "Select Charge Category"
              });
            n.length &&
              $("#editChargeCategoryId").select2({
                width: "100%",
                dropdownParent: $("#edit_charges_modal"),
                placeholder: "Select Charge Category"
              });
          }),
            listenChange("#chargeTypeId", function () {
              e("#chargeCategoryId", $(this).val());
            }),
            listenChange("#editChargeTypeId", function () {
              e("#editChargeCategoryId", $(this).val());
            }),
            listenSubmit("#addChargesForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#chargesSave");
              t.button("loading"),
                $.ajax({
                  url: $("#createChargesURL").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_charges_modal").modal("hide"),
                      livewire.emit("refresh"));
                  },
                  error: function (e) {
                    printErrorMessage("#chargesErrorsBox", e);
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listenClick(".charge-edit-btn", function (t) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var a,
                  n = $(t.currentTarget).attr("data-id");
                (a = n),
                  $.ajax({
                    url: $(".chargesURl").val() + "/" + a + "/edit",
                    type: "GET",
                    success: function (t) {
                      t.success &&
                        ($("#chargeId").val(t.data.id),
                        $("#editChargeTypeId")
                          .val(t.data.charge_type)
                          .trigger("change.select2"),
                        e("#editChargeCategoryId", t.data.charge_type),
                        $("#editCode").val(t.data.code),
                        $("#editChargesDescription").val(t.data.description),
                        $("#editStdCharge").val(
                          addCommas(t.data.standard_charge)
                        ),
                        setTimeout(function () {
                          $("#editChargeCategoryId")
                            .val(t.data.charge_category_id)
                            .trigger("change.select2");
                        }, 2e3),
                        $("#edit_charges_modal").modal("show"),
                        ajaxCallCompleted());
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#editChargesForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editChargesSave");
              t.button("loading");
              var a = $("#chargeId").val();
              $.ajax({
                url: $(".chargesURl").val() + "/" + a,
                type: "patch",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_charges_modal").modal("hide"),
                    $("#chargeDetailShowUrl").length
                      ? (window.location.href = $("#chargeDetailShowUrl").val())
                      : livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_charges_modal", function () {
              resetModalForm("#addChargesForm", "#chargesErrorsBox"),
                $("#chargeTypeId,#chargeCategoryId")
                  .val("")
                  .trigger("change.select2");
            }),
            listenHiddenBsModal("#edit_charges_modal", function () {
              resetModalForm("#editChargesForm", "#editChargesErrorsBox"),
                $("#editChargeTypeId,#editChargeCategoryId")
                  .val("")
                  .trigger("change.select2");
            });
        },
        7097: () => {
          document.addEventListener("turbo:load", function () {}),
            listenSubmit("#addCurrencyForm", function (e) {
              e.preventDefault(),
                $.ajax({
                  url: $("#indexCurrencyCreateUrl").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_currency_modal").modal("hide"),
                      Livewire.emit("refresh"));
                  },
                  error: function (e) {
                    displayErrorMessage(e.responseJSON.message);
                  }
                });
            }),
            listenHiddenBsModal("#add_currency_modal", function () {
              resetModalForm("#addCurrencyForm");
            }),
            listenClick(".currency-edit-btn", function (e) {
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url: $("#indexCurrenciesUrl").val() + "/" + t + "/edit",
                  type: "GET",
                  success: function (e) {
                    if (e.success) {
                      var t = e.data;
                      $("#editCurrencyId").val(t.id),
                        $("#editCurrencyName").val(t.currency_name),
                        $("#editCurrencyCode").val(t.currency_code),
                        $("#editCurrencyIcon").val(t.currency_icon),
                        $("#edit_currency_modal").modal("show"),
                        ajaxCallCompleted();
                    }
                  },
                  error: function (e) {
                    manageAjaxErrors(e);
                  }
                });
            }),
            listenSubmit("#editCurrencyForm", function (e) {
              e.preventDefault();
              var t = $("#editCurrencyId").val();
              $.ajax({
                url: $("#indexCurrenciesUrl").val() + "/" + t,
                type: "put",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_currency_modal").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  displayErrorMessage(e.responseJSON.message);
                }
              });
            }),
            listenHiddenBsModal("#edit_currency_modal", function () {
              resetModalForm("#editCurrencyForm");
            }),
            listenClick(".currency-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#indexCurrenciesUrl").val() + "/" + t,
                "",
                $("#Currency").val()
              );
            });
        },
        6576: () => {
          "use strict";
          listenChange("#profileImage", function () {
            var e = isValidDocument($(this), "#customValidationErrorsBox");
            isEmpty(e) ||
              0 == e ||
              ($("#customValidationErrorsBox").html("").hide(),
              displayPhoto(this, "#previewImage"));
          }),
            (window.isValidDocument = function (e, t) {
              var a = $(e).val().split(".").pop().toLowerCase();
              return -1 == $.inArray(a, ["gif", "png", "jpg", "jpeg"])
                ? ($(e).val(""),
                  $(t)
                    .html(
                      "The profile image must be a file of type: jpeg, jpg, png, gif."
                    )
                    .removeClass("d-none")
                    .show(),
                  setTimeout(function () {
                    $(t).slideUp(300);
                  }, 5e3),
                  !1)
                : ($(t).addClass("d-none"), a);
            }),
            (window.displayPhoto = function (e, t) {
              var a = !0;
              if (e.files && e.files[0]) {
                var n = new FileReader();
                (n.onload = function (e) {
                  var n = new Image();
                  (n.src = e.target.result),
                    (n.onload = function () {
                      $(t).attr("src", e.target.result), (a = !0);
                    });
                }),
                  a && (n.readAsDataURL(e.files[0]), $(t).show());
              }
            });
        },
        8178: () => {
          "use strict";
          (window.handleSearchDatatable = function (e) {
            var t = document.querySelector('[data-datatable-filter="search"]');
            t.addEventListener("keyup", function (t) {
              e.search(t.target.value).draw();
            }),
              t.addEventListener("search", function (t) {
                e.search(t.target.value).draw();
              });
          }),
            $.extend($.fn.dataTable.defaults, {
              paging: !0,
              info: !0,
              ordering: !0,
              autoWidth: !1,
              pageLength: 10,
              language: { search: "", sSearch: "Search" },
              preDrawCallback: function () {
                $(".dataTables_filter input").addClass("form-control"),
                  $(".dataTables_filter input").attr("placeholder", "Search");
              }
            });
        },
        4532: (e, t, a) => {
          "use strict";
          var n = a(2743),
            i = $('meta[name="csrf-token"]').attr("content");
          $.ajaxSetup({
            headers: {
              "X-CSRF-TOKEN": $('meta[name="csrf-token"]').attr("content")
            }
          }),
            document.addEventListener("turbo:load", function () {
              $('[data-control="select2"]').each(function () {
                $(this).select2();
              }),
                (i = $('meta[name="csrf-token"]').attr("content")),
                $.ajaxSetup({ headers: { "X-CSRF-TOKEN": i } }),
                $(".alert").delay(5e3).slideUp(300),
                r(),
                s(),
                IOInitImageComponent(),
                IOInitSidebar();
            });
          $(".getLanguage").val();
          var r = function () {
              $(function () {
                $(".modal").on("shown.bs.modal", function () {
                  $(this).find("input:text").first().focus();
                });
              });
            },
            s = function () {
              $(
                'input:text:not([readonly="readonly"]):not([name="search"]):not(.front-input)'
              )
                .first()
                .focus();
            };
          $(document).on("keydown", function (e) {
            27 === e.keyCode && $(".modal").modal("hide");
          }),
            $('input:text:not([readonly="readonly"])').first().focus(),
            $(document).on("select2:open", function () {
              var e = document.querySelectorAll(
                ".select2-container--open .select2-search__field"
              );
              e[e.length - 1].focus();
            }),
            $('[data-control="select2"]').each(function () {
              $(this).select2();
            }),
            document.addEventListener("livewire:load", function () {
              window.livewire.hook("message.processed", function () {
                $('[data-control="select2"]').each(function () {
                  $(this).select2();
                });
              });
            }),
            $(document).on("focus", ".select2.select2-container", function (e) {
              var t = e.originalEvent,
                a = $(this).find(".select2-selection--single").length > 0;
              t && a && $(this).siblings("select:enabled").select2("open");
            }),
            $(document).ready(function () {
              $('[data-bs-toggle="tooltip"]').tooltip(),
                $(document)
                  .find(".nav-item.nav-dropdown ul li.nav-item")
                  .hasClass("active") &&
                  $(document)
                    .find(".nav-item.nav-dropdown ul li.nav-item.active")
                    .parent("ul")
                    .parent("li")
                    .addClass("open"),
                listenClick(".nav-item.nav-dropdown", function () {
                  $(document).find(".nav-item.nav-dropdown").hasClass("open") &&
                  $(this).hasClass("open")
                    ? setTimeout(function () {
                        $(this).removeClass("open");
                      }, 1e3)
                    : $(document)
                        .find(".nav-item.nav-dropdown")
                        .removeClass("open");
                }),
                listenKeyup('input[name="email"]', function () {
                  this.value = this.value.toLowerCase();
                }),
                $('input[name="email"]').keypress(function (e) {
                  if (32 === e.which) return !1;
                });
            }),
            $(function () {
              listenShownBsModal(".modal", function () {
                $(this).find("input:text").first().focus();
              }),
                listenHiddenBsModal(".modal", function () {
                  $(".image-input.image-input-empty").attr(
                    "style",
                    "display:inline-block"
                  );
                });
            }),
            (window.resetModalForm = function (e, t) {
              var a = $(e)[0].elements;
              $.each(a, function (e, t) {
                void 0 !== t._flatpickr &&
                  (t._flatpickr.clear(), t._flatpickr.setDate(new Date()));
              }),
                $(e)[0].reset(),
                $("select.select2Selector").each(function (e, t) {
                  var a = "#" + $(this).attr("id");
                  $(a).val(""), $(a).trigger("change");
                }),
                $(t).hide();
            }),
            (window.processingBtn = function (e, t) {
              var a =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : null,
                n = $(e).find(t);
              "loading" === a ? n.button("loading") : n.button("reset");
            }),
            (window.printErrorMessage = function (e, t) {
              console.log(e);
              displayErrorMessage(t.responseJSON.message);
            }),
            (toastr.options = {
              closeButton: !0,
              debug: !1,
              newestOnTop: !1,
              progressBar: !0,
              positionClass: "toast-top-right",
              preventDuplicates: !1,
              onclick: null,
              showDuration: "300",
              hideDuration: "1000",
              timeOut: "5000",
              extendedTimeOut: "1000",
              showEasing: "swing",
              hideEasing: "linear",
              showMethod: "fadeIn",
              hideMethod: "fadeOut"
            }),
            (window.manageAjaxErrors = function (e) {
              var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : "editValidationErrorsBox";
              404 == e.status
                ? toastr.error(e.responseJSON.message)
                : printErrorMessage("#" + t, e);
            }),
            (window.displaySuccessMessage = function (e) {
              toastr.success(e);
            }),
            (window.displayErrorMessage = function (e) {
              toastr.error(e);
            }),
            (window.displayPhoto = function (e, t) {
              var a = !0;
              if (e.files && e.files[0]) {
                var n = new FileReader();
                (n.onload = function (e) {
                  var n = new Image();
                  (n.src = e.target.result),
                    (n.onload = function () {
                      $(t).attr("src", e.target.result), (a = !0);
                    });
                }),
                  a && (n.readAsDataURL(e.files[0]), $(t).show());
              }
            }),
            (window.isValidFile = function (e, t) {
              var a = $(e).val().split(".").pop().toLowerCase();
              return -1 == $.inArray(a, ["gif", "png", "jpg", "jpeg"])
                ? ($(e).val(""),
                  $(t)
                    .html("The image must be a file of type: jpeg, jpg, png.")
                    .removeClass("d-none")
                    .show(),
                  setTimeout(function () {
                    $(t).slideUp(300);
                  }, 5e3),
                  !1)
                : ($(t).addClass("d-none"), !0);
            }),
            (window.format = function (e) {
              var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : "YYYY-MM-DD";
              return moment(e).format(t);
            }),
            (window.DatetimepickerDefaults = function (e) {
              return $.extend(
                {},
                {
                  sideBySide: !0,
                  ignoreReadonly: !0,
                  icons: {
                    up: "icon-arrow-up-circle icons font-2xl",
                    down: "icon-arrow-down-circle icons font-2xl",
                    previous: "icon-arrow-left icons",
                    next: "icon-arrow-right icons",
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    today: "fa fa-crosshairs",
                    clear: "fa fa-trash",
                    close: "fa fa-times"
                  }
                },
                e
              );
            }),
            (window.screenLock = function () {
              $("#overlay-screen-lock").show(),
                $("body").css({ "pointer-events": "none", opacity: "0.6" });
            }),
            (window.screenUnLock = function () {
              $("body").css({ "pointer-events": "auto", opacity: "1" }),
                $("#overlay-screen-lock").hide();
            }),
            (window.prepareTemplateRender = function (e, t) {
              return n.templates(e).render(t);
            }),
            (window.getCurrentCurrencyClass = function () {
              return "<b>" + $(".currentCurrency").val() + "</b>";
            }),
            (window.getCurrentCurrency = function () {
              return $(".getCurrentCurrency").val();
            }),
            (window.hideDropdownManually = function (e, t) {
              e.removeClass("show"), t.removeClass("show");
            }),
            (window.displayDocument = function (e, t, a) {
              var n = !0;
              if (e.files && e.files[0]) {
                var i = new FileReader();
                (i.onload = function (e) {
                  var i = new Image();
                  -1 == $.inArray(a, ["pdf", "doc", "docx", "mp3", "mp4"])
                    ? (i.src = e.target.result)
                    : "pdf" == a
                    ? ($("#editPhoto").css(
                        "background-image",
                        'url("' + $(".pdfDocumentImageUrl").val() + '")'
                      ),
                      (i.src = $(".pdfDocumentImageUrl").val()))
                    : (i.src =
                        "mp3" == a
                          ? $(".audioDocumentImageUrl").val()
                          : "mp4" == a
                          ? $(".videoDocumentImageUrl").val()
                          : $(".docxDocumentImageUrl").val()),
                    (i.onload = function () {
                      $(t).attr("src", i.src),
                        $(t).css("background-image", 'url("' + i.src + '")'),
                        (n = !0);
                    });
                }),
                  n && (i.readAsDataURL(e.files[0]), $(t).show());
              }
            });
          $(".ajaxCallIsRunning").val();
          (window.ajaxCallInProgress = function () {
            !0;
          }),
            (window.ajaxCallCompleted = function () {
              !1;
            }),
            (window.UnprocessableInputError = function (e) {
              toastr.error(e.responseJSON.message);
            }),
            (window.setValueOfEmptySpan = function () {
              $("span.showSpan").each(function () {
                $(this).text() || $(this).text("N/A");
              });
            }),
            (window.addCommas = function (e) {
              for (
                var t = (e += "").split("."),
                  a = t[0],
                  n = t.length > 1 ? "." + t[1] : "",
                  i = /(\d+)(\d{3})/;
                i.test(a);

              )
                a = a.replace(i, "$1,$2");
              return a + n;
            }),
            $(function () {
              listenClick(".notification", function (e) {
                e.stopPropagation();
                var t = $(this).data("id"),
                  a = $(this);
                $('[data-toggle="tooltip"]').tooltip("hide"),
                  $.ajax({
                    type: "get",
                    url: "/notification/" + t + "/read",
                    success: function () {
                      a.remove(),
                        displaySuccessMessage("Notification read successfully");
                      var e = document.getElementsByClassName("notification")
                        .length;
                      $("#counter").text(e),
                        0 == e &&
                          ($(".read-all-notification").addClass("d-none"),
                          $(".empty-state").removeClass("d-none"),
                          $("#counter").text(e),
                          $(".notification-count").addClass("d-none"));
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }),
                listenClick("#readAllNotification", function (e) {
                  e.stopPropagation(),
                    $.ajax({
                      type: "post",
                      url: "/read-all-notification",
                      success: function () {
                        $(".notification").remove(),
                          displaySuccessMessage(
                            "All Notifications read successfully"
                          );
                        var e = document.getElementsByClassName("notification")
                          .length;
                        $("#counter").text(e),
                          $("#readAllNotification").addClass("d-none"),
                          $(".empty-state").addClass("d-none"),
                          $(".empty-state.empty-notification").removeClass(
                            "d-none"
                          ),
                          $(".notification-count").addClass("d-none"),
                          displaySuccessMessage(
                            "All notifications read successfully"
                          );
                      },
                      error: function (e) {
                        manageAjaxErrors(e);
                      }
                    });
                });
            }),
            (window.avoidSpace = function (e) {
              if (
                32 == (e ? e.which : window.event.keyCode) &&
                e.path[0].value.length <= 0
              )
                return !1;
            });
          var o = "asset('assets/img/avatar.png')";
          (window.defaultImagePreview = function (e) {
            var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : null;
            1 == t
              ? $(e).css("background-image", 'url("' + o + '")')
              : $(e).css(
                  "background-image",
                  'url("' + $(".defaultDocumentImageUrl").val() + '")'
                );
          }),
            (window.cancelAppointment = function (e, t, a, n) {
              swal({
                title:
                  Lang.get("messages.common.cancel") +
                  " " +
                  Lang.get("messages.web_menu.appointment"),
                text:
                  Lang.get("messages.appointment.are_you_sure_want_to_cancel") +
                  " " +
                  a +
                  " ?",
                type: "warning",
                icon: "warning",
                closeOnConfirm: !1,
                confirmButtonColor: "#000000",
                showLoaderOnConfirm: !0,
                buttons: {
                  confirm: Lang.get("messages.common.yes"),
                  cancel: Lang.get("messages.common.no")
                }
              }).then(function (t) {
                t &&
                  (function (e, t, a, n) {
                    $.ajax({
                      url: e,
                      type: "POST",
                      success: function (e) {
                        e.success && Livewire.emit("refresh"),
                          swal({
                            title:
                              Lang.get("messages.common.canceled") +
                              " " +
                              Lang.get("messages.web_menu.appointment"),
                            text:
                              a +
                              Lang.get("messages.appointment.has_been_cancelled"),
                            icon: "success",
                            confirmButtonColor: "#D9214E",
                            buttons: { confirm: Lang.get("messages.common.ok") },
                            timer: 2e3
                          });
                      },
                      error: function (e) {
                        swal({
                          title: "Error",
                          icon: "error",
                          text: e.responseJSON.message,
                          type: "error",
                          confirmButtonColor: "#D9214E",
                          buttons: { confirm: Lang.get("messages.common.ok") },
                          timer: 5e3
                        });
                      }
                    });
                  })(e, 0, a);
              });
            });
        },
        6721: () => {
          "use strict";
          function deleteItemAjax(url) {
            var tableId =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : null,
              header = arguments.length > 2 ? arguments[2] : void 0,
              callFunction =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : null;
            $.ajax({
              url,
              type: "DELETE",
              dataType: "json",
              success: function success(obj) {
                obj.success && Livewire.emit("refresh"),
                  swal({
                    icon: "success",
                    title: $(".deletedVariable").val(),
                    confirmButtonColor: "#f62947",
                    text: header + " " + $(".hasBeenDeletedVariable").val(),
                    timer: 2e3,
                    buttons: { confirm: $(".okVariable").val() }
                  }),
                  callFunction && eval(callFunction);
              },
              error: function (e) {
                swal({
                  title: "",
                  text: e.responseJSON.message,
                  confirmButtonColor: "#f62947",
                  icon: "error",
                  timer: 5e3,
                  buttons: { confirm: $(".okVariable").val() }
                });
              }
            });
          }
          window.deleteItem = function (e) {
            var t = arguments.length > 2 ? arguments[2] : void 0;
            swal({
              title: $(".deleteVariable").val(),
              text: $(".confirmVariable").val() + t + "?",
              icon: $(".sweetAlertIcon").val(),
              buttons: {
                confirm:
                  $(".yesVariable").val() + ", " + $(".deleteVariable").val(),
                cancel: $(".noVariable").val() + ", " + $(".cancelVariable").val()
              }
            }).then(function (a) {
              a && (Livewire.emit("refresh"), deleteItemAjax(e, null, t, null));
            });
          };
        },
        3147: () => {
          "use strict";
          (window.isEmpty = function (e) {
            return null == e || "" === e;
          }),
            (window.randomCode = function () {
              var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 6;
              return Math.random().toString(36).slice(-e);
            }),
            (window.listen = function (e, t, a) {
              $(document).on(e, t, a);
            }),
            (window.listenClick = function (e, t) {
              $(document).on("click", e, t);
            }),
            (window.listenSubmit = function (e, t) {
              $(document).on("submit", e, t);
            }),
            (window.listenHiddenBsModal = function (e, t) {
              $(document).on("hidden.bs.modal", e, t);
            }),
            (window.listenChange = function (e, t) {
              $(document).on("change", e, t);
            }),
            (window.listenKeyup = function (e, t) {
              $(document).on("keyup", e, t);
            }),
            (window.listenShownBsModal = function (e, t) {
              $(document).on("shown.bs.modal", e, t);
            });
        },
        7957: () => {
          "use strict";
          (window.setPrice = function (e, t) {
            if ("" != t || t > 0) {
              "number" != typeof t && (t = t.replace(/,/g, ""));
              var a = addCommas(t);
              $(e).val(a);
            }
          }),
            (window.addCommas = function (e) {
              for (
                var t = (e += "").split("."),
                  a = t[0],
                  n = t.length > 1 ? "." + t[1] : "",
                  i = /(\d+)(\d{3})/;
                i.test(a);

              )
                a = a.replace(i, "$1,$2");
              return a + n;
            }),
            (window.getFormattedPrice = function (e) {
              if ("" != e || e > 0)
                return (
                  "number" != typeof e && (e = e.replace(/,/g, "")), addCommas(e)
                );
            }),
            (window.priceFormatSelector = function (e) {
              listen("input keyup keydown keypress", e, function (e) {
                var t = $(this).val();
                if ("" === t) $(this).val("");
                else {
                  if (/^[0-9]+(,[0-9]+)*$/.test(t))
                    return $(this).val(getFormattedPrice(t)), !0;
                  $(this).val(t.replace(/\D/g, ""));
                }
              });
            }),
            (window.removeCommas = function (e) {
              return e.replace(/,/g, "");
            }),
            priceFormatSelector(".price-input");
        },
        5133: () => {
          "use strict";
          (window.newRecord = function (e, t) {
            var a =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : "#AddModal",
              n =
                "" === e.formSelector
                  ? e.formData
                  : new FormData($(e.formSelector)[0]);
            t.attr("disabled", !0),
              $.ajax({
                url: e.url,
                type: e.type,
                dataType: "json",
                data: n,
                processData: !1,
                contentType: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $(a).modal("hide"),
                    t.attr("disabled", !1),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  displayErrorMessage(e.responseJSON.message),
                    t.attr("disabled", !1);
                },
                complete: function () {
                  t.button("reset");
                }
              });
          }),
            (window.editRecord = function (e, t) {
              var a =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : "#EditModal",
                n =
                  arguments.length > 3 && void 0 !== arguments[3]
                    ? arguments[3]
                    : "";
              t.attr("disabled", !0);
              var i =
                "" === e.formSelector
                  ? e.formData
                  : new FormData($(e.formSelector)[0]);
              $.ajax({
                url: e.url,
                type: e.type,
                data: i,
                processData: !1,
                contentType: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $(a).modal("hide"),
                    t.attr("disabled", !1),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  t.attr("disabled", !1), UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset"), $(n).attr("disabled", !0);
                }
              });
            }),
            (window.editRecordWithForm = function (e, t) {
              var a =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : "#EditModal",
                n =
                  "" === e.formSelector
                    ? e.formData
                    : $(e.formSelector).serialize();
              t.attr("disabled", !0),
                $.ajax({
                  url: e.url,
                  type: e.type,
                  data: n,
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $(a).modal("hide"),
                      t.attr("disabled", !1),
                      livewire.emit("refresh"));
                  },
                  error: function (e) {
                    t.attr("disabled", !1), UnprocessableInputError(e);
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            });
        },
        6619: () => {
          "use strict";
          document.addEventListener("turbo:load", function () {
            if (!$(".phoneNumber").length) return !1;
            Lang.setLocale($(".userCurrentLanguage").val());
            var e = document.querySelector(".phoneNumber"),
              t = document.querySelector(".error-msg"),
              a = document.querySelector(".valid-msg"),
              n = [
                Lang.get("messages.common.invalid_number"),
                Lang.get("messages.common.invalid_country_code"),
                Lang.get("messages.common.too_short"),
                Lang.get("messages.common.too_long")
              ];
            if ($(".isEdit").val()) var i = $(".country_iso").val();
            else i = $(".getISOCode").val();
            var r = window.intlTelInput(e, {
                initialCountry: i,
                separateDialCode: !0,
                geoIpLookup: function (e, t) {
                  $.get("https://ipinfo.io", function () {}, "jsonp").always(
                    function (t) {
                      var a = t && t.country ? t.country : "";
                      e(a);
                    }
                  );
                },
                utilsScript: $(".utilsScript").val()
              }),
              s = function () {
                e.classList.remove("error"),
                  (t.innerHTML = ""),
                  t.classList.add("d-none"),
                  a.classList.add("d-none");
              };
            e.addEventListener("blur", function () {
              if ((s(), e.value.trim()))
                if (r.isValidNumber()) a.classList.remove("d-none");
                else {
                  e.classList.add("error");
                  var i = r.getValidationError();
                  (t.innerHTML = n[i]), t.classList.remove("d-none");
                }
            }),
              e.addEventListener("change", s),
              e.addEventListener("keyup", s);
            var o = $(".phoneNo").val();
            void 0 !== o &&
              "" !== o &&
              setTimeout(function () {
                $(".phoneNumber").trigger("change");
              }, 500);
            if (
              (listen("blur keyup change countrychange", function () {
                void 0 !== o &&
                  "" !== o &&
                  (r.setNumber("+" + o),
                  (function (e) {
                    throw new TypeError('"' + e + '" is read-only');
                  })("phoneNo"));
                var e = r.selectedCountryData.dialCode;
                $(".prefix_code").val(e);
              }),
              $(".isEdit").val())
            ) {
              var d = r.selectedCountryData.dialCode,
                l = r.selectedCountryData.iso2;
              $(".prefix_code").val(d), $(".country_iso").val(l);
            }
            $(".phoneNumber").focus(), $(".phoneNumber").blur();
            var c = $(".phoneNumber")
              .val()
              .replaceAll("-", " ")
              .replace(/\s/g, "");
            $(".phoneNumber").val(c);
          });
        },
        6045: () => {
          "use strict";
          listenHiddenBsModal("#AddModal", function () {
            $(".preview-image").prop("src", $(".defaultImageUrl").val()),
              $(".select2-dd").val("").trigger("change.select2"),
              resetModalForm("#addNewForm", "#validationErrorsBox");
          }),
            listenHiddenBsModal("#EditModal", function () {
              $(".preview-image").prop("src", $(".defaultImageUrl").val()),
                $(".select2-dd").val("").trigger("change.select2"),
                resetModalForm("#editForm", "#editValidationErrorsBox");
            });
        },
        9434: () => {
          "use strict";
          listenClick(".notice-board-view-btn", function (e) {
            if (!$(".ajaxCallIsRunning").val()) {
              ajaxCallInProgress();
              var t = $(e.currentTarget).attr("data-id");
              $.ajax({
                url: $(".noticeBoardUrl").val() + "/" + t,
                type: "GET",
                success: function (e) {
                  e.success &&
                    ($("#showNoticeBoardTitle").html(""),
                    $("#showNoticeBoardDescription").html(""),
                    $("#showNoticeBoardTitle").append(e.data.title),
                    $("#showNoticeBoardDescription").append(e.data.description),
                    $("#show_notice_boards_modal").appendTo("body").modal("show"),
                    ajaxCallCompleted());
                },
                error: function (e) {
                  manageAjaxErrors(e);
                }
              });
            }
          });
        },
        2325: () => {
          document.addEventListener("turbo:load", function () {
            if (
              !$("#addDeathReportForm").length &&
              !$("#editDeathReportForm").length
            )
              return !1;
            var e = $("#deathCaseId"),
              t = $("#deathDoctorId"),
              a = $("#editDeathCaseId"),
              n = $("#editDeathDoctorId"),
              i = $("#deathDate"),
              r = $("#editDeathDate");
            e.length &&
              $("#deathCaseId").select2({
                width: "100%",
                dropdownParent: $("#add_death_reports_modal")
              });
            t.length &&
              $("#deathDoctorId").select2({
                width: "100%",
                dropdownParent: $("#add_death_reports_modal")
              });
            a.length &&
              $("#editDeathCaseId").select2({
                width: "100%",
                dropdownParent: $("#edit_death_reports_modal")
              });
            n.length &&
              $("#editDeathDoctorId").select2({
                width: "100%",
                dropdownParent: $("#edit_death_reports_modal")
              });
            i.length &&
              $("#deathDate").flatpickr({
                dateFormat: "Y-m-d h:i K",
                useCurrent: !0,
                enableTime: !0,
                sideBySide: !0,
                maxDate: new Date(),
                locale: $(".userCurrentLanguage").val()
              });
            r.length &&
              $("#editDeathDate").flatpickr({
                dateFormat: "Y-m-d h:i K",
                useCurrent: !0,
                enableTime: !0,
                sideBySide: !0,
                maxDate: new Date(),
                locale: $(".userCurrentLanguage").val()
              });
          }),
            listenSubmit("#addDeathReportForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#deathReportSave");
              t.button("loading"),
                $.ajax({
                  url: $("#indexDeathReportCreateUrl").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_death_reports_modal").modal("hide"),
                      Livewire.emit("refresh"));
                  },
                  error: function (e) {
                    printErrorMessage("#deathReportErrorsBox", e);
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listenClick(".death-report-edit-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $(".deathReportUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      e.success &&
                        ($("#deathReportId").val(e.data.id),
                        $("#editDeathCaseId")
                          .val(e.data.case_id)
                          .trigger("change.select2"),
                        $("#editDeathDoctorId")
                          .val(e.data.doctor_id)
                          .trigger("change.select2"),
                        $("#editDeathDescription").val(e.data.description),
                        document
                          .querySelector("#editDeathDate")
                          ._flatpickr.setDate(moment(e.data.date).format()),
                        $("#edit_death_reports_modal").modal("show"),
                        ajaxCallCompleted());
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#editDeathReportForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editDeathReportSave");
              t.button("loading");
              var a = $("#deathReportId").val();
              $.ajax({
                url: $(".deathReportUrl").val() + "/" + a,
                type: "patch",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_death_reports_modal").modal("hide"),
                    Livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_death_reports_modal", function () {
              resetModalForm("#addDeathReportForm", "#deathReportErrorsBox"),
                $("#deathCaseId, #deathDoctorId")
                  .val("")
                  .trigger("change.select2");
            }),
            listenHiddenBsModal("#edit_death_reports_modal", function () {
              resetModalForm("#editDeathReportForm", "#c");
            });
        },
        1448: () => {},
        7977: () => {
          "use strict";
          listenClick(".death-report-delete-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $(".deathReportUrl").val() + "/" + t,
              "",
              $("#deathReport").val()
            );
          });
        },
        291: () => {},
        312: () => {
          "use strict";
          listenSubmit("#addDiagnosisCatForm", function (e) {
            e.preventDefault();
            var t = jQuery(this).find("#diagnosisCatSave");
            t.button("loading"),
              $.ajax({
                url: $("#diagnosisCategoryCreateUrl").val(),
                type: "POST",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#add_diagnosis_categories_modal").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  printErrorMessage("#diagnosisCatErrorsBox", e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
          }),
            listenClick(".diagnosis-category-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#diagnosisCategoryUrl").val() + "/" + t,
                "",
                $("#diagnosisCategory").val()
              );
            }),
            listenClick(".diagnosis-category-edit-btn", function (e) {
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url: $("#diagnosisCategoryUrl").val() + "/" + t + "/edit",
                  type: "GET",
                  success: function (e) {
                    e.success &&
                      ($("#diagnosisCategoryId").val(e.data.id),
                      $("#editDiagnosisCatName").val(e.data.name),
                      $("#editDiagnosisCatDescription").val(e.data.description),
                      $("#edit_diagnosis_categories_modal").modal("show"));
                  },
                  error: function (e) {
                    manageAjaxErrors(e);
                  }
                });
            }),
            listenSubmit("#editDiagnosisCatForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editDiagnosisCatSave");
              t.button("loading");
              var a = $("#diagnosisCategoryId").val();
              $.ajax({
                url: $("#diagnosisCategoryUrl").val() + "/" + a,
                type: "patch",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_diagnosis_categories_modal").modal("hide"),
                    $("#diagnosisCategoryShowUrl").length
                      ? (window.location.href = $(
                          "#diagnosisCategoryShowUrl"
                        ).val())
                      : livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_diagnosis_categories_modal", function () {
              resetModalForm("#addDiagnosisCatForm", "#diagnosisCatErrorsBox");
            }),
            listenHiddenBsModal("#edit_diagnosis_categories_modal", function () {
              resetModalForm(
                "#editDiagnosisCatForm",
                "#editDiagnosisCatErrorsBox"
              );
            });
        },
        8291: () => {
          document.addEventListener("turbo:load", function () {
            if (
              !$("#addDoctorChargesForm").length &&
              !$("#editDoctorChargesForm").length
            )
              return !1;
            var e = $("#chargesDoctorId"),
              t = $("#editChargesDoctorId");
            e.length &&
              $("#chargesDoctorId").select2({
                width: "100%",
                dropdownParent: $("#add_doctor_opd_charges_modal")
              });
            t.length &&
              $("#editChargesDoctorId").select2({
                width: "100%",
                dropdownParent: $("#edit_doctor_opd_charges_modal")
              });
          }),
            listenSubmit("#addDoctorChargesForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#doctorChargesSave");
              t.button("loading"),
                $.ajax({
                  url: $("#doctorOPDCreateChargeURLID").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_doctor_opd_charges_modal").modal("hide"),
                      livewire.emit("refresh"));
                  },
                  error: function (e) {
                    printErrorMessage("#doctorChargesErrorsBox", e);
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listenClick(".doctor-opd-charge-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#doctorOPDChargeURLID").val() + "/" + t,
                null,
                $("#doctorOPDCharges").val()
              );
            }),
            listenClick(".doctor-opd-charge-edit-btn", function (e) {
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url: $("#doctorOPDChargeURLID").val() + "/" + t + "/edit",
                  type: "GET",
                  success: function (e) {
                    e.success &&
                      ($("#doctorOPDChargeId").val(e.data.id),
                      $("#editChargesDoctorId")
                        .val(e.data.doctor_id)
                        .trigger("change.select2"),
                      $("#editDoctorStandardCharge").val(e.data.standard_charge),
                      $("#editDoctorfollowupCharge").val(e.data.followup_charge),
                      $(".price-input").trigger("input"),
                      $("#edit_doctor_opd_charges_modal").modal("show"));
                  },
                  error: function (e) {
                    manageAjaxErrors(e);
                  }
                });
            }),
            listenSubmit("#editDoctorChargesForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editDoctorChargesSave");
              t.button("loading");
              var a = $("#doctorOPDChargeId").val();
              $.ajax({
                url: $("#doctorOPDChargeURLID").val() + "/" + a,
                type: "patch",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_doctor_opd_charges_modal").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_doctor_opd_charges_modal", function () {
              resetModalForm("#addDoctorChargesForm", "#doctorChargesErrorsBox"),
                $("#chargesDoctorId").val("").trigger("change.select2");
            }),
            listenHiddenBsModal("#edit_doctor_opd_charges_modal", function () {
              resetModalForm(
                "#editDoctorChargesForm",
                "#editDoctorChargesErrorsBox"
              );
            });
        },
        3949: () => {
          function e(e, t) {
            var a = $(e).val().split(".").pop().toLowerCase();
            return (
              -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
            );
          }
          document.addEventListener("turbo:load", function () {
            if (!$("#createDoctorForm").length && !$("#editDoctorForm").length)
              return !1;
            var e = $("#doctorBloodGroup"),
              t = $("#editDoctorBloodGroup"),
              a = $("#departmentId"),
              n = $("#doctorsDepartmentId"),
              i = $("#editDoctorsDepartmentId"),
              r = $("#createDoctorForm"),
              s = $("#editDoctorForm"),
              o = $("#doctorBirthDate"),
              d = $("#editDoctorBirthDate");
            e.length && $("#doctorBloodGroup").select2({ width: "100%" }),
              t.length && $("#editDoctorBloodGroup").select2({ width: "100%" }),
              a.length && $("#departmentId").select2({ width: "100%" }),
              n.length && $("#doctorsDepartmentId").select2({ width: "100%" }),
              i.length &&
                $("#editDoctorsDepartmentId").select2({ width: "100%" }),
              r.length &&
                $("#createDoctorForm").find("input:text:visible:first").focus(),
              s.length &&
                $("#editDoctorForm").find("input:text:visible:first").focus(),
              o.length &&
                $("#doctorBirthDate").flatpickr({
                  maxDate: new Date(),
                  locale: $(".userCurrentLanguage").val()
                }),
              d.length &&
                $("#editDoctorBirthDate").flatpickr({
                  maxDate: new Date(),
                  locale: $(".userCurrentLanguage").val()
                });
          }),
            listenChange(".doctorProfileImage", function () {
              var t = e($(this), "#customValidationErrorsBox");
              isEmpty(t) || 0 == t
                ? ($(this).val(""),
                  $("#customValidationErrorsBox").removeClass("d-none hide"),
                  $("#customValidationErrorsBox")
                    .text("The image must be a file of type: jpg, jpeg, png.")
                    .show(),
                  $("[id=customValidationErrorsBox]").focus(),
                  $("html, body").animate({ scrollTop: "0" }, 500),
                  $(".alert").delay(5e3).slideUp(300))
                : ($("#customValidationErrorsBox").html("").hide(),
                  displayDocument(this, "#customValidationErrorsBox", t));
            }),
            listenChange(".editDoctorProfileImage", function () {
              var t = e($(this), "#editDoctorErrorsBox");
              isEmpty(t) || 0 == t
                ? ($(this).val(""),
                  $("#editDoctorErrorsBox").removeClass("d-none hide"),
                  $("#editDoctorErrorsBox")
                    .text("The image must be a file of type: jpg, jpeg, png.")
                    .show(),
                  $("[id=editDoctorErrorsBox]").focus(),
                  $("html, body").animate({ scrollTop: "0" }, 500),
                  $(".alert").delay(5e3).slideUp(300))
                : ($("#editDoctorErrorsBox").html("").hide(),
                  displayDocument(this, "#editDoctorErrorsBox", t));
            }),
            listenKeyup("#doctorFacebookUrl,#editDoctorFacebookUrl", function () {
              this.value = this.value.toLowerCase();
            }),
            listenKeyup("#doctorTwitterUrl,#editDoctorTwitterUrl", function () {
              this.value = this.value.toLowerCase();
            }),
            listenKeyup(
              "#doctorInstagramUrl,#editDoctorInstagramUrl",
              function () {
                this.value = this.value.toLowerCase();
              }
            ),
            listenKeyup("#doctorLinkedInUrl,#editDoctorLinkedInUrl", function () {
              this.value = this.value.toLowerCase();
            }),
            listenSubmit("#createDoctorForm, #editDoctorForm", function () {
              if ("" !== $(".error-msg").text())
                return $(".phoneNumber").focus(), !1;
              var e = $(".facebookUrl").val(),
                t = $(".twitterUrl").val(),
                a = $(".instagramUrl").val(),
                n = $(".linkedInUrl").val(),
                i = new RegExp(
                  /^(https?:\/\/)?((m{1}\.)?)?((w{2,3}\.)?)facebook.[a-z]{2,3}\/?.*/i
                ),
                r = new RegExp(
                  /^(https?:\/\/)?((m{1}\.)?)?((w{2,3}\.)?)twitter\.[a-z]{2,3}\/?.*/i
                ),
                s = new RegExp(
                  /^(https?:\/\/)?((w{2,3}\.)?)instagram.[a-z]{2,3}\/?.*/i
                ),
                o = new RegExp(
                  /^(https?:\/\/)?((w{2,3}\.)?)linkedin\.[a-z]{2,3}\/?.*/i
                );
              return "" != e && !e.match(i)
                ? (displayErrorMessage("Please enter a valid Facebook URL"), !1)
                : "" != t && !t.match(r)
                ? (displayErrorMessage("Please enter a valid Twitter URL"), !1)
                : "" != a && !a.match(s)
                ? (displayErrorMessage("Please enter a valid Instagram URL"), !1)
                : "" == n || !!n.match(o)
                ? void 0
                : (displayErrorMessage("Please enter a valid Linkedin URL"), !1);
            }),
            listenClick(".doctor-remove-image", function () {
              defaultImagePreview(".previewImage", 1);
            });
        },
        3737: () => {
          "use strict";
          listenClick(".doctor-delete-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#indexDoctorUrl").val() + "/" + t,
              "",
              $("#Doctor").val()
            );
          }),
            listenChange(".doctor-active-status", function (e) {
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url: $("#indexDoctorUrl").val() + "/" + +t + "/active-deactive",
                  method: "post",
                  cache: !1,
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      Livewire.emit("refresh"));
                  }
                });
            }),
            listenClick("#doctorResetFilter", function () {
              $("#doctorsHead").val(2).trigger("change"),
                hideDropdownManually($("#doctorsFilterBtn"), $(".dropdown-menu"));
            }),
            listenChange("#doctorsHead", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            });
        },
        217: () => {},
        7836: () => {},
        4477: () => {},
        3109: () => {
          "use strict";
          listenClick(".doctor-department-delete-btn", function (e) {
            var t = e.currentTarget.dataset.id;
            deleteItem(
              $("#indexDoctorDepartmentUrl").val() + "/" + t,
              "",
              $("#doctorDepartment").val()
            );
          }),
            listenSubmit("#addDoctorDepartmentForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#doctorDepartmentSave");
              t.button("loading"),
                $.ajax({
                  url: $("#indexDoctorDepartmentCreateUrl").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_doctor_departments_modal").modal("hide"),
                      livewire.emit("refresh"));
                  },
                  error: function (e) {
                    printErrorMessage("#doctorDepartmentErrorsBox", e);
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listenClick(".doctor-department-edit-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = e.currentTarget.dataset.id;
                (t = a),
                  $.ajax({
                    url: $("#indexDoctorDepartmentUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      e.success &&
                        ($("#doctorDepartmentId").val(e.data.id),
                        $("#editDoctorDepartmentTitle").val(e.data.title),
                        $("#editDoctorDepartmentShortName").val(e.data.short_name),
                        $("#editDoctorDepartmentDescription").val(
                          e.data.description
                        ),
                        $("#edit_doctor_departments_modal").modal("show"),
                        ajaxCallCompleted());
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#editDoctorDepartmentForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editDoctorDepartmentSave");
              t.button("loading");
              var a = $("#doctorDepartmentId").val();
              $.ajax({
                url: $("#indexDoctorDepartmentUrl").val() + "/" + a,
                type: "patch",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_doctor_departments_modal").modal("hide"),
                    $("#showDoctorDepartmentUrl").length
                      ? (window.location.href = $(
                          "#showDoctorDepartmentUrl"
                        ).val())
                      : livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_doctor_departments_modal", function () {
              resetModalForm(
                "#addDoctorDepartmentForm",
                "#doctorDepartmentErrorsBox"
              );
            }),
            listenHiddenBsModal("#edit_doctor_departments_modal", function () {
              resetModalForm(
                "#editDoctorDepartmentForm",
                "#editDoctorDepartmentErrorsBox"
              );
            });
        },
        8621: () => {},
        4599: () => {
          "use strict";
          function e(e, t, a) {
            var n = $(e).val().split(".").pop().toLowerCase();
            return a.files[0].size > 1e7
              ? ($(e).val(""),
                $(t).html("The document must be less than 10 mb").show(),
                setTimeout(function () {
                  $(t).slideUp(500);
                }, 5e3),
                !1)
              : -1 ==
                $.inArray(n, ["png", "jpg", "jpeg", "pdf", "doc", "docx", "webp"])
              ? ($(e).val(""),
                $(t)
                  .html(
                    "The document must be a file of type: jpeg, jpg, png, pdf, doc, docx, webp"
                  )
                  .show(),
                setTimeout(function () {
                  $(t).slideUp(500);
                }, 5e3),
                !1)
              : n;
          }
          document.addEventListener("turbo:load", function () {
            if (!$(".addDocumentForm").length && !$("#editDocumentForm").length)
              return !1;
            var e = $("#documentPatientId"),
              t = $("#documentTypeId"),
              a = $("#editDocumentPatientId"),
              n = $("#editDocumentTypeId");
            e.length &&
              (editDocumentTypeId,
              $("#documentPatientId").select2({
                width: "100%",
                dropdownParent: $("#add_documents_modal")
              }));
            t.length &&
              $("#documentTypeId").select2({
                width: "100%",
                dropdownParent: $("#add_documents_modal")
              });
            a.length &&
              $("#editDocumentPatientId").select2({
                width: "100%",
                dropdownParent: $("#edit_documents_modal")
              });
            n.length &&
              $("#editDocumentTypeId").select2({
                width: "100%",
                dropdownParent: $("#edit_documents_modal")
              });
          }),
            listenClick(".document-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#indexDocumentsUrl").val() + "/" + t,
                "",
                $("#Documents").val()
              );
            }),
            listenChange("#documentImage,#editDocumentImage", function () {
              $(this).val();
            }),
            listenSubmit(".addDocumentForm", function (e) {
              if ((e.preventDefault(), "" !== $("#documentErrorsBox").text()))
                return (
                  $("#documentImage").focus(),
                  displayErrorMessage($("#documentErrorsBox").text()),
                  !1
                );
              var t = jQuery(this).find("#documentSave");
              t.button("loading"), t.button("loading");
              var a = {
                formSelector: $(this),
                url: $("#indexDocumentsCreateUrl").val(),
                type: "POST"
              };
              newRecord(a, t, "#add_documents_modal");
            }),
            listenClick(".document-edit-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#indexDocumentsUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      if (e.success) {
                        var t = e.data.document_url
                          .split(".")
                          .pop()
                          .toLowerCase();
                        "pdf" == t
                          ? $("#editDocumentPreviewImage").css(
                              "background-image",
                              'url("' + $(".pdfDocumentImageUrl").val() + '")'
                            )
                          : "docx" == t || "doc" == t
                          ? $("#editDocumentPreviewImage").css(
                              "background-image",
                              'url("' + $(".docxDocumentImageUrl").val() + '")'
                            )
                          : $("#editDocumentPreviewImage").css(
                              "background-image",
                              'url("' + e.data.document_url + '")'
                            ),
                          $("#editDocumentTypeId")
                            .val(e.data.document_type_id)
                            .trigger("change.select2"),
                          $("#editDocumentPatientId")
                            .val(e.data.patient_id)
                            .trigger("change.select2"),
                          $("#editDocumentTitle").val(e.data.title),
                          isEmpty(e.data.document_url)
                            ? $("#editDocumentUrl").hide()
                            : $("#editDocumentUrl").attr(
                                "href",
                                e.data.document_url
                              ),
                          $("#documentId").val(e.data.id),
                          $("#editDocumentNotes").val(e.data.notes),
                          $("#edit_documents_modal").modal("show"),
                          ajaxCallCompleted();
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#editDocumentForm", function (e) {
              if ((e.preventDefault(), "" !== $("#editDocumentErrorsBox").text()))
                return (
                  $("#documentImage").focus(),
                  displayErrorMessage($("#editDocumentErrorsBox").text()),
                  !1
                );
              var t = jQuery(this).find("#editDocumentSave");
              t.button("loading");
              var a = $("#documentId").val(),
                n = $("#indexDocumentsUrl").val() + "/" + a + "/update",
                i = { formSelector: $(this), url: n, type: "POST" };
              editRecord(i, t, "#edit_documents_modal");
            }),
            listenHiddenBsModal("#add_documents_modal", function () {
              $("#documentTypeId").val(null).trigger("change"),
                $("#documentPatientId").val(null).trigger("change"),
                $("#documentPreviewImage").css(
                  "background-image",
                  "url(" + $("#indexDefaultDocumentImageUrl").val() + ")"
                ),
                null,
                resetModalForm(".addDocumentForm", "#documentErrorsBox");
            }),
            listenHiddenBsModal("#edit_documents_modal", function () {
              resetModalForm("#editDocumentForm", "#editDocumentErrorsBox");
            }),
            listenShownBsModal(
              "#add_documents_modal,#edit_documents_modal",
              function () {
                $("#documentTypeId,#documentPatientId").select2({
                  width: "100%",
                  dropdownParent: $("#add_documents_modal")
                }),
                  $("#editDocumentTypeId,#editDocumentPatientId").select2({
                    width: "100%",
                    dropdownParent: $("#edit_documents_modal")
                  });
              }
            ),
            listenChange("#documentImage", function () {
              var t = e($(this), "#documentErrorsBox", this);
              isEmpty(t) ||
                0 == t ||
                ($("#documentErrorsBox").html("").hide(),
                displayDocument(this, "#documentPreviewImage", t));
            }),
            listenChange("#editDocumentImage", function () {
              var t = e($(this), "#editDocumentErrorsBox", this);
              isEmpty(t) ||
                0 == t ||
                ($("#editDocumentErrorsBox").html("").hide(),
                displayDocument(this, "#editPreviewImage", t));
            });
        },
        1948: () => {
          "use strict";
          listenClick(".editDocTypeBtn", function (e) {
            if (!$(".ajaxCallIsRunning").val()) {
              ajaxCallInProgress();
              var t = $(e.currentTarget).attr("data-id");
              renderDocTypeDetailData(t);
            }
          }),
            (window.renderDocTypeDetailData = function (e) {
              $.ajax({
                url: $("#showDocTypeUrl").val() + "/" + e + "/edit",
                type: "GET",
                success: function (e) {
                  e.success &&
                    ($("#docTypeId").val(e.data.id),
                    $("#editDocTypeName").val(e.data.name),
                    $("#edit_document_types_modal").modal("show"),
                    ajaxCallCompleted());
                },
                error: function (e) {
                  manageAjaxErrors(e);
                }
              });
            }),
            listenSubmit("#editDocTypeForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editDocTypeSave");
              t.button("loading");
              var a = $("#docTypeId").val(),
                n = $("#showDocTypeUrl").val() + "/" + a,
                i = { formSelector: $(this), url: n, type: "PUT" };
              editDocumentTypeRecordWithForm(i, t);
            }),
            (window.editDocumentTypeRecordWithForm = function (e, t) {
              var a =
                "" === e.formSelector
                  ? e.formData
                  : $(e.formSelector).serialize();
              $.ajax({
                url: e.url,
                type: e.type,
                data: a,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_document_types_modal").modal("hide"),
                    setTimeout(function () {
                      window.location.reload();
                    }, 3e3));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            });
        },
        2895: () => {
          listenSubmit("#addDocTypeForm", function (e) {
            e.preventDefault();
            var t = jQuery(this).find("#docTypeSave");
            t.button("loading");
            var a = {
              formSelector: $(this),
              url: $("#indexDocTypeCreateUrl").val(),
              type: "POST"
            };
            newRecord(a, t, "#add_document_types_modal");
          }),
            listenClick(".editDocTypBtn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#indexDocTypeUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      e.success &&
                        ($("#docTypeId").val(e.data.id),
                        $("#editDocTypeName").val(e.data.name),
                        $("#edit_document_types_modal").modal("show"),
                        ajaxCallCompleted());
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#editDocTypForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editDocTypeSave");
              t.button("loading");
              var a = $("#docTypeId").val(),
                n = $(".docTypeUrl").val() + "/" + a,
                i = { formSelector: $(this), url: n, type: "PUT" };
              editRecordWithForm(i, t, "#edit_document_types_modal");
            }),
            listenClick(".deleteDocTypeBtn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#indexDocTypeUrl").val() + "/" + t,
                "",
                $("#documentType").val()
              );
            }),
            listenHiddenBsModal("#add_document_types_modal", function () {
              resetModalForm("#addDocTypeForm", "#docTypeErrorsBox");
            });
        },
        9459: () => {},
        36: () => {},
        306: () => {
          listenChange("#doctorsHead", function () {
            window.livewire.emit("changeFilter", "statusFilter", $(this).val());
          }),
            listenClick("#doctorResetFilter", function () {
              $("#doctorsHead").val(2).trigger("change"),
                hideDropdownManually($("#doctorsFilterBtn"), $(".dropdown-menu"));
            });
        },
        8722: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#invoice_status_filter").length) return;
            $("#invoice_status_filter").select2({ width: "100%" });
          }),
            listenChange("#invoice_status_filter", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            }),
            listen("click", "#resetEmployeeInvoiceFilter", function () {
              $("#invoice_status_filter").val(0).trigger("change");
            });
        },
        2733: () => {},
        1015: () => {},
        5305: () => {
          listenChange("#patient_admission_filter_status", function () {
            window.livewire.emit("changeFilter", "statusFilter", $(this).val()),
              hideDropdownManually(
                $("#patientAdmissionFilterBtn"),
                $("#patientAdmissionFilterDiv")
              );
          }),
            listenClick("#admissionResetFilter", function () {
              $("#patient_admission_filter_status").val(0).trigger("change"),
                hideDropdownManually(
                  $("#patientAdmissionFilterBtn"),
                  $("#patientAdmissionFilterDiv")
                );
            });
        },
        2565: () => {},
        5350: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#type").length) return;
            setTimeout(function () {
              $("#type").trigger("change");
            }, 1e3);
          });
        },
        10: () => {
          listen("click", "#ePayrollResetFilter", function () {
            $("#employee_payroll_filter_status").val(0).trigger("change"),
              hideDropdownManually(
                $("#employeePayrollFilterBtn"),
                $(".dropdown-menu")
              );
          }),
            listen("click", ".deleteEmpPayrollBtn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#indexEmployeePayrollUrl").val() + "/" + t,
                "",
                $("#employeePayroll").val()
              );
            }),
            listen("click", ".showEPayrollBtn", function (e) {
              e.preventDefault();
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url: $("#employeesPayrollShowModal").val() + "/" + t,
                  type: "GET",
                  success: function (e) {
                    if (e.success) {
                      $("#sr_no").text(e.data.sr_no),
                        $("#payroll_id").text(e.data.payroll_id),
                        $("#payroll_role").text(e.data.type_string),
                        $("#employee_full_name").text(e.data.full_name),
                        $("#payroll_month").text(e.data.month),
                        $("#payroll_year").text(e.data.year),
                        $("#salary").text(addCommas(e.data.basic_salary)),
                        $("#allowance").text(addCommas(e.data.allowance)),
                        $("#deductions").text(addCommas(e.data.deductions)),
                        $("#net_salary").text(addCommas(e.data.net_salary)),
                        $("#employee_status").empty();
                      var t = $("#employeesPayrollStatusUnPaid").val(),
                        a = $("#employeesPayrollStatusPaid").val();
                      1 == e.data.status
                        ? $("#employee_status").append(
                            '<span class="badge bg-light-success">' +
                              a +
                              "</span>"
                          )
                        : $("#employee_status").append(
                            '<span class="badge bg-light-danger">' + t + "</span>"
                          ),
                        $("#created_on").text(
                          moment(e.data.created_at).fromNow()
                        ),
                        $("#updated_on").text(
                          moment(e.data.updated_at).fromNow()
                        ),
                        setValueOfEmptySpan(),
                        $("#showEmployeePayrolls").appendTo("body").modal("show");
                    }
                  },
                  error: function (e) {
                    displayErrorMessage(e.responseJSON.message);
                  }
                });
            }),
            listenChange("#employee_payroll_filter_status", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            });
        },
        7513: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#createPayroll").length && !$("#editPayroll").length) return;
            $(".price-input").trigger("input"), $(".type").focus();
          }),
            listenChange(".basicSalary,#allowance,#deductions", function () {
              var e = parseFloat(removeCommas($(".basicSalary").val())),
                t = parseFloat(removeCommas($("#allowance").val())),
                a = parseFloat(removeCommas($("#deductions").val())),
                n = (e = isNaN(e) ? 0 : e) + (t = isNaN(t) ? 0 : t);
              (a = isNaN(a) ? 0 : a) > n &&
                ($("#validationErrorsBox").removeClass("d-none"),
                $("#validationErrorsBox")
                  .text(
                    "Deductions cannot be greater than Basic salary + Allowance"
                  )
                  .show(),
                $("#deductions").val(null),
                (a = 0),
                setTimeout(function () {
                  $("#validationErrorsBox").addClass("d-none"),
                    $("#validationErrorsBox").text("");
                }, 7e3)),
                (n = e + t - a),
                isNaN(n)
                  ? $("#netSalary").val(0)
                  : $("#netSalary").val(n).trigger("input");
            }),
            listenChange("#type", function () {
              "" !== $(this).val() &&
                $.ajax({
                  url: $(".employeeUrl").val(),
                  type: "get",
                  dataType: "json",
                  data: { id: $(this).val() },
                  success: function (e) {
                    $("#ownerType").removeAttr("disabled"),
                      $.each(e.data, function (e, t) {
                        $("#ownerType").append(
                          $("<option></option>").attr("value", e).text(t)
                        );
                      });
                    var t = $(".isEdit").val();
                    t &&
                      ($("#ownerType")
                        .val($(".employeeOwnerId").val())
                        .trigger("change"),
                      (t = !1));
                  }
                }),
                $("#ownerType").empty(),
                $("#ownerType").prepend(
                  '<option value="0">Select Employee</option>'
                ),
                $("#ownerType").prop("disabled", !0);
            }),
            listenSubmit("#createPayroll, #editPayroll", function () {
              $(".btnSave").attr("disabled", !0);
            });
        },
        3143: () => {},
        5891: () => {
          listenChange(".enquiryStatus", function () {
            var e,
              t = $(this).attr("data-id");
            (e = t),
              $.ajax({
                url: $("#indexEnquiryUrl").val() + "/" + +e + "/active-deactive",
                method: "post",
                cache: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message), Livewire.emit("refresh"));
                }
              });
          }),
            listenClick("#resetEnquiryFilter", function () {
              $("#enquiriesHead").val(2).trigger("change"),
                hideDropdownManually(
                  $("#enquiriesFilterBtn"),
                  $(".dropdown-menu")
                );
            }),
            listenChange("#enquiriesHead", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            });
        },
        338: () => {},
        9329: () => {
          function e(e, t) {
            var a = $(e).val().split(".").pop().toLowerCase();
            return -1 ==
              $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"])
              ? ($(e).val(""),
                $(t).html($("#indexIncomeDocumentError").val()).show(),
                !1)
              : a;
          }
          document.addEventListener("turbo:load", function () {
            if (!$("#indexExpenseUrl").length) return;
            $("#expenseHead").select2({ width: "100%" }),
              $("#expenseId").select2({
                width: "100%",
                dropdownParent: $("#add_expenses_modal")
              }),
              $("#editExpenseHeadId").select2({
                width: "100%",
                dropdownParent: $("#edit_expenses_modal")
              }),
              $("#expenseDate").flatpickr({
                format: "YYYY-MM-DD",
                useCurrent: !0,
                sideBySide: !0,
                locale: $(".userCurrentLanguage").val()
              });
            var e = $("#editExpenseDate").flatpickr({
              format: "YYYY-MM-DD",
              useCurrent: !0,
              sideBySide: !0,
              locale: $(".userCurrentLanguage").val()
            });
            listenShownBsModal(
              "#add_expenses_modal, #edit_expenses_modal",
              function () {
                $("#expenseId, #editExpenseHeadId:first").focus(),
                  $("#expenseId").select2({
                    width: "100%",
                    dropdownParent: $("#add_expenses_modal")
                  }),
                  $("#editExpenseHeadId").select2({
                    width: "100%",
                    dropdownParent: $("#edit_expenses_modal")
                  });
              }
            ),
              listenClick(".deleteExpenseBtn", function (e) {
                var t = $(e.currentTarget).attr("data-id");
                deleteItem(
                  $("#indexExpenseUrl").val() + "/" + t,
                  "",
                  $("#Expenses").val()
                );
              }),
              listenClick(".editExpensesBtn", function (t) {
                if (!$(".ajaxCallIsRunning").val()) {
                  ajaxCallInProgress();
                  var a,
                    n = $(t.currentTarget).attr("data-id");
                  (a = n),
                    $.ajax({
                      url: $("#indexExpenseUrl").val() + "/" + a + "/edit",
                      type: "GET",
                      success: function (t) {
                        if (t.success) {
                          var a = t.data.document_url
                            .split(".")
                            .pop()
                            .toLowerCase();
                          "pdf" == a
                            ? $("#editExpensePreviewImage").css(
                                "background-image",
                                'url("' + $(".pdfDocumentImageUrl").val() + '")'
                              )
                            : "docx" == a || "doc" == a
                            ? $("#editExpensePreviewImage").css(
                                "background-image",
                                'url("' + $(".docxDocumentImageUrl").val() + '")'
                              )
                            : "" == a
                            ? $("#editExpensePreviewImage").css(
                                "background-image",
                                'url("' +
                                  $(
                                    "#indexExpenseDefaultDocumentImageUrl"
                                  ).val() +
                                  '")'
                              )
                            : $("#editExpensePreviewImage").css(
                                "background-image",
                                'url("' + t.data.document_url + '")'
                              ),
                            $("#editExpenseId").val(t.data.id),
                            $("#editExpenseHeadId")
                              .val(t.data.expense_head)
                              .trigger("change.select2"),
                            $("#editExpenseName").val(t.data.name),
                            e.setDate(format(t.data.date)),
                            $("#editExpenseInvoiceNumber").val(
                              t.data.invoice_number
                            ),
                            $("#editExpenseAmount").val(t.data.amount),
                            $(".price-input").trigger("input"),
                            $("#editExpenseDescription").val(t.data.description),
                            isEmpty(t.data.document_url)
                              ? ($("#expenseDocumentUrl").hide(),
                                $(".btn-view").hide())
                              : ($("#expenseDocumentUrl").show(),
                                $(".btn-view").show(),
                                $("#expenseDocumentUrl").attr(
                                  "href",
                                  t.data.document_url
                                )),
                            $("#edit_expenses_modal")
                              .appendTo("body")
                              .modal("show"),
                            ajaxCallCompleted();
                        }
                      },
                      error: function (e) {
                        manageAjaxErrors(e);
                      }
                    });
                }
              });
          }),
            listenSubmit("#addExpenseForm", function (e) {
              e.preventDefault(), $("#expenseSave").attr("disabled", !0);
              var t = jQuery(this).find("#expenseSave");
              t.button("loading");
              var a = {
                formSelector: $(this),
                url: $("#indexExpenseCreateUrl").val(),
                type: "POST"
              };
              newRecord(a, t, "#add_expenses_modal");
            }),
            listenSubmit("#editExpensesForm", function (e) {
              e.preventDefault(), $("#editExpenseSave").attr("disabled", !0);
              var t = jQuery(this).find("#editExpenseSave");
              t.button("loading");
              var a = $("#editExpenseId").val(),
                n = $("#indexExpenseUrl").val() + "/" + a + "/update",
                i = { formSelector: $(this), url: n, type: "POST" };
              window.Livewire.emit("refresh"),
                editRecord(i, t, "#edit_expenses_modal");
            }),
            listenClick("#ExpenseResetFilter", function () {
              $("#ExpenseHead").val(0).trigger("change"),
                hideDropdownManually($("#ExpenseFilterBtn"), $(".dropdown-menu"));
            }),
            listenHiddenBsModal("#add_expenses_modal", function () {
              resetModalForm("#addExpenseForm", "#expenseErrorsBox"),
                $("#expenseSave").attr("disabled", !1),
                $("#expenseId").val("").trigger("change.select2"),
                $("#expensePreviewImage").css(
                  "background-image",
                  "url(" + $("#indexExpenseDefaultDocumentImageUrl").val() + ")"
                );
            }),
            listenChange("#expenseAttachment", function () {
              var t = e($(this), "#expenseErrorsBox");
              isEmpty(t) || 0 == t
                ? ($(this).val(""),
                  displayErrorMessage(
                    "The image must be a file of type: jpg, jpeg, png."
                  ))
                : ($("#editIncomeErrorsBox").html("").hide(),
                  displayDocument(this, "#expensePreviewImage", t));
            }),
            listenChange("#editExpenseAttachment", function () {
              var t = e($(this), "#editExpenseErrorsBox");
              isEmpty(t) || 0 == t
                ? ($(this).val(""),
                  displayErrorMessage(
                    "The image must be a file of type: jpg, jpeg, png."
                  ))
                : ($("#editIncomeErrorsBox").html("").hide(),
                  displayDocument(this, "#editExpensePreviewImage", t));
            }),
            listenHiddenBsModal("#edit_expenses_modal", function () {
              $("#editExpenseSave").attr("disabled", !1),
                resetModalForm("#editExpensesForm", "#editExpenseErrorsBox");
            }),
            listenClick(".removeExpenseImage", function () {
              defaultImagePreview("#expensePreviewImage");
            }),
            listenClick(".removeExpenseImageEdit", function () {
              defaultImagePreview("#editExpensePreviewImage");
            }),
            listenChange("#ExpenseHead", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            });
        },
        5137: () => {
          function e(e, t) {
            var a = $(e).val().split(".").pop().toLowerCase();
            return -1 == $.inArray(a, ["jpg", "png", "jpeg"])
              ? ($(e).val(""),
                $(t).removeClass("d-none"),
                $(t)
                  .html("The image must be a file of type: jpg, jpeg, png.")
                  .show(),
                !1)
              : ($(t).hide(), !0);
          }
          document.addEventListener("turbo:load", function () {
            if (!$("#termConditionPrivacyPolicy").length) return;
            if (
              void 0 !== $("#termConditionPrivacyPolicy").val() &&
              1 == $("#termConditionPrivacyPolicy").val()
            ) {
              var e = new Quill("#termConditionId", {
                modules: {
                  toolbar: [
                    [{ header: [1, 2, !1] }],
                    ["bold", "italic", "underline"],
                    ["image", "code-block"]
                  ]
                },
                placeholder: "Terms & Conditions",
                theme: "snow"
              });
              e.on("text-change", function (t, a, n) {
                0 === e.getText().trim().length &&
                  e.setContents([{ insert: "" }]);
              });
              var t = new Quill("#privacyPolicyId", {
                modules: {
                  toolbar: [
                    [{ header: [1, 2, !1] }],
                    ["bold", "italic", "underline"],
                    ["image", "code-block"]
                  ]
                },
                placeholder: "Privacy Policy",
                theme: "snow"
              });
              t.on("text-change", function (e, a, n) {
                0 === t.getText().trim().length &&
                  t.setContents([{ insert: "" }]);
              });
              var a = document.createElement("textarea");
              (a.innerHTML = $(".termConditionData").val()),
                (e.root.innerHTML = a.value),
                (a.innerHTML = $(".privacyPolicyData").val()),
                (t.root.innerHTML = a.value),
                listenSubmit("#termsAndCondition", function () {
                  var a = document.createElement("textarea"),
                    n = e.root.innerHTML;
                  a.innerHTML = n;
                  var i = t.root.innerHTML;
                  return 0 === e.getText().trim().length
                    ? (displayErrorMessage("The Terms & Conditions is required."),
                      !1)
                    : 0 === t.getText().trim().length
                    ? (displayErrorMessage("The Privacy Policy is required."), !1)
                    : ($("#termData").val(n.toString()),
                      void $("#privacyData").val(i.toString()));
                });
            }
          }),
            listenChange(".homePageImage", function () {
              var t = e($(this), "#homeErrorsBox");
              isEmpty(t) ||
                0 == t ||
                ($("#homeErrorsBox").html("").hide(),
                displayDocument(this, "#homePreviewImage", t));
            }),
            listenChange(".homeDoctorImage", function () {
              var t = e($(this), "#homeErrorsBox");
              isEmpty(t) ||
                0 == t ||
                ($("#homeErrorsBox").html("").hide(),
                displayDocument(this, "#homeDoctorPreviewImage", t));
            }),
            listenSubmit("#addCMSForm", function () {
              var e = $("#homeTitleId").val(),
                t = $("#homePageExperience").val(),
                a = $("#homeShortDescription").val(),
                n = $("#homePageBoxTitle").val(),
                i = $("#homePageBoxDes").val(),
                r = $("#homeDoctorTextId").val(),
                s = $("#homeDoctorTitleId").val(),
                o = $("#homeDoctorDescription").val(),
                d = $("#homePageCerBoxTl").val(),
                l = $("#homePageCerBoxDes").val(),
                c = $("#homePageStep1Tl").val(),
                u = $("#homePageStep1Des").val(),
                m = $("#homePageStep2Tl").val(),
                _ = $("#homePageStep2Des").val(),
                h = $("#homePageStep3Tl").val(),
                p = $("#homePageStep3Des").val(),
                g = $("#homePageStep4Tl").val(),
                f = $("#homePageStep4Des").val();
              return isEmpty($.trim(t))
                ? (displayErrorMessage(
                    "Home page experience field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(e))
                ? (displayErrorMessage(
                    "Home page title field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(a))
                ? (displayErrorMessage(
                    "Home page description field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(n))
                ? (displayErrorMessage(
                    "Home page box title field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(i))
                ? (displayErrorMessage(
                    "Home page box descriptions field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(r))
                ? (displayErrorMessage(
                    "Home page certified doctor text field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(s))
                ? (displayErrorMessage(
                    "home page certified doctor Title field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(o))
                ? (displayErrorMessage(
                    "Home page certified doctor description field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(d))
                ? (displayErrorMessage(
                    "Home page certified box title field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(l))
                ? (displayErrorMessage(
                    "Home page certified certified description field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(c))
                ? (displayErrorMessage(
                    "Home page step 1 title field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(u))
                ? (displayErrorMessage(
                    "Home page step 1  description field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(m))
                ? (displayErrorMessage(
                    "Home page step 2 title field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(_))
                ? (displayErrorMessage(
                    "Home page step 2 description field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(h))
                ? (displayErrorMessage(
                    "Home page step 3 title field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(p))
                ? (displayErrorMessage(
                    "Home page step 3 description field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(g)) || isEmpty($.trim(g))
                ? (displayErrorMessage(
                    "Home page step 4 title field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(f))
                ? (displayErrorMessage(
                    "Home page step 4 description field is not contain only white space"
                  ),
                  !1)
                : void 0;
            }),
            listenSubmit("#createAboutUs", function () {
              var e = $("#aboutUsTitle").val(),
                t = $("#aboutUsDes").val(),
                a = $("#aboutUsMission").val();
              return isEmpty($.trim(e))
                ? (displayErrorMessage(
                    "About us title field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(t))
                ? (displayErrorMessage(
                    "About us description field is not contain only white space"
                  ),
                  !1)
                : isEmpty($.trim(a))
                ? (displayErrorMessage(
                    "About us mission field is not contain only white space"
                  ),
                  !1)
                : void 0;
            });
        },
        9: () => {
          listenSubmit("#addFrontServiceForm", function (e) {
            e.preventDefault();
            var t = jQuery(this).find("#frontServiceSave");
            $("#frontServiceSave").attr("disabled", !0), t.button("loading");
            var a = new FormData($(this)[0]);
            $.ajax({
              url: $("#indexFrontServicesUrl").val(),
              type: "POST",
              dataType: "json",
              data: a,
              processData: !1,
              contentType: !1,
              success: function (e) {
                e.success &&
                  (displaySuccessMessage(e.message),
                  $("#add_front_service_modal").modal("hide"),
                  $("#frontServiceSave").attr("disabled", !1),
                  livewire.emit("refresh"));
              },
              error: function (e) {
                $("#frontServiceSave").attr("disabled", !1),
                  printErrorMessage("#frontServiceErrorsBox", e);
              },
              complete: function () {
                t.button("reset");
              }
            });
          }),
            listen("click", ".editFrontServiceBtn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#indexFrontServicesUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      e.success &&
                        ($("#frontServiceId").val(e.data.id),
                        e.data.icon_url
                          ? $("#editFrontServicePreviewImage").css(
                              "background-image",
                              'url("' + e.data.icon_url + '")'
                            )
                          : $("#editFrontServicePreviewImage").css(
                              "background-image",
                              'url("' +
                                $("#indexServiceDefaultDocumentImageUrl").val() +
                                '")'
                            ),
                        $("#editFrontServiceName").val(e.data.name),
                        $("#editFrontServiceDescription").val(
                          e.data.short_description
                        ),
                        isEmpty(e.data.icon_url)
                          ? ($("#frontServiceIconUrl").hide(),
                            $(".btn-view").hide())
                          : ($("#frontServiceIconUrl").show(),
                            $(".btn-view").show(),
                            $("#frontServiceIconUrl").attr(
                              "href",
                              e.data.icon_url
                            )),
                        $("#edit_front_service_modal").modal("show"),
                        ajaxCallCompleted());
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#editFrontServiceForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editFrontServiceSave");
              $("#editFrontServiceSave").attr("disabled", !0),
                t.button("loading");
              var a = $("#frontServiceId").val(),
                n = new FormData($(this)[0]);
              $.ajax({
                url: $("#indexFrontServicesUrl").val() + "/" + a,
                type: "post",
                data: n,
                processData: !1,
                contentType: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#editFrontServiceSave").attr("disabled", !1),
                    $("#edit_front_service_modal").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  $("#editFrontServiceSave").attr("disabled", !1),
                    manageAjaxErrors(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_front_service_modal", function () {
              resetModalForm(
                "#addFrontServiceForm",
                "#add_front_service_modal #frontServiceErrorsBox"
              ),
                $("#frontServiceSave").attr("disabled", !1),
                $("#frontServicePreviewImage")
                  .attr("src", $("#indexServiceDefaultDocumentImageUrl").val())
                  .css(
                    "background-image",
                    "url(".concat(
                      $("#indexServiceDefaultDocumentImageUrl").val(),
                      ")"
                    )
                  );
            }),
            listenShownBsModal("#add_front_service_modal", function () {
              $("#add_front_service_modal #frontServiceErrorsBox").show(),
                $("#add_front_service_modal #frontServiceErrorsBox").addClass(
                  "d-none"
                );
            }),
            listenHiddenBsModal("#edit_front_service_modal", function () {
              resetModalForm(
                "#editFrontServiceForm",
                "#edit_front_service_modal #editFrontServiceErrorsBox"
              ),
                $("#editFrontServiceSave").attr("disabled", !1),
                $("#editFrontServicePreviewImage")
                  .attr("src", $("#indexServiceDefaultDocumentImageUrl").val())
                  .css(
                    "background-image",
                    "url(".concat(
                      $("#indexServiceDefaultDocumentImageUrl").val(),
                      ")"
                    )
                  );
            }),
            listenShownBsModal("#edit_front_service_modal", function () {
              $("#edit_front_service_modal #editFrontServiceErrorsBox").show(),
                $(
                  "#edit_front_service_modal #editFrontServiceErrorsBox"
                ).addClass("d-none");
            }),
            listen("click", ".deleteFrontServiceBtn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#indexFrontServicesUrl").val() + "/" + t,
                "",
                $("#frontService").val()
              );
            });
        },
        8821: () => {
          listenChange("#aboutUsImage", function () {
            var e = (function (e, t) {
              var a = $(e).val().split(".").pop().toLowerCase();
              if (-1 == $.inArray(a, ["jpg", "png", "jpeg"]))
                return (
                  $(e).val(""),
                  $(t).removeClass("d-none"),
                  $(t).html(Lang.get("messages.allow_file_type")).show(),
                  !1
                );
              return $(t).hide(), !0;
            })($(this), "#aboutUsErrorsBox");
            isEmpty(e) ||
              0 == e ||
              ($("#aboutUsErrorsBox").html("").hide(),
              displayDocument(this, "#aboutUsPreviewImage", e));
          });
        },
        3958: () => {
          function e(e) {
            $.ajax({
              url: $(this).attr("action"),
              type: "POST",
              data: e,
              processData: !1,
              contentType: !1,
              success: function (e) {
                e.success &&
                  (displaySuccessMessage(e.message),
                  setTimeout(function () {
                    location.reload();
                  }, 1500));
              },
              error: function (e) {
                displayErrorMessage(e.message);
              },
              complete: function () {}
            });
          }
          document.addEventListener("turbo:load", function () {
            if (!$("saveHospitalScheduleForm").length) return;
            listenChange('select[name^="startTimes"]', function (e) {
              var t = $(this)[0].selectedIndex,
                a = $(this)
                  .closest(".weekly-row")
                  .find('select[name^="endTimes"] option');
              a
                .eq(t + 1)
                .prop("selected", !0)
                .trigger("change"),
                a.each(function (e) {
                  e <= t
                    ? $(this).attr("disabled", !0)
                    : $(this).attr("disabled", !1);
                });
            });
          }),
            listenSubmit("#saveHospitalScheduleForm", function (t) {
              t.preventDefault();
              var a = new FormData($(this)[0]);
              $.ajax({
                url: $("#saveHospitalScheduleUrl").val(),
                type: "POST",
                data: $(this).serialize(),
                cache: !1,
                success: function (t) {
                  e(a);
                },
                error: function (t) {
                  Swal.fire({
                    title: "Delete !",
                    text: t.responseJSON.message,
                    type: "warning",
                    icon: "warning",
                    showCancelButton: !0,
                    closeOnConfirm: !0,
                    confirmButtonColor: "#266CB0",
                    showLoaderOnConfirm: !0,
                    cancelButtonText: "No, Cancel",
                    confirmButtonText: "Yes, Update!"
                  }).then(function (t) {
                    t.isConfirmed && e(a);
                  });
                }
              });
            });
        },
        9494: () => {},
        9591: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#addIncomeForm").length && !$("#editIncomesForm").length)
              return;
            listenShownBsModal(
              "#add_incomes_modal, #edit_incomes_modal",
              function () {
                $("#incomeId, #editIncomeHeadId:first").focus(),
                  $("#incomeId").select2({
                    width: "100%",
                    dropdownParent: $("#add_incomes_modal")
                  }),
                  $("#editIncomeHeadId").select2({
                    width: "100%",
                    dropdownParent: $("#edit_incomes_modal")
                  });
              }
            ),
              $("#incomeHead").select2({ width: "100%" }),
              $("#incomeDate").flatpickr({
                format: "YYYY-MM-DD",
                useCurrent: !1,
                sideBySide: !1,
                locale: $(".userCurrentLanguage").val()
              });
            $("#editIncomeDate").flatpickr({
              format: "YYYY-MM-DD",
              useCurrent: !1,
              sideBySide: !1,
              locale: $(".userCurrentLanguage").val()
            });
          }),
            listenSubmit("#addIncomeForm", function (e) {
              e.preventDefault(), $("#incomeSave").attr("disabled", !0);
              var t = jQuery(this).find("#incomeSave");
              t.button("loading"),
                $.ajax({
                  url: $("#indexIncomeCreateUrl").val(),
                  type: "POST",
                  data: new FormData(this),
                  dataType: "JSON",
                  processData: !1,
                  contentType: !1,
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_incomes_modal").modal("hide"),
                      $("#incomeSave").attr("disabled", !1),
                      Livewire.emit("refresh"));
                  },
                  error: function (e) {
                    manageAjaxErrors(e), $("#incomeSave").attr("disabled", !1);
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listenClick(".deleteIncomesBtn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#indexIncomeUrl").val() + "/" + t,
                null,
                $("#Income").val()
              );
            }),
            listenClick("#incomeResetFilter", function () {
              $("#incomeHead").val(0).trigger("change"),
                hideDropdownManually($("#incomeFilterBtn"), $(".dropdown-menu"));
            }),
            listenClick(".editIncomesBtn", function (e) {
              !(function (e) {
                $.ajax({
                  url: $("#indexIncomeUrl").val() + "/" + e + "/edit",
                  type: "GET",
                  success: function (e) {
                    if (e.success) {
                      var t = e.data.document_url.split(".").pop().toLowerCase();
                      "pdf" == t
                        ? $("#editIncomePreviewImage").css(
                            "background-image",
                            'url("' + $(".pdfDocumentImageUrl").val() + '")'
                          )
                        : "docx" == t || "doc" == t
                        ? $("#editIncomePreviewImage").css(
                            "background-image",
                            'url("' + $(".docxDocumentImageUrl").val() + '")'
                          )
                        : "" == t
                        ? $("#editIncomePreviewImage").css(
                            "background-image",
                            'url("' +
                              $("#indexIncomeDefaultDocumentImageUrl").val() +
                              '")'
                          )
                        : $("#editIncomePreviewImage").css(
                            "background-image",
                            'url("' + e.data.document_url + '")'
                          ),
                        $("#editIncomeId").val(e.data.id),
                        $("#editIncomeHeadId")
                          .val(e.data.income_head)
                          .trigger("change.select2"),
                        $("#editIncomeName").val(e.data.name),
                        document
                          .querySelector("#editIncomeDate")
                          ._flatpickr.setDate(moment(e.data.date).format()),
                        $("#editIncomeInvoiceNumber").val(e.data.invoice_number),
                        $("#editIncomeAmount").val(e.data.amount),
                        $(".price-input").trigger("input"),
                        $("#editIncomeDescription").val(e.data.description),
                        isEmpty(e.data.document_url)
                          ? ($("#editIncomeDocumentUrl").hide(),
                            $(".btn-view").hide())
                          : ($("#editIncomeDocumentUrl").show(),
                            $(".btn-view").show(),
                            $("#editIncomeDocumentUrl").attr(
                              "href",
                              e.data.document_url
                            )),
                        $("#edit_incomes_modal").appendTo("body").modal("show");
                    }
                  },
                  error: function (e) {
                    manageAjaxErrors(e);
                  }
                });
              })(e.currentTarget.dataset.id);
            }),
            listenSubmit("#editIncomesForm", function (e) {
              e.preventDefault(), $("#editIncomeSave").attr("disabled", !0);
              var t = jQuery(this).find("#editIncomeSave");
              t.button("loading");
              var a = $("#editIncomeId").val(),
                n = $("#indexIncomeUrl").val() + "/" + a + "/update",
                i = {
                  formSelector: $(this),
                  url: n,
                  type: "POST",
                  tableSelector: null
                };
              Livewire.emit("refresh"),
                editRecord(i, t, "#edit_incomes_modal"),
                $("#avatar_remove").val("");
            }),
            listenHiddenBsModal("#add_incomes_modal", function () {
              resetModalForm("#addIncomeForm", "#incomeErrorsBox"),
                $("#incomeSave").attr("disabled", !1),
                $("#incomeId").val("").trigger("change.select2"),
                $("#incomePreviewImage").css(
                  "background-image",
                  'url("' + $("#indexIncomeDefaultDocumentImageUrl").val() + '")'
                );
            }),
            listenHiddenBsModal("#edit_incomes_modal", function () {
              resetModalForm("#editIncomesForm", "#editIncomeErrorsBox"),
                $("#editIncomeSave").attr("disabled", !1);
            }),
            listenChange("#editIncomeAttachment", function () {
              var e = isValidIncomeDocument($(this), "#editIncomeErrorsBox");
              isEmpty(e) || 0 == e
                ? ($(this).val(""),
                  $("#editIncomeErrorsBox").removeClass("d-none hide"),
                  $("#editIncomeErrorsBox")
                    .text("The image must be a file of type: jpg, jpeg, png.")
                    .show(),
                  $("[id=customValidationErrorsBox]").focus(),
                  $("html, body").animate({ scrollTop: "0" }, 500),
                  $(".alert").delay(5e3).slideUp(300))
                : ($("#editIncomeErrorsBox").html("").hide(),
                  displayDocument(this, "#editIncomePreviewImage", e));
            }),
            (window.isValidIncomeDocument = function (e, t) {
              var a = $(e).val().split(".").pop().toLowerCase();
              return -1 ==
                $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"])
                ? ($(e).val(""),
                  $(t).html($("#indexIncomeDocumentError").val()).show(),
                  !1)
                : a;
            }),
            listenClick(".removeIncomesImage", function () {
              defaultImagePreview("#incomePreviewImage");
            }),
            listenClick(".removeIncomesImageEdit", function () {
              defaultImagePreview("#editIncomePreviewImage");
            }),
            listenChange("#incomeHead", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            });
        },
        3764: () => {
          document.addEventListener("turbo:load", function () {
            $(".price-input").trigger("input"),
              $(".insuranceDiscount").val() < 0 && $(".discount").val(0);
            $(".addInsuranceItem").val() < 0 && $(".discount").val(0);
            $("#insuranceDiscountId").blur(function () {
              0 == $("#insuranceDiscountId").val().length &&
                $("#insuranceDiscountId").val(0);
            }),
              $(".insuranceForm").find("input:text:visible:first").focus(),
              (window.isInsuranceNumberKey = function (e, t) {
                var a = e.which ? e.which : event.keyCode;
                return !(
                  (46 !== a || -1 !== $(t).val().indexOf(".")) &&
                  (a < 48 || a > 57)
                );
              }),
              listenKeyup(".disease-charge", function () {
                calculateAndSetInsuranceAmount();
              }),
              listenChange(
                ".service-tax, .discount, .hospital-rate, .disease-charge",
                function () {
                  calculateAndSetInsuranceAmount();
                }
              ),
              (window.calculateAndSetInsuranceAmount = function () {
                var e = 0,
                  t = parseInt(
                    "" !== $(".service-tax").val()
                      ? removeCommas($(".service-tax").val())
                      : 0
                  ),
                  a = parseInt(
                    "" !== $(".hospital-rate").val()
                      ? removeCommas($(".hospital-rate").val())
                      : 0
                  ),
                  n = parseFloat($(".discount").val());
                (e = t + a),
                  $(".disease-item-container>tr").each(function () {
                    var t = parseInt(
                      "" != $(this).find(".disease-charge").val()
                        ? removeCommas($(this).find(".disease-charge").val())
                        : 0
                    );
                    e += t;
                  }),
                  (e -= (e * n) / 100),
                  $("#insuranceTotal").text(
                    $(".currentCurrency").val() + addCommas(e.toFixed(2))
                  ),
                  $("#insuranceTotal_amount").val(e);
              });
          }),
            listenSubmit("#insuranceForm", function (e) {
              e.preventDefault(),
                $("#insuranceSaveBtn").attr("disabled", !0),
                jQuery(this).find("#insuranceSaveBtn").button("loading");
              var t = new FormData($(this)[0]);
              $.ajax({
                url: $(".insuranceSaveUrl").val(),
                type: "POST",
                dataType: "json",
                data: t,
                processData: !1,
                contentType: !1,
                success: function (e) {
                  displaySuccessMessage(e.message),
                    (window.location.href = $(".insuranceUrl").val()),
                    $("#insuranceSaveBtn").attr("disabled", !1);
                },
                error: function (e) {
                  printErrorMessage("#insuranceValidationErrorsBox", e),
                    $("#insuranceSaveBtn").attr("disabled", !1);
                }
              });
            });
          var e = $(".insuranceUniqueId").val();
          function t() {
            var e = 1;
            $(".disease-item-container>tr").each(function () {
              $(this).find(".item-number").text(e), e++;
            }),
              e - 1 == 0 &&
                ($("#insuranceTotal").text("0"),
                $("#insuranceBillTbl tbody").append(
                  '<tr><td class="text-center item-number">1</td><td><input class="form-control disease-name" required name="disease_name[]" type="text"></td><td><input class="form-control disease-charge price-input" required name="disease_charge[]" type="text"></td><td class="text-center"><a href="javascript:void(0)" title="{{__(\'messages.common.delete\')}}"  class="delete-disease btn px-1 text-danger fs-3 pe-0">\n                    <i class="fa-solid fa-trash"></i>\n                            </a></td></tr>'
                ));
          }
          listenClick("#addInsuranceItem", function () {
            var a = prepareTemplateRender("#insuranceDiseaseTemplate", {
              uniqueId: e
            });
            $(".disease-item-container").append(a), e++, t();
          }),
            listenClick(".delete-disease", function () {
              $(this).parents("tr").remove(),
                t(),
                calculateAndSetInsuranceAmount();
            });
        },
        3074: () => {
          listenClick(".deleteInsuranceBtn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#indexInsuranceUrl").val() + "/" + t,
              "",
              $("#Insurance").val()
            );
          }),
            listenChange(".insuranceStatus", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              updateInsuranceStatus(t);
            }),
            listenClick("#insuranceResetFilter", function () {
              $("#filter_status").val(2).trigger("change");
            }),
            (window.updateInsuranceStatus = function (e) {
              $.ajax({
                url: $("#indexInsuranceUrl").val() + "/" + e + "/active-deactive",
                method: "post",
                cache: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message), livewire.emit("refresh"));
                }
              });
            }),
            listenChange("#insurance_filter_status", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            }),
            listenClick("#insuranceResetFilter", function () {
              $("#insurance_filter_status").val(0).trigger("change"),
                hideDropdownManually(
                  $("#insuranceFilterBtn"),
                  $(".dropdown-menu")
                );
            });
        },
        8542: () => {
          document.addEventListener("turbo:load", function () {
            if (
              !$("#createInvestigationForm").length &&
              !$("#editInvestigationForm").length
            )
              return;
            $("#investigationDate,#editInvestigationDate").flatpickr({
              format: "YYYY-MM-DD HH:mm:ss",
              useCurrent: !0,
              sideBySide: !0,
              enableTime: !0,
              locale: $(".userCurrentLanguage").val()
            }),
              $(
                "#investigationPatientId,#investigationDoctorId,#investigationStatus"
              ).select2({ width: "100%" }),
              $("#createInvestigationForm, #editInvestigationForm")
                .find("input:text:visible:first")
                .focus();
          }),
            listenClick(".removeInvestigationImage", function () {
              defaultImagePreview("#investigationPreviewImage");
            });
        },
        5228: () => {
          listenClick("#investigationResetFilter", function () {
            $("#investigationHead").val(0).trigger("change"),
              hideDropdownManually(
                $("#investigationFilterBtn"),
                $(".dropdown-menu")
              );
          }),
            listenClick(".deleteInvestigationBtn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#indexInvestigationReportUrl").val() + "/" + t,
                "",
                $("#investigationReport").val()
              );
            }),
            listenChange("#investigationHead", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            });
        },
        7240: () => {
          document.addEventListener("turbo:load", function () {
            listen("click", "#resetEmployeeInvoiceFilter", function () {
              $("#invoice_status_filter").val(2).trigger("change"),
                hideDropdownManually($("#invoiceFilterBtn"), $(".dropdown-menu"));
            });
          }),
            listen("click", ".deleteInvoicesBtn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#indexInvoiceUrl").val() + "/" + t,
                "",
                $("#Invoices").val()
              );
            }),
            listenChange("#invoice_status_filter", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            });
        },
        4457: () => {
          document.addEventListener("turbo:load", function () {
            if (!$(".invoiceSaveUrl")) return;
            $('input:text:not([readonly="readonly"])').first().blur(),
              $("#invoicePatientId").focus(),
              t(".accountId"),
              $("#invoice_date").flatpickr({
                defaultDate: new Date(),
                dateFormat: "Y-m-d",
                locale: $(".userCurrentLanguage").val()
              }),
              $("#editInvoiceDate").flatpickr({
                dateFormat: "Y-m-d",
                locale: $(".userCurrentLanguage").val()
              }),
              (window.isNumberKey = function (e, t) {
                var a = e.which ? e.which : event.keyCode;
                return !(
                  (46 !== a || -1 !== $(t).val().indexOf(".")) &&
                  (a < 48 || a > 57)
                );
              }),
              listenClick(".deleteInvoiceItem", function () {
                $(this).parents("tr").remove(), e(), n();
              }),
              listenKeyup(".qty", function () {
                var e = parseInt($(this).val()),
                  t = $(this).parent().siblings().find(".price").val();
                t = parseInt(removeCommas(t));
                var i = a(e, t);
                $(this)
                  .parent()
                  .siblings(".amount")
                  .text(addCommas(i.toString())),
                  n();
              }),
              listenKeyup(".price", function () {
                var e = $(this).val();
                e = parseInt(removeCommas(e));
                var t = parseInt($(this).parent().siblings().find(".qty").val()),
                  i = a(t, e);
                $(this)
                  .parent()
                  .siblings(".amount")
                  .text(addCommas(i.toString())),
                  n();
              });
            var a = function (e, t) {
                return e > 0 && t > 0 ? e * t : 0;
              },
              n = function () {
                var e = 0;
                $(".invoice-item-container>tr").each(function () {
                  var t = $(this).find(".item-total").text();
                  (t = removeCommas(t)),
                    (t = isEmpty($.trim(t)) ? 0 : parseInt(t)),
                    (e += t);
                }),
                  (e = parseFloat(e)),
                  $("#total").text(addCommas(e.toFixed(2))),
                  $("#total_amount").val(e),
                  i();
              },
              i = function () {
                var e = $("#discount").val(),
                  t = removeCommas($("#total").text());
                (isEmpty(e) || isEmpty(t)) && (e = 0);
                var a = (t * e) / 100,
                  n = t - a;
                $("#finalAmount").text(addCommas(n.toFixed(2))),
                  $("#total_amount").val(n.toFixed(2)),
                  $("#discountAmount").text(addCommas(a.toFixed(2)));
              };
            listenKeyup("#discount", function (e) {
              i();
            });
          }),
            listenSubmit(".invoiceForm", function (e) {
              e.preventDefault();
              var t = new FormData($(this)[0]);
              $.ajax({
                url: $(".invoiceSaveUrl").val(),
                type: "POST",
                dataType: "json",
                data: t,
                processData: !1,
                contentType: !1,
                success: function (e) {
                  displaySuccessMessage(e.message),
                    (window.location.href =
                      $(".invoiceUrl").val() + "/" + e.data.id);
                },
                error: function (e) {
                  printErrorMessage("#validationErrorsBox", e);
                }
              });
            }),
            listenClick("#addInvoiceItem", function () {
              var a = $(".uniqueId").val(),
                n = {
                  accounts: JSON.parse($(".invoiceAccounts").val()),
                  uniqueId: a
                },
                i = prepareTemplateRender("#invoiceItemTemplate", n);
              $(".invoice-item-container").append(i), t(".accountId"), a++, e();
            });
          var e = function () {
            var e = 1;
            if (
              ($(".invoice-item-container>tr").each(function () {
                $(this).find(".item-number").text(e), e++;
              }),
              e - 1 == 0)
            ) {
              var a = $(".uniqueId").val(),
                n = {
                  accounts: JSON.parse($(".invoiceAccounts").val()),
                  uniqueId: a
                },
                i = prepareTemplateRender("#invoiceItemTemplate", n);
              $(".invoice-item-container").append(i), t(".accountId"), a++;
            }
          };
          function t(e) {
            $(e).select2({ placeholder: "Select Account", width: "100%" });
          }
        },
        7492: () => {
          function e(e) {
            var t = e.replace(/\D/g, "");
            return parseInt(t);
          }
          function t() {
            (totalCharges = e($("#totalCharges").text())),
              (totalPayments = e($("#totalPayments").text())),
              (grossTotal = e($("#grossTotal").text())),
              (discountPercent = e($("#discountPercent").val())),
              (taxPercentage = e($("#taxPercentage").val())),
              (otherCharges = e($("#otherCharges").val()));
            totalCharges, totalPayments, otherCharges;
            (totalDiscount = a(discountPercent, totalCharges)),
              (totalTax = a(taxPercentage, totalCharges)),
              (netPayabelAmount = isNaN(
                totalCharges +
                  otherCharges +
                  totalTax -
                  (totalPayments + totalDiscount)
              )
                ? 0
                : totalCharges +
                  otherCharges +
                  totalTax -
                  (totalPayments + totalDiscount)),
              netPayabelAmount > 0
                ? $("#billStatus").html("Unpaid")
                : ((netPayabelAmount = 0), $("#billStatus").html("Paid")),
              $("#netPayabelAmount").text(addCommas(netPayabelAmount));
          }
          function a(e, t) {
            return (e / 100) * t;
          }
          document.addEventListener("turbo:load", function () {
            if (!$("#ipdBillForm").length) return !1;
            1 == $("#showIpdBillStatus").val() &&
              $(" #discountPercent, #taxPercentage,#otherCharges ").prop(
                "disabled",
                !0
              );
            t(),
              $("#grossTotal").text(0),
              $(" #discountPercent, #taxPercentage,#otherCharges ").prop(
                "disabled",
                !0
              );
          }),
            listenKeyup(
              "#discountPercent, #taxPercentage, #otherCharges",
              function () {
                ("discountPercent" != this.id && "taxPercentage" != this.id) ||
                  (parseInt(removeCommas($(this).val())) > 100 &&
                    $(this).val(100)),
                  t();
              }
            ),
            listenSubmit("#ipdBillForm", function (e) {
              e.preventDefault(),
                $(" #discountPercent, #taxPercentage,#otherCharges").prop(
                  "disabled",
                  !1
                ),
                screenLock(),
                $("#saveIpdBillbtn").attr("disabled", !0);
              var a = jQuery(this).find("#saveIpdBillbtn");
              a.button("loading"), t();
              var n = new FormData($(this)[0]);
              n.append("total_charges", totalCharges),
                n.append("total_payments", totalPayments),
                n.append("gross_total", grossTotal),
                n.append("net_payable_amount", netPayabelAmount),
                $.ajax({
                  url: $("#showIpdBillSaveUrl").val(),
                  type: "POST",
                  dataType: "json",
                  data: n,
                  processData: !1,
                  contentType: !1,
                  success: function (e) {
                    displaySuccessMessage(e.message), window.location.reload();
                  },
                  error: function (e) {
                    UnprocessableInputError(e),
                      $("#saveIpdBillbtn").attr("disabled", !1);
                  },
                  complete: function () {
                    screenUnLock(), a.button("reset");
                  }
                });
            });
        },
        7510: () => {
          document.addEventListener("turbo:load", function () {
            if (
              !$("#editIpdChargesForm").length &&
              !$("#addIpdChargeNewForm").length
            )
              return;
            $("#btnIpdChargeSave,#btnEditCharges").prop("disabled", !0),
              $("#ipdChargeDate, #ipdEditChargeDate").flatpickr({
                format: "YYYY-MM-DD",
                useCurrent: !1,
                sideBySide: !0,
                minDate: $("#showIpdPatientCaseDate").val(),
                locale: $(".userCurrentLanguage").val()
              }),
              $("#ipdChargeTypeId, #ipdChargeCategoryId, #ipdChargeId").select2({
                dropdownParent: $("#addIpdChargesModal")
              }),
              $(
                "#editIpdChargeTypeId, #editIpdChargeCategoryId, #editIpdChargeId"
              ).select2({ dropdownParent: $("#editIpdChargesModal") });
          });
          var e = null,
            t = null,
            a = null;
          function n(e) {
            $(e ? "#btnEditCharges" : "#btnIpdChargeSave").prop("disabled", !0);
          }
          listen("click", ".edit-charges-btn", function (n) {
            if (!$(".ajaxCallIsRunning").val()) {
              ajaxCallInProgress();
              var i,
                r = $(n.currentTarget).attr("data-id");
              (i = r),
                $.ajax({
                  url: $("#showIpdChargesUrl").val() + "/" + i + "/edit",
                  type: "GET",
                  success: function (n) {
                    n.success &&
                      ((e = n.data.charge_category_id),
                      (t = n.data.charge_id),
                      n.data.standard_charge,
                      (a = n.data.applied_charge),
                      $("#ipdChargesId").val(n.data.id),
                      document
                        .querySelector("#ipdEditChargeDate")
                        ._flatpickr.setDate(moment(n.data.date).format()),
                      $("#editIpdChargeTypeId")
                        .val(n.data.charge_type_id)
                        .trigger("change", [{ onceOnEditRender: !0 }]),
                      $(".price-input").trigger("input"),
                      $("#appliedChargeId").text(a),
                      $("#editIpdChargesModal").modal("show"),
                      ajaxCallCompleted());
                  },
                  error: function (e) {
                    manageAjaxErrors(e);
                  }
                });
            }
          }),
            listen("click", ".ipd-charge-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#showIpdChargesUrl").val() + "/" + t,
                "",
                $("#ipdCharge").val()
              );
            }),
            listenChange(
              "#ipdChargeTypeId, #editIpdChargeTypeId",
              function (t, a) {
                var i = $(this).data("is-charge-edit");
                "" !== $(this).val() &&
                  $.ajax({
                    url: $("#showIpdChargeCategoryUrl").val(),
                    type: "get",
                    dataType: "json",
                    data: { id: $(this).val() },
                    beforeSend: function () {
                      n(i);
                    },
                    success: function (t) {
                      0 !== t.data.length
                        ? ($(
                            i
                              ? "#editIpdChargeCategoryId"
                              : "#ipdChargeCategoryId"
                          ).empty(),
                          $(
                            i
                              ? "#editIpdChargeCategoryId"
                              : "#ipdChargeCategoryId"
                          ).removeAttr("disabled"),
                          $.each(t.data, function (e, t) {
                            $(
                              i
                                ? "#editIpdChargeCategoryId"
                                : "#ipdChargeCategoryId"
                            ).append(
                              $("<option></option>").attr("value", e).text(t)
                            );
                          }),
                          i
                            ? void 0 === a
                              ? $("#editIpdChargeCategoryId").trigger("change")
                              : $("#editIpdChargeCategoryId")
                                  .val(e)
                                  .trigger("change", a)
                            : $("#ipdChargeCategoryId").trigger("change"),
                          $(i ? "#btnEditCharges" : "#btnIpdChargeSave").prop(
                            "disabled",
                            !1
                          ))
                        : ($(
                            i
                              ? "#editIpdChargeCategoryId, #editIpdChargeId"
                              : "#ipdChargeCategoryId, #ipdChargeId"
                          ).empty(),
                          $(
                            i
                              ? "#editIpdStandardCharge, #editIpdAppliedCharge"
                              : "#ipdStandardCharge, #ipdAppliedCharge"
                          ).val(""),
                          $(
                            i
                              ? "#editIpdChargeCategoryId, #editIpdChargeId, #btnEditCharges"
                              : "#ipdChargeCategoryId, #ipdChargeId, #btnIpdChargeSave"
                          ).prop("disabled", !0));
                    }
                  }),
                  $(
                    i
                      ? "#editIpdChargeCategoryId, #editIpdChargeId"
                      : "#ipdChargeCategoryId, #ipdChargeId"
                  ).empty(),
                  $(
                    i
                      ? "#editIpdStandardCharge, #editIpdAppliedCharge"
                      : "#ipdStandardCharge, #ipdAppliedCharge"
                  ).val(""),
                  $(
                    i
                      ? "#editIpdChargeCategoryId, #editIpdChargeId"
                      : "#ipdChargeCategoryId, #ipdChargeId"
                  ).prop("disabled", !0),
                  $("#ipdChargeCategoryId ,#ipdChargeId").select2({
                    width: "100%",
                    placeholder: "Choose Case",
                    dropdownParent: $("#addIpdChargesModal")
                  }),
                  $("#editIpdChargeCategoryId, #editIpdChargeId").select2({
                    width: "100%",
                    placeholder: "Choose Case",
                    dropdownParent: $("#editIpdChargesModal")
                  });
              }
            ),
            listenHiddenBsModal(
              "#addIpdChargesModal,#editIpdChargesModal",
              function () {
                $(
                  "#ipdChargeCategoryId ,#ipdChargeId,#editIpdChargeCategoryId, #editIpdChargeId"
                ).attr("disabled", !0);
              }
            ),
            listenChange(
              "#ipdChargeCategoryId, #editIpdChargeCategoryId",
              function (e, a) {
                var i = $(this).data("is-charge-edit");
                "" !== $(this).val() &&
                  $.ajax({
                    url: $("#showIpdChargeUrl").val(),
                    type: "get",
                    dataType: "json",
                    data: { id: $(this).val() },
                    beforeSend: function () {
                      n(i);
                    },
                    success: function (e) {
                      0 !== e.data.length
                        ? ($(i ? "#editIpdChargeId" : "#ipdChargeId").empty(),
                          $(i ? "#editIpdChargeId" : "#ipdChargeId").removeAttr(
                            "disabled"
                          ),
                          $.each(e.data, function (e, t) {
                            $(i ? "#editIpdChargeId" : "#ipdChargeId").append(
                              $("<option></option>").attr("value", e).text(t)
                            );
                          }),
                          i
                            ? void 0 === a
                              ? $("#editIpdChargeId").trigger("change")
                              : $("#editIpdChargeId").val(t).trigger("change", a)
                            : $("#ipdChargeId").trigger("change"))
                        : $(i ? "#editIpdChargeId" : "#ipdChargeId").prop(
                            "disabled",
                            !0
                          );
                    }
                  }),
                  $(i ? "#editIpdChargeId" : "#ipdChargeId").empty(),
                  $(i ? "#editIpdChargeId" : "#ipdChargeId").prop("disabled", !0);
              }
            ),
            listenChange("#ipdChargeId, #editIpdChargeId", function (e, t) {
              var a = $(this).data("is-charge-edit");
              $.ajax({
                url: $("#showIpdChargeStandardRateUrl").val(),
                type: "get",
                dataType: "json",
                data: {
                  id: $(this).val(),
                  isEdit: a,
                  onceOnEditRender: t,
                  ipdChargeId: $("#ipdChargesId").val()
                },
                beforeSend: function () {
                  n(a);
                },
                success: function (e) {
                  a
                    ? null != e.data
                      ? ($("#editIpdStandardCharge").val(e.data.standard_charge),
                        $("#appliedChargeId").text(e.data.applied_charge),
                        $("#editIpdAppliedCharge").val(e.data.applied_charge),
                        $(".price-input").trigger("input"),
                        $("#btnEditCharges").prop("disabled", !1))
                      : console.log("from else")
                    : ($("#ipdStandardCharge, #ipdAppliedCharge").val(e.data),
                      $("#btnIpdChargeSave").prop("disabled", !1));
                }
              });
            }),
            listen("keypress", "#editIpdAppliedCharge", function () {
              var e = $("#editIpdAppliedCharge").val();
              $("#appliedChargeId").text(e);
            }),
            listenSubmit("#addIpdChargeNewForm", function (e) {
              e.preventDefault(), $("#btnIpdChargeSave").attr("disabled", !0);
              var t = new FormData($(this)[0]);
              $.ajax({
                url: $("#showIpdChargesCreateUrl").val(),
                type: "POST",
                dataType: "json",
                data: t,
                processData: !1,
                contentType: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#addIpdChargesModal").modal("hide"),
                    livewire.emit("refresh"),
                    $("#btnIpdChargeSave").attr("disabled", !1));
                },
                error: function (e) {
                  printErrorMessage("#ipdChargevalidationErrorsBox", e),
                    $("#btnIpdChargeSave").attr("disabled", !1);
                }
              });
            }),
            listenSubmit("#editIpdChargesForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#btnEditCharges");
              t.button("loading");
              var a = $("#ipdChargesId").val(),
                n = $("#showIpdChargesUrl").val() + "/" + a,
                i = { formSelector: $(this), url: n, type: "POST" };
              editRecord(i, t, "#editIpdChargesModal", "#btnEditCharges");
            }),
            listenHiddenBsModal("#addIpdChargesModal", function () {
              $("#addIpdChargeNewForm")[0].reset(),
                $(
                  "#ipdChargeTypeId, #ipdChargeCategoryId, #ipdChargeId, #ipdStandardCharge, #ipdAppliedCharge"
                ).val(""),
                $("#ipdChargeCategoryId, #ipdChargeId").empty(),
                $("#ipdChargeCategoryId").append(
                  $("<option>Select Charge Category</option>")
                ),
                $("#ipdChargeId").append($("<option>Select Code</option>")),
                $("#ipdChargeTypeId").trigger("change.select2"),
                $("#btnIpdChargeSave").prop("disabled", !0),
                $("#ipdChargeDate").flatpickr().clear();
            }),
            listenHiddenBsModal("#editIpdChargesModal", function () {
              $("#btnEditCharges").prop("disabled", !0);
            });
        },
        3985: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#showIpdConsultantRegisterUrl").length) return;
            $(".doctorId").select2({
              width: "100%",
              dropdownParent: $("#addConsultantInstructionModal")
            }),
              $("#editConsultantDoctorId").select2({
                width: "100%",
                dropdownParent: $("#editIpdConsultantInstructionModal")
              }),
              t();
          });
          var e = function (e) {
            $(e).attr("readonly", !1);
          };
          e(".appliedDate"), e(".instructionDate");
          var t = function () {
              $(".appliedDate").flatpickr({
                enableTime: !0,
                dateFormat: "Y-m-d H:i",
                useCurrent: !1,
                sideBySide: !0,
                allowInput: !1,
                widgetPositioning: { horizontal: "left", vertical: "bottom" },
                minDate: $("#showIpdPatientCaseDate").val(),
                locale: $(".userCurrentLanguage").val()
              }),
                $(".instructionDate").flatpickr({
                  enableTime: !1,
                  format: "YYYY-MM-DD",
                  useCurrent: !0,
                  sideBySide: !0,
                  widgetPositioning: { horizontal: "left", vertical: "bottom" },
                  minDate: $("#showIpdPatientCaseDate").val()
                });
            },
            a = function (e) {
              $(e).select2({
                placeholder: "Select Doctor",
                width: "100%",
                dropdownParent: $("#addConsultantInstructionModal")
              });
            };
          listen("click", "#addIpdConsultantItem", function () {
            var e = $("#showIpdUniqueId").val(),
              i = {
                doctors: JSON.parse($("#showIpdDoctors").val()),
                uniqueId: e
              },
              r = prepareTemplateRender(
                "#ipdConsultantInstructionItemTemplate",
                i
              );
            $(".ipd-consultant-item-container").append(r),
              a(".doctorId"),
              t(),
              e++,
              n();
          });
          var n = function () {
            var e = 1,
              n = $("#showIpdUniqueId").val();
            if (
              ($(".ipd-consultant-item-container>tr").each(function () {
                $(this).find(".item-number").text(e), e++;
              }),
              e - 1 == 0)
            ) {
              var i = {
                  doctors: JSON.parse($("#showIpdDoctors").val()),
                  uniqueId: n
                },
                r = prepareTemplateRender(
                  "#ipdConsultantInstructionItemTemplate",
                  i
                );
              $(".ipd-consultant-item-container").append(r),
                a(".doctorId"),
                t(),
                n++;
            }
          };
          listen("click", ".deleteIpdConsultantInstruction", function () {
            $(this).parents("tr").remove(), n();
          }),
            listen("click", ".delete-consultant-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#showIpdConsultantRegisterUrl").val() + "/" + t,
                "",
                $("#ipdConsultantRegister").val()
              );
            }),
            listenSubmit("#addIpdConsultantNewForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#btnIpdConsultantSave");
              t.button("loading");
              var a = {
                formSelector: $(this),
                url: $("#showIpdConsultantRegisterCreateUrl").val(),
                type: "POST"
              };
              newRecord(a, t, "#addConsultantInstructionModal"),
                t.attr("disabled", !1);
            }),
            listen("click", ".edit-consultant-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url:
                      $("#showIpdConsultantRegisterUrl").val() +
                      "/" +
                      t +
                      "/edit",
                    type: "GET",
                    success: function (e) {
                      e.success &&
                        ($("#ipdEditConsultantId").val(e.data.id),
                        document
                          .querySelector("#editConsultantAppliedDate")
                          ._flatpickr.setDate(
                            moment(e.data.applied_date).format()
                          ),
                        $("#editConsultantDoctorId")
                          .val(e.data.doctor_id)
                          .trigger("change.select2"),
                        $("#editConsultantDoctorId").select2({
                          width: "100%",
                          dropdownParent: $("#editIpdConsultantInstructionModal")
                        }),
                        document
                          .querySelector("#editConsultantInstructionDate")
                          ._flatpickr.setDate(
                            moment(e.data.instruction_date).format()
                          ),
                        $("#editConsultantInstruction").val(e.data.instruction),
                        $("#editIpdConsultantInstructionModal").modal("show"),
                        ajaxCallCompleted());
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#editIpdConsultantNewForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editConsultantSave");
              t.button("loading");
              var a = $("#ipdEditConsultantId").val(),
                n = $("#showIpdConsultantRegisterUrl").val() + "/" + a,
                i = { formSelector: $(this), url: n, type: "POST" };
              editRecord(i, t, "#editIpdConsultantInstructionModal");
            }),
            listenHiddenBsModal("#addConsultantInstructionModal", function () {
              resetModalForm(
                "#addIpdConsultantNewForm",
                "#ipdConsultantErrorsBox"
              ),
                $("#ipdConsultantInstructionTbl").find("tr:gt(1)").remove(),
                $(".doctorId").val(""),
                $(".doctorId").trigger("change");
            });
        },
        1611: () => {
          function e(e, t) {
            var a = $(e).val().split(".").pop().toLowerCase();
            return -1 ==
              $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"])
              ? ($(e).val(""),
                $(t)
                  .html(
                    "The document must be a file of type: jpeg, jpg, png, pdf, doc, docx."
                  )
                  .show(),
                !1)
              : a;
          }
          document.addEventListener("turbo:load", function () {
            if (
              !$("#ipdDiagnosisReportDate").length &&
              !$("#editIpdDiagnosisReportDate").length
            )
              return;
            $("#ipdDiagnosisReportDate, #editIpdDiagnosisReportDate").flatpickr({
              enableTime: !0,
              defaultDate: new Date(),
              dateFormat: "Y-m-d H:i",
              minDate: $("#showIpdPatientCaseDate").val(),
              locale: $(".userCurrentLanguage").val(),
              widgetPositioning: { horizontal: "left", vertical: "bottom" }
            });
          }),
            listen("click", ".ipdDignosis-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#showIpdDiagnosisUrl").val() + "/" + t,
                "",
                $("#ipdDiagnosisDelete").val()
              );
            }),
            listenSubmit("#addIpdDiagnosisForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#btnSave");
              t.button("loading");
              var a = {
                formSelector: $(this),
                url: $("#showIpdDiagnosisCreateUrl").val(),
                type: "POST"
              };
              newRecord(a, t, "#add_ipd_diagnosis_modal");
            }),
            listen("click", ".ipdDignosis-edit-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#showIpdDiagnosisUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      if (e.success) {
                        var t = e.data.ipd_diagnosis_document_url
                          .split(".")
                          .pop()
                          .toLowerCase();
                        "pdf" == t
                          ? $("#editIpdDiagnosisPreviewImage").css(
                              "background-image",
                              'url("' + $(".pdfDocumentImageUrl").val() + '")'
                            )
                          : "docx" == t || "doc" == t
                          ? $("#editIpdDiagnosisPreviewImage").css(
                              "background-image",
                              'url("' + $(".docxDocumentImageUrl").val() + '")'
                            )
                          : "" != e.data.ipd_diagnosis_document_url &&
                            $("#editIpdDiagnosisPreviewImage").css(
                              "background-image",
                              'url("' + e.data.ipd_diagnosis_document_url + '")'
                            ),
                          $("#ipdDiagnosisId").val(e.data.id),
                          $("#editIpdDiagnosisReportType").val(
                            e.data.report_type
                          ),
                          document
                            .querySelector("#editIpdDiagnosisReportDate")
                            ._flatpickr.setDate(
                              moment(e.data.report_date).format()
                            ),
                          $("#editIpdDiagnosisDescription").val(
                            e.data.description
                          ),
                          "" != e.data.ipd_diagnosis_document_url
                            ? ($("#editIpdDiagnosisDocumentViewUrl").show(),
                              $(".btn-view").show(),
                              $("#editIpdDiagnosisDocumentViewUrl").attr(
                                "href",
                                e.data.ipd_diagnosis_document_url
                              ))
                            : ($("#editIpdDiagnosisDocumentViewUrl").hide(),
                              $(".btn-view").hide()),
                          $("#edit_ipd_diagnosis_modal").modal("show"),
                          ajaxCallCompleted();
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#editIpdDiagnosisForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editIpdDiagnosisSave");
              t.button("loading");
              var a = $("#ipdDiagnosisId").val(),
                n = $("#showIpdDiagnosisUrl").val() + "/" + a,
                i = { formSelector: $(this), url: n, type: "POST" };
              editRecord(i, t, "#edit_ipd_diagnosis_modal");
            }),
            listenHiddenBsModal("#add_ipd_diagnosis_modal", function () {
              resetModalForm("#addIpdDiagnosisForm", "#ipdDiagnosisErrorsBox"),
                $("#ipdDiagnosisPreviewImage").attr(
                  "src",
                  $("#showDefaultDocumentImageUrl").val()
                ),
                $("#ipdDiagnosisPreviewImage").css(
                  "background-image",
                  'url("' + $("#showDefaultDocumentImageUrl").val() + '")'
                );
            }),
            listenHiddenBsModal("#edit_ipd_diagnosis_modal", function () {
              resetModalForm(
                "#editIpdDiagnosisForm",
                "#editIpdDiagnosisErrorsBox"
              ),
                $("#editIpdDiagnosisPreviewImage").attr(
                  "src",
                  $("#showDefaultDocumentImageUrl").val()
                ),
                $("#editIpdDiagnosisPreviewImage").css(
                  "background-image",
                  'url("' + $("#showDefaultDocumentImageUrl").val() + '")'
                );
            }),
            listenChange("#documentImage", function () {
              var t = e($(this), "#ipdDiagnosisErrorsBox");
              isEmpty(t) ||
                0 == t ||
                ($("#ipdDiagnosisErrorsBox").html("").hide(),
                displayDocument(this, "#ipdDiagnosisPreviewImage", t));
            }),
            listenChange("#editDocumentImage", function () {
              var t = e($(this), "#editIpdDiagnosisErrorsBox");
              isEmpty(t) ||
                0 == t ||
                ($("#editIpdDiagnosisErrorsBox").html("").hide(),
                displayDocument(this, "#editIpdDiagnosisPreviewImage", t));
            }),
            listen("click", ".removeIpdDiagnosisImage", function () {
              defaultImagePreview(".previewImage");
            }),
            listen("click", ".removeIpdDiagnosisImageEdit", function () {
              defaultImagePreview(".previewImage");
            });
        },
        569: () => {
          document.addEventListener("turbo:load", function () {
            if (
              !$("#ipdAdmissionDate").length &&
              !$("#editIpdAdmissionDate").length
            )
              return;
            $(
              "#ipdPatientId, #ipdDoctorId, #ipdBedTypeId,#editIpdPatientId, #editIpdDoctorId, #editIpdBedTypeId"
            ).select2({ width: "100%" }),
              $("#ipdCaseId, #editIpdCaseId ").select2({
                width: "100%",
                placeholder: "Choose Case"
              }),
              $("#ipdBedId, #editIpdBedId").select2({
                width: "100%",
                placeholder: "Choose Bed"
              });
            var e = $("#ipdAdmissionDate, #editIpdAdmissionDate").flatpickr({
              enableTime: !0,
              dateFormat: "Y-m-d H:i",
              locale: $(".userCurrentLanguage").val()
            });
            $(".isEdit").val()
              ? ($(".ipdPatientId, .ipdBedTypeId").trigger("change"),
                e.set("minDate", $(".ipdAdmissionDate").val()))
              : (e.setDate(new Date()), e.set("minDate", new Date()));
          }),
            listenKeyup(".ipdDepartmentFloatNumber", function () {
              if (
                -1 != $(this).val().indexOf(".") &&
                $(this).val().split(".")[1].length > 2
              ) {
                if (isNaN(parseFloat(this.value))) return;
                this.value = parseFloat(this.value).toFixed(2);
              }
              return this;
            }),
            listenSubmit(
              "#createIpdPatientForm, #editIpdPatientDepartmentForm",
              function () {
                $("#ipdSave, #btnIpdPatientEdit").attr("disabled", !0);
              }
            ),
            listenChange(".ipdPatientId", function () {
              "" !== $(this).val() &&
                $.ajax({
                  url: $(".patientCasesUrl").val(),
                  type: "get",
                  dataType: "json",
                  data: { id: $(this).val() },
                  success: function (e) {
                    0 !== e.data.length
                      ? ($(
                          "#ipdDepartmentCaseId,#editIpdDepartmentCaseId"
                        ).empty(),
                        $(
                          "#ipdDepartmentCaseId,#editIpdDepartmentCaseId"
                        ).removeAttr("disabled"),
                        $.each(e.data, function (e, t) {
                          $(
                            "#ipdDepartmentCaseId,#editIpdDepartmentCaseId"
                          ).append(
                            $("<option></option>").attr("value", e).text(t)
                          );
                        }),
                        $("#ipdDepartmentCaseId,#editIpdDepartmentCaseId")
                          .val($("#editIpdPatientCaseId").val())
                          .trigger("change.select2"))
                      : $("#ipdDepartmentCaseId,#editIpdDepartmentCaseId").prop(
                          "disabled",
                          !0
                        );
                  }
                }),
                $("#ipdDepartmentCaseId,#editIpdDepartmentCaseId").empty(),
                $("#ipdDepartmentCaseId,#editIpdDepartmentCaseId").prop(
                  "disabled",
                  !0
                ),
                $("#ipdDepartmentCaseId, #editIpdDepartmentCaseId ").select2({
                  width: "100%",
                  placeholder: "Choose Case"
                });
            }),
            listenChange(".ipdBedTypeId", function () {
              var e = null,
                t = null;
              if (
                (void 0 !== $("#editIpdPatientBedId").val() &&
                  void 0 !== $("#editIpdPatientBedTypeId").val() &&
                  ((e = $("#editIpdPatientBedId").val()),
                  (t = $("#editIpdPatientBedTypeId").val())),
                "" !== $(this).val())
              ) {
                var a = $(this).val();
                $.ajax({
                  url: $(".patientBedsUrl").val(),
                  type: "get",
                  dataType: "json",
                  data: {
                    id: $(this).val(),
                    isEdit: $(".isEdit").val(),
                    bedId: e,
                    ipdPatientBedTypeId: t
                  },
                  success: function (e) {
                    null !== e.data
                      ? 0 !== e.data.length &&
                        ($("#ipdBedId,#editIpdBedId").empty(),
                        $("#ipdBedId,#editIpdBedId").removeAttr("disabled"),
                        $.each(e.data, function (e, t) {
                          $("#ipdBedId,#editIpdBedId").append(
                            $("<option></option>").attr("value", e).text(t)
                          );
                        }),
                        void 0 !== $("#editIpdPatientBedId").val() &&
                          void 0 !== $("#editIpdPatientBedTypeId").val() &&
                          a === $("#editIpdPatientBedTypeId").val() &&
                          $("#ipdBedId,#editIpdBedId")
                            .val($("#editIpdPatientBedId").val())
                            .trigger("change.select2"),
                        $("#ipdBedId,#editIpdBedId").prop("required", !0))
                      : $("#ipdBedId,#editIpdBedId").prop("disabled", !0);
                  }
                });
              }
              $("#ipdBedId,#editIpdBedId").empty(),
                $("#ipdBedId,#editIpdBedId").prop("disabled", !0),
                $("#ipdBedId, #editIpdBedId").select2({
                  width: "100%",
                  placeholder: "Choose Bed"
                });
            });
        },
        9807: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#ipd_patients_filter_status").length) return;
            $("#ipd_patients_filter_status").select2();
          }),
            listenChange("#ipd_patients_filter_status", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            }),
            listenClick("#ipdResetFilter", function () {
              $("#ipd_patients_filter_status").val("0").trigger("change"),
                hideDropdownManually(
                  $("#ipdPatientDepartmentFilterBtn"),
                  $(".dropdown-menu")
                );
            }),
            listen("click", ".deleteIpdDepartmentBtn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#indexIpdPatientUrl").val() + "/" + t,
                "",
                $("#ipdPatientDepartment").val()
              );
            });
        },
        2229: () => {},
        1622: () => {},
        6758: () => {},
        9828: () => {},
        5397: () => {},
        3788: () => {
          listenClick(".viewIpdPrescription", function () {
            $.ajax({
              url: $("#showIpdPrescriptionUrl").val() + "/" + $(this).data("id"),
              type: "get",
              success: function (e) {
                $("#ipdPrescriptionViewData").html(e),
                  $("#showIpdPrescriptionModal").modal("show"),
                  ajaxCallCompleted();
              }
            });
          }),
            listenClick(".printIpdPrescription", function () {
              var e = document.getElementById("DivIdToPrint"),
                t = window.open("", "Print-Window");
              t.document.open(),
                t.document.write(
                  '<html><link href="' +
                    $("#showListBootstrapUrl").val() +
                    '" rel="stylesheet" type="text/css"/><body onload="window.print()">' +
                    e.innerHTML +
                    "</body></html>"
                ),
                t.document.close(),
                setTimeout(function () {
                  t.close();
                }, 10);
            });
        },
        9544: () => {
          document.addEventListener("turbo:load", function () {
            $.ajaxSetup({
              headers: {
                "X-CSRF-TOKEN": $('meta[name="csrf-token"]').attr("content")
              }
            });
          }),
            listenClick("#ipdPaymentBtn", function () {
              var e = this,
                t = {
                  amount: parseInt($("#billAmount").val()),
                  ipdNumber: $("#ipdNumber").val()
                },
                a = $("#stripeConfigKey").val(),
                n = Stripe(a);
              $(this)
                .html(
                  '<div class="spinner-border spinner-border-sm " role="status">\n                                            <span class="sr-only">Loading...</span>\n                                        </div>'
                )
                .addClass("disabled"),
                $.post($("#showListIpdStripePaymentUrl").val(), t)
                  .done(function (e) {
                    var t = e.data.sessionId;
                    n.redirectToCheckout({ sessionId: t }).then(function (e) {
                      $(this).html("Make Payment").removeClass("disabled"),
                        manageAjaxErrors(e);
                    });
                  })
                  .catch(function (t) {
                    $(e).html("Make Payment").removeClass("disabled"),
                      manageAjaxErrors(t);
                  });
            });
        },
        26: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#showListIpdPatientDepartmentId").length) return;
            (e = $("#showListIpdPatientDepartmentId").val()),
              $.ajax({
                url: $("#showListIpdTimelinesUrl").val(),
                type: "get",
                data: { id: e },
                success: function (e) {
                  $("#ipdTimelines").html(e);
                }
              });
            var e;
          });
        },
        1230: () => {
          function loadIpdPaymentData() {
            ($("#addIpdPaymentNewForm").length ||
              $("#editIpdPaymentForm").length) &&
              ($("#ipdPaymentDate,#editIpdPaymentDate").flatpickr({
                dateFormat: "Y-m-d",
                enableTime: !1,
                minDate: $("#showIpdPatientCaseDate").val(),
                locale: $(".userCurrentLanguage").val(),
                widgetPositioning: { horizontal: "right", vertical: "bottom" }
              }),
              $("#ipdPaymentModeId").select2({
                width: "100%",
                dropdownParent: $("#addIpdPaymentModal")
              }),
              $("#editIpdPaymentModeId").select2({
                width: "100%",
                dropdownParent: $("#editIpdPaymentModal")
              }));
          }
          function renderIpdPaymentData(e) {
            $.ajax({
              url: $("#showIpdPaymentUrl").val() + "/" + e + "/edit",
              type: "GET",
              success: function (e) {
                if (e.success) {
                  var t = e.data.ipd_payment_document_url
                    .split(".")
                    .pop()
                    .toLowerCase();
                  "pdf" == t
                    ? $("#editIpdPaymentPreviewImage").css(
                        "background-image",
                        'url("' + $(".pdfDocumentImageUrl").val() + '")'
                      )
                    : "docx" == t || "doc" == t
                    ? $("#editIpdPaymentPreviewImage").css(
                        "background-image",
                        'url("' + $(".docxDocumentImageUrl").val() + '")'
                      )
                    : "" != e.data.ipd_payment_document_url
                    ? $("#editIpdPaymentPreviewImage").css(
                        "background-image",
                        'url("' + e.data.ipd_payment_document_url + '")'
                      )
                    : $("#editIpdPaymentPreviewImage").css(
                        "background-image",
                        'url("' + $(".showDefaultDocumentImageUrl").val() + '")'
                      ),
                    $("#ipdPaymentId").val(e.data.id),
                    $("#editIpdPaymentAmount").val(e.data.amount),
                    document
                      .querySelector("#editIpdPaymentDate")
                      ._flatpickr.setDate(
                        moment(e.data.date).format("YYYY-MM-DD h:mm A")
                      ),
                    $("#editIpdPaymentNote").val(e.data.notes),
                    $("#editIpdPaymentModeId")
                      .val(e.data.payment_mode)
                      .trigger("change.select2"),
                    $("#editIpdPaymentModal").modal("show"),
                    ajaxCallCompleted();
                }
              },
              error: function (e) {
                manageAjaxErrors(e);
              }
            });
          }
          function isValidIpdPaymentDocument(e, t) {
            var a = $(e).val().split(".").pop().toLowerCase();
            return -1 ==
              $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"])
              ? ($(e).val(""),
                $(t)
                  .html(
                    "The document must be a file of type: jpeg, jpg, png, pdf, doc, docx."
                  )
                  .show(),
                !1)
              : a;
          }
          function deleteItemPaymentAjax(url, tableId, header) {
            var callFunction =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : null;
            $.ajax({
              url,
              type: "DELETE",
              dataType: "json",
              success: function success(obj) {
                obj.success && Livewire.emit("resetPage"),
                  Swal.fire({
                    icon: "success",
                    title: "Deleted!",
                    confirmButtonColor: "#009ef7",
                    text: header + " has been deleted.",
                    timer: 2e3
                  }),
                  callFunction && eval(callFunction);
              },
              error: function (e) {
                Swal.fire({
                  title: "",
                  text: e.responseJSON.message,
                  confirmButtonColor: "#009ef7",
                  icon: "error",
                  timer: 5e3
                });
              }
            });
          }
          document.addEventListener("turbo:load", loadIpdPaymentData),
            listen("click", ".ipdpayment-delete-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#showIpdPaymentUrl").val() + "/" + t,
                null,
                $("#ipdPaymentButton").val()
              );
            }),
            listen("click", ".ipdpayment-edit-btn", function (e) {
              $(".ajaxCallIsRunning").val() ||
                (ajaxCallInProgress(),
                renderIpdPaymentData($(e.currentTarget).attr("data-id")));
            }),
            listenSubmit("#addIpdPaymentNewForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#btnIpdPaymentSave");
              t.button("loading");
              var a = new FormData($(this)[0]);
              $.ajax({
                url: $("#showIpdPaymentCreateUrl").val(),
                type: "POST",
                dataType: "json",
                data: a,
                processData: !1,
                contentType: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#addIpdPaymentModal").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  printErrorMessage("#ipdPaymentValidationErrorsBox", e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenSubmit("#editIpdPaymentForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#btnEditIpdPaymentSave");
              t.button("loading");
              var a = $("#ipdPaymentId").val(),
                n = $("#showIpdPaymentUrl").val() + "/" + a,
                i = { formSelector: $(this), url: n, type: "POST" };
              editIpdPaymentRecord(i, t, "#editIpdPaymentModal");
            }),
            listenHiddenBsModal("#addIpdPaymentModal", function () {
              resetModalForm(
                "#addIpdPaymentNewForm",
                "#ipdPaymentValidationErrorsBox"
              ),
                $("#ipdPaymentPreviewImage").attr(
                  "src",
                  $("#showDefaultDocumentImageUrl").val()
                ),
                $("#ipdPaymentPreviewImage").css(
                  "background-image",
                  'url("' + $("#showDefaultDocumentImageUrl").val() + '")'
                );
            }),
            listenHiddenBsModal("#editIpdPaymentModal", function () {
              resetModalForm(
                "#editIpdPaymentForm",
                "#editIpdPaymentValidationErrorsBox"
              );
            }),
            listenChange("#ipdPaymentDocumentImage", function () {
              var e = isValidIpdPaymentDocument(
                $(this),
                "#ipdPaymentValidationErrorsBox"
              );
              isEmpty(e) ||
                0 == e ||
                ($("#ipdPaymentValidationErrorsBox").html("").hide(),
                displayDocument(this, "#ipdPaymentPreviewImage", e));
            }),
            listenChange("#editIpdPaymentDocumentImage", function () {
              var e = isValidIpdPaymentDocument(
                $(this),
                "#editIpdPaymentValidationErrorsBox"
              );
              isEmpty(e) ||
                0 == e ||
                ($("#editIpdPaymentValidationErrorsBox").html("").hide(),
                displayDocument(this, "#editIpdPaymentPreviewImage", e));
            }),
            (window.editIpdPaymentRecord = function (e, t) {
              var a =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : "#EditModal",
                n =
                  "" === e.formSelector
                    ? e.formData
                    : new FormData($(e.formSelector)[0]);
              $.ajax({
                url: e.url,
                type: e.type,
                data: n,
                processData: !1,
                contentType: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $(a).modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listen("click", "#ipdPaymentDocumentImage", function () {
              defaultImagePreview("#ipdPaymentPreviewImage");
            }),
            listen("click", ".removeIpdPaymentImageEdit", function () {
              defaultImagePreview("#editIpdPaymentPreviewImage");
            });
        },
        1307: () => {
          document.addEventListener("turbo:load", function () {
            if (
              !$("#editIpdPrescriptionForm").length &&
              !$("#addIpdPrescriptionForm").length
            )
              return;
          }),
            listen("click", ".deleteIpdPrescriptionBtn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#showIpdPrescriptionUrl").val() + "/" + t,
                "",
                $("#ipdPrescription").val()
              );
            });
          var e = function (e) {
            "#ipdPrescriptionItemTemplate" === e
              ? $(".ipdCategoryId").select2({
                  placeholder: "Select Category",
                  width: "100%",
                  dropdownParent: $("#addIpdPrescriptionModal")
                })
              : $(".ipdCategoryId").select2({
                  placeholder: "Select Category",
                  width: "100%",
                  dropdownParent: $("#editIpdPrescriptionModal")
                });
          };
          e("#ipdPrescriptionItemTemplate");
          var t = function (e) {
            "addIpdPrescriptionModal" === e
              ? $(".medicineId").select2({
                  placeholder: "Select Category",
                  width: "100%",
                  dropdownParent: $("#addIpdPrescriptionModal")
                })
              : $(".medicineId").select2({
                  placeholder: "Select Medicine",
                  width: "100%",
                  dropdownParent: $("#editIpdPrescriptionModal")
                });
          };
          listenClick(
            "#addPrescriptionItem, #addPrescriptionItemOnEdit",
            function () {
              var t = parseInt($(this).data("edit"))
                  ? "#editIpdPrescriptionItemTemplate"
                  : "#ipdPrescriptionItemTemplate",
                n = parseInt($(this).data("edit"))
                  ? ".edit-ipd-prescription-item-container"
                  : ".ipd-prescription-item-container",
                i = $("#showIpdUniqueId").val(),
                r = {
                  medicineCategories: JSON.parse(
                    $("#showMedicineCategories").val()
                  ),
                  uniqueId: i
                },
                s = prepareTemplateRender(t, r);
              $(n).append(s),
                e(t),
                i++,
                $("#showIpdUniqueId").val(i),
                a(parseInt($(this).data("edit")));
            }
          );
          var a = function (t) {
            var a = t
                ? "#editIpdPrescriptionItemTemplate"
                : "#ipdPrescriptionItemTemplate",
              n = t
                ? ".edit-ipd-prescription-item-container"
                : ".ipd-prescription-item-container",
              i = t
                ? ".edit-prescription-item-number"
                : ".prescription-item-number",
              r = 1;
            $(n + ">tr").each(function () {
              $(this).find(i).text(r), r++;
            });
            var s = $("#showIpdUniqueId").val();
            if (r - 1 == 0) {
              var o = {
                  medicineCategories: JSON.parse(
                    $("#showMedicineCategories").val()
                  ),
                  uniqueId: s
                },
                d = prepareTemplateRender(a, o);
              $(n).append(d), e(a), s++;
            }
          };
          function n() {
            var e = !0;
            return (
              $(".medicineId").each(function () {
                if ("Select Medicine" == $(this).val())
                  return (
                    displayErrorMessage("Medicine field is required"),
                    (e = !1),
                    !1
                  );
              }),
              e
            );
          }
          listenClick(".editIpdPrescriptionBtn", function (e) {
            if (!$(".ajaxCallIsRunning").val()) {
              ajaxCallInProgress();
              var t,
                a = e.currentTarget.dataset.id;
              (t = a),
                $.ajax({
                  url: $("#showIpdPrescriptionUrl").val() + "/" + t + "/edit",
                  type: "GET",
                  success: function (e) {
                    if (e.success) {
                      var t = e.data.ipdPrescription,
                        a = e.data.ipdPrescriptionItems;
                      $("#ipdEditPrescriptionId").val(t.id),
                        $("#editHeaderNote").val(t.header_note),
                        $("#editFooterNote").val(t.footer_note),
                        $.each(a, function (e, t) {
                          $("#addPrescriptionItemOnEdit").trigger("click");
                          var a = $("#showIpdUniqueId").val() - 1;
                          $(document)
                            .find("[data-id='" + a + "']")
                            .val(t.category_id)
                            .trigger("change", [{ medicineId: t.medicine_id }]),
                            $(document)
                              .find("[data-dosage-id='" + a + "']")
                              .val(t.dosage),
                            $(document)
                              .find("[data-instruction-id='" + a + "']")
                              .val(t.instruction);
                        });
                      var n = 1;
                      $(".edit-ipd-prescription-item-container>tr").each(
                        function () {
                          $(this).find(".prescription-item-number").text(n), n++;
                        }
                      ),
                        $("#editIpdPrescriptionModal").modal("show"),
                        ajaxCallCompleted();
                    }
                  },
                  error: function (e) {
                    manageAjaxErrors(e);
                  }
                });
            }
          }),
            listenClick(
              ".deleteIpdPrescription, .deleteIpdPrescriptionOnEdit",
              function () {
                $(this).parents("tr").remove(), a(parseInt($(this).data("edit")));
              }
            ),
            listenChange(".ipdCategoryId", function (e, a) {
              var n = $(document).find(
                "[data-medicine-id='" + $(this).data("id") + "']"
              );
              "" !== $(this).val() &&
                $.ajax({
                  url: $("#showMedicinesListUrl").val(),
                  type: "get",
                  dataType: "json",
                  data: { id: $(this).val() },
                  success: function (e) {
                    0 !== e.data.length
                      ? (n.empty(),
                        n.removeAttr("disabled"),
                        $.each(e.data, function (e, t) {
                          n.append(
                            $("<option></option>").attr("value", e).text(t)
                          );
                        }),
                        $(".modal").hasClass("show") &&
                          t($(".modal.fade.show").attr("id")),
                        void 0 !== a &&
                          n.val(a.medicineId).trigger("change.select2"))
                      : n.append($("<option></option>").text("Select Medicine"));
                  }
                }),
                n.empty(),
                n.prop("disabled", !0);
            }),
            listenClick(".printIpdPrescription", function () {
              var e = document.getElementById("DivIdToPrint"),
                t = window.open("", "Print-Window");
              t.document.open(),
                t.document.write(
                  '<html><link href="' +
                    $("#showIpdBootstrapUrl").val() +
                    '" rel="stylesheet" type="text/css"/><body onload="window.print()">' +
                    e.innerHTML +
                    "</body></html>"
                ),
                t.document.close(),
                setTimeout(function () {
                  t.close();
                }, 1e6);
            }),
            listenHiddenBsModal("#addIpdPrescriptionModal", function () {
              resetModalForm("#addIpdPrescriptionForm", "#validationErrorsBox"),
                $("#ipdPrescriptionTbl").find("tr:gt(1)").remove(),
                $(".ipdCategoryId").val(""),
                $(".ipdCategoryId").trigger("change");
            }),
            listenShownBsModal("#addIpdPrescriptionModal", function () {
              t(".medicineId"), e("#ipdPrescriptionItemTemplate");
            }),
            listenHiddenBsModal("#editIpdPrescriptionModal", function () {
              $("#editIpdPrescriptionTbl").find("tr:gt(0)").remove(),
                resetModalForm(
                  "#editIpdPrescriptionForm",
                  "#editIpdPrescriptionErrorsBox"
                );
            }),
            listenClick(".viewIpdPrescription", function (e) {
              var t = e.currentTarget.dataset.id;
              $.ajax({
                url: $("#showIpdPrescriptionUrl").val() + "/" + t,
                type: "get",
                beforeSend: function () {
                  screenLock();
                },
                success: function (e) {
                  $("#ipdPrescriptionViewData").html(e),
                    $("#showIpdPrescriptionModal").modal("show"),
                    ajaxCallCompleted();
                },
                complete: function () {
                  screenUnLock();
                }
              });
            }),
            listenSubmit("#addIpdPrescriptionForm", function (e) {
              if ((e.preventDefault(), !0 !== n())) return !1;
              var t = jQuery(this).find("#btnIpdPrescriptionSave");
              t.button("loading");
              var a = {
                formSelector: $(this),
                url: $("#showIpdPrescriptionCreateUrl").val(),
                type: "POST"
              };
              newRecord(a, t, "#addIpdPrescriptionModal");
            }),
            listenSubmit("#editIpdPrescriptionForm", function (e) {
              if ((e.preventDefault(), !0 !== n())) return !1;
              var t = jQuery(this).find("#btnEditIpdPrescriptionSave");
              t.button("loading");
              var a = $("#ipdEditPrescriptionId").val(),
                i = $("#showIpdPrescriptionUrl").val() + "/" + a,
                r = { formSelector: $(this), url: i, type: "POST" };
              editRecord(r, t, "#editIpdPrescriptionModal");
            });
        },
        1698: () => {
          function e(e) {
            $.ajax({
              url: $("#showIpdTimelinesUrl").val(),
              type: "get",
              data: { id: e },
              success: function (e) {
                $("#ipdTimelines").html(e);
              }
            });
          }
          document.addEventListener("turbo:load", function () {
            if (
              !$("#editIpdTimelineForm").length &&
              !$("#addIpdTimelineNewForm").length
            )
              return;
            e($("#ipdPatientDepartmentId").val()),
              $("#ipdTimelineDate, #editIpdTimelineDate").flatpickr({
                format: "YYYY-MM-DD",
                useCurrent: !0,
                sideBySide: !0,
                minDate: $("#showIpdPatientCaseDate").val(),
                locale: $(".userCurrentLanguage").val()
              });
          }),
            listenSubmit("#addIpdTimelineNewForm", function (t) {
              t.preventDefault();
              var a = jQuery(this).find("#btnIpdTimelineSave");
              a.button("loading");
              var n = {
                formSelector: $(this),
                url: $("#showIpdTimelineCreateUrl").val(),
                type: "POST",
                tableSelector: "#tbl"
              };
              newRecord(n, a, "#addIpdTimelineModal"),
                a.attr("disabled", !1),
                setTimeout(function () {
                  e($("#ipdPatientDepartmentId").val());
                }, 500);
            }),
            listenClick(".edit-timeline-btn", function () {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var e,
                  t = $(this).data("timeline-id");
                (e = t),
                  $.ajax({
                    url: $("#showIpdTimelinesUrl").val() + "/" + e + "/edit",
                    type: "GET",
                    success: function (e) {
                      if (e.success) {
                        if ("" != e.data.ipd_timeline_document_url) {
                          var t = e.data.ipd_timeline_document_url
                            .split(".")
                            .pop()
                            .toLowerCase();
                          "pdf" == t
                            ? $("#editPreviewIpdTimelineImage").css(
                                "background-image",
                                'url("' + $(".pdfDocumentImageUrl").val() + '")'
                              )
                            : "docx" == t || "doc" == t
                            ? $("#editPreviewIpdTimelineImage").css(
                                "background-image",
                                'url("' + $(".docxDocumentImageUrl").val() + '")'
                              )
                            : $("#editPreviewIpdTimelineImage").css(
                                "background-image",
                                'url("' + e.data.ipd_timeline_document_url + '")'
                              ),
                            $("#ipdTimeDocumentUrl").show(),
                            $(".btn-view").show();
                        } else
                          $("#ipdTimeDocumentUrl").hide(),
                            $(".btn-view").hide(),
                            $("#editPreviewIpdTimelineImage").css(
                              "background-image",
                              'url("' +
                                $("#showDefaultDocumentImageUrl").val() +
                                '")'
                            );
                        $("#ipdTimelineId").val(e.data.id),
                          $("#editIpdTimelineTitle").val(e.data.title),
                          document
                            .querySelector("#editIpdTimelineDate")
                            ._flatpickr.setDate(moment(e.data.date).format()),
                          $("#editIpdTimelineDescription").val(
                            e.data.description
                          ),
                          $("#ipdTimeDocumentUrl").attr(
                            "href",
                            e.data.ipd_timeline_document_url
                          ),
                          1 == e.data.visible_to_person
                            ? $("#editIpdTimelineVisibleToPerson").prop(
                                "checked",
                                !0
                              )
                            : $("#editIpdTimelineVisibleToPerson").prop(
                                "checked",
                                !1
                              ),
                          $("#editIpdTimelineModal").modal("show"),
                          ajaxCallCompleted();
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#editIpdTimelineForm", function (t) {
              t.preventDefault();
              var a = jQuery(this).find("#btnIpdTimelineEdit");
              a.button("loading");
              var n = $("#ipdTimelineId").val(),
                i = $("#showIpdTimelinesUrl").val() + "/" + n,
                r = {
                  formSelector: $(this),
                  url: i,
                  type: "POST",
                  tableSelector: "#tbl"
                };
              editRecord(r, a, "#editIpdTimelineModal"),
                setTimeout(function () {
                  e($("#ipdPatientDepartmentId").val());
                }, 500);
            }),
            listenClick(".delete-timeline-btn", function () {
              var t = $(this).data("timeline-id");
              swal({
                title: $(".deleteVariable").val(),
                text: $(".confirmVariable").val() + $("#ipdTimeline").val() + "?",
                type: "warning",
                icon: "warning",
                showCancelButton: !0,
                closeOnConfirm: !1,
                confirmButtonColor: "#50cd89",
                showLoaderOnConfirm: !0,
                buttons: {
                  confirm: $(".yesVariable").val() + $(".deleteVariable").val(),
                  cancel: $(".noVariable").val() + $(".cancelVariable").val()
                }
              }).then(function (a) {
                a &&
                  $.ajax({
                    url: $("#showIpdTimelinesUrl").val() + "/" + t,
                    type: "DELETE",
                    dataType: "json",
                    success: function (t) {
                      t.success &&
                        setTimeout(function () {
                          e($("#ipdPatientDepartmentId").val());
                        }, 500),
                        swal({
                          title: $(".deletedVariable").val(),
                          text:
                            $("#ipdTimeline").val() +
                            $(".hasBeenDeletedVariable").val(),
                          icon: "success",
                          confirmButtonColor: "#50cd89",
                          timer: 2e3
                        }),
                        livewire.emit("refresh");
                    }
                  });
              });
            }),
            listenHiddenBsModal("#addIpdTimelineModal", function () {
              resetModalForm("#addIpdTimelineNewForm", "#ipdTimelineErrorsBox"),
                $("#previewIpdTimelineImage").attr(
                  "src",
                  $("#showDefaultDocumentImageUrl").val()
                ),
                $("#previewIpdTimelineImage").css(
                  "background-image",
                  'url("' + $("#showDefaultDocumentImageUrl").val() + '")'
                );
            }),
            listenHiddenBsModal("#editIpdTimelineModal", function () {
              resetModalForm("#editIpdTimelineForm", "#editIpdTimelineErrorsBox");
            }),
            listenClick(".removeIpdTimeline", function () {
              defaultImagePreview("#previewIpdTimelineImage");
            }),
            listenClick(".removeIpdTimelineEdit", function () {
              defaultImagePreview("#editPreviewIpdTimelineImage");
            });
        },
        4592: () => {
          function e(e) {
            toastr.error(e), $("#issuedItemSave").prop("disabled", !0);
          }
          document.addEventListener("turbo:load", function () {
            $("#issueItemCategory, #issueUserType").select2({ width: "100%" }),
              $("#issueTo").select2({
                placeholder: "Select User",
                width: "100%"
              }),
              $("#issueItems").select2({
                placeholder: "Select Item",
                width: "100%"
              });
            var e = $("#issueReturnDate").flatpickr({
              format: "YYYY-MM-DD",
              useCurrent: !1,
              sideBySide: !0,
              locale: $(".userCurrentLanguage").val()
            });
            $("#issueDate").flatpickr({
              format: "YYYY-MM-DD",
              useCurrent: !0,
              sideBySide: !0,
              locale: $(".userCurrentLanguage").val(),
              onChange: function (t, a, n) {
                var i = moment($("#issueDate").val()).add(1, "days").format();
                e.set("minDate", i);
              }
            }),
              $("#issueDate").on("dp.change", function (e) {
                var t = moment($("#issueDate").val()).add(1, "days");
                $("#issueReturnDate").data("DateTimePicker").minDate(t);
              }),
              setTimeout(function () {
                $("#issueItemCategory, #issueUserType").trigger("change");
              }, 300);
          }),
            listenChange("#issueItemCategory", function () {
              "" !== $(this).val() &&
                $.ajax({
                  url: $("#issuedItemsUrl").val(),
                  type: "get",
                  dataType: "json",
                  data: { id: $(this).val() },
                  success: function (e) {
                    0 !== e.data.length
                      ? ($("#issueItems").empty(),
                        $("#issueItems").removeAttr("disabled"),
                        $.each(e.data, function (e, t) {
                          $("#issueItems").append(
                            $("<option></option>").attr("value", e).text(t)
                          );
                        }),
                        $("#issueItems").trigger("change"))
                      : ($("#issueItems").prop("disabled", !0),
                        $("#itemQuantity").prop("disabled", !0),
                        $("#itemQuantity").val(""),
                        $("#showAvailableQuantity").text("0"),
                        $("#itemAvailableQuantity").val(0));
                  }
                }),
                $("#issueItems").empty(),
                $("#issueItems").append("<option>Select Items</option>"),
                $("#issueItems").prop("disabled", !0);
            }),
            listenChange("#issueUserType", function () {
              "" !== $(this).val() &&
                $.ajax({
                  url: $("#itemIssuedUsersUrl").val(),
                  type: "get",
                  dataType: "json",
                  data: { id: $(this).val() },
                  success: function (e) {
                    0 !== e.data.length
                      ? ($("#issueTo").empty(),
                        $("#issueTo").removeAttr("disabled"),
                        $.each(e.data, function (e, t) {
                          $("#issueTo").append(
                            $("<option></option>").attr("value", e).text(t)
                          );
                        }))
                      : $("#issueTo").prop("disabled", !0);
                  }
                }),
                $("#issueTo").empty(),
                $("#issueTo").append("<option>Select User</option>"),
                $("#issueTo").prop("disabled", !0);
            }),
            listenChange("#issueItems", function () {
              $.ajax({
                url: $("#issuedItemAvailableQtyUrl").val(),
                type: "get",
                dataType: "json",
                data: { id: $(this).val() },
                success: function (e) {
                  $("#itemAvailableQuantity").val(e),
                    $("#showAvailableQuantity").text(e),
                    $("#itemQuantity").attr("max", e),
                    $("#itemQuantity").attr("disabled", !1);
                }
              });
            }),
            listenChange("#itemQuantity", function () {
              var t = parseInt($("#itemAvailableQuantity").val()),
                a = parseInt($(this).val());
              a <= t
                ? $("#issuedItemSave").prop("disabled", !1)
                : e(
                    0 === a
                      ? "Quantity cannot be zero."
                      : "Quantity must be less than Available quantity."
                  );
            }),
            listenSubmit(
              "#createIssuedItemForm, #editIssuedItemForm",
              function () {
                $("#issuedItemSave").attr("disabled", !0);
              }
            );
        },
        2958: () => {
          $("#filter_status").select2(),
            listenClick("#issuedItemResetFilter", function () {
              $("#issuedItemHead").val(2).trigger("change");
            }),
            listenClick(".deleteIssuedItemBtn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#indexIssuedItemUrl").val() + "/" + t,
                "",
                $("#issuedItem").val()
              );
            }),
            listenClick(".changes-status-btn", function (e) {
              var t = $(this).attr("data-id"),
                a = $(this).attr("status");
              Lang.setLocale($(".userCurrentLanguage").val()),
                a ||
                  swal({
                    title: Lang.get("messages.appointment.change_status") + "!",
                    text:
                      Lang.get(
                        "messages.issued_item.are_you_sure_want_to_return_this_item"
                      ) + "?",
                    type: "warning",
                    icon: "warning",
                    showCancelButton: !0,
                    closeOnConfirm: !1,
                    confirmButtonColor: "#50cd89",
                    showLoaderOnConfirm: !0,
                    buttons: {
                      confirm: Lang.get("messages.common.yes"),
                      cancel: Lang.get("messages.common.no")
                    }
                  }).then(function (e) {
                    e &&
                      $.ajax({
                        url: $("#indexReturnIssuedItemUrl").val(),
                        type: "get",
                        dataType: "json",
                        data: { id: t },
                        success: function (e) {
                          swal({
                            title: Lang.get("messages.issued_item.item_returned"),
                            icon: "success",
                            confirmButtonColor: "#50cd89",
                            timer: 2e3
                          }),
                            livewire.emit("refresh");
                        }
                      });
                  });
            }),
            listenChange("#issuedItemHead", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val()),
                hideDropdownManually(
                  $("#issuedItemFilter"),
                  $("#issuedItemFilter")
                );
            });
        },
        2458: () => {
          document.addEventListener("turbo:load", function () {
            listenClick(".editItemCategoryBtn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#indexItemCategoriesUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      if (e.success) {
                        var t = e.data;
                        $("#itemCategoryId").val(t.id),
                          $("#editItemCategoryName").val(t.name),
                          $("#edit_item_categories_modal").modal("show"),
                          ajaxCallCompleted();
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
              listenClick(".deleteItemCategoryBtn", function (e) {
                var t = $(e.currentTarget).attr("data-id");
                deleteItem(
                  $("#indexItemCategoriesUrl").val() + "/" + t,
                  "",
                  $("#localItemCategory").val()
                );
              }),
              listenHiddenBsModal("#add_item_categories_modal", function () {
                resetModalForm("#addItemCategoryForm", "#itemCatErrorsBox");
              }),
              listenHiddenBsModal("#edit_item_categories_modal", function () {
                resetModalForm("#editItemCatForm", "#editItemCatErrorsBox");
              });
          }),
            listenSubmit("#addItemCategoryForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#itemCategorySave");
              t.button("loading"),
                $.ajax({
                  url: $("#indexItemCategoryCreateUrl").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_item_categories_modal").modal("hide"),
                      Livewire.emit("refresh"));
                  },
                  error: function (e) {
                    printErrorMessage("#itemCatErrorsBox", e);
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listenSubmit("#editItemCatForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editItemCategorySave");
              t.button("loading");
              var a = $("#itemCategoryId").val();
              $.ajax({
                url: $("#indexItemCategoriesUrl").val() + "/" + a,
                type: "put",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_item_categories_modal").modal("hide"),
                    Livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            });
        },
        2142: () => {
          document.addEventListener("turbo:load", function () {
            if (
              !$("#stockItemCategory").length &&
              !$("#editStockItemCategory").length
            )
              return;
            $("#stockItemCategory, #editStockItemCategory").select2({
              width: "100%"
            }),
              $("#stockItems, #editStockItems").select2({
                width: "100%",
                placeholder: "Select Item"
              }),
              $(".isEdit").val() &&
                ($(".price-input").trigger("input"),
                setTimeout(function () {
                  $("#stockItemCategory, #editStockItemCategory").trigger(
                    "change"
                  );
                }, 300));
          }),
            listenChange(".stockCategory", function () {
              "" !== $(this).val() &&
                $.ajax({
                  url: $(".itemsUrl").val(),
                  type: "get",
                  dataType: "json",
                  data: { id: $(this).val() },
                  success: function (e) {
                    0 !== e.data.length
                      ? ($(".stockItems").empty(),
                        $(".stockItems").removeAttr("disabled"),
                        $.each(e.data, function (e, t) {
                          $(".stockItems").append(
                            $("<option></option>").attr("value", e).text(t)
                          );
                        }),
                        $(".isEdit").val() &&
                          ($(".stockItems")
                            .val($("#editStockItemId").val())
                            .trigger("change.select2"),
                          (isEdit = !1)))
                      : $(".stockItems").prop("disabled", !0);
                  }
                }),
                $(".stockItems").empty(),
                $(".stockItems").prop("disabled", !0);
            }),
            listenClick(".removeStockImage", function () {
              defaultImagePreview(".previewImage");
            });
        },
        4116: () => {
          listenClick(".deleteStockBtn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#indexItemStockUrl").val() + "/" + t,
              "",
              $("#itemStock").val()
            );
          });
        },
        3666: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#itemCategory").length && !$("#editItemCategory").length)
              return;
            $("#itemCategory").select2({ width: "100%" }),
              $("#editItemCategory").select2({ width: "100%" });
          });
        },
        1753: () => {
          listenClick(".deleteItemsBtn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem($("#indexItemUrl").val() + "/" + t, "", $("#Items").val());
          });
        },
        1065: () => {
          function e(e, t) {
            var a = $(e).val().split(".").pop().toLowerCase();
            return (
              -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
            );
          }
          document.addEventListener("turbo:load", function () {
            if (
              !$("#createLabTechnicianForm").length &&
              !$("#editLabTechnicianForm").length
            )
              return;
            $("#technicianBloodGroup").select2({ width: "100%" }),
              $("#editTechnicianBloodGroup").select2({ width: "100%" }),
              $(".departmentId").select2({ width: "100%" }),
              $(".technicianBirthDate")
                .flatpickr({
                  dateFormat: "Y-m-d",
                  useCurrent: !1,
                  locale: $(".userCurrentLanguage").val()
                })
                .set("maxDate", new Date());
          }),
            listenSubmit(
              "#createLabTechnicianForm, #editLabTechnicianForm",
              function () {
                if ("" !== $(".error-msg").text())
                  return $(".phoneNumber").focus(), !1;
              }
            ),
            $("#createLabTechnicianForm, #editLabTechnicianForm")
              .find("input:text:visible:first")
              .focus(),
            listenChange(".technicianProfileImage", function () {
              var t = e($(this), "#technicianErrorsBox");
              isEmpty(t) || 0 == t
                ? ($(this).val(""),
                  $("#technicianErrorsBox").removeClass("d-none hide"),
                  $("#technicianErrorsBox")
                    .text("The image must be a file of type: jpg, jpeg, png.")
                    .show(),
                  $("[id=technicianErrorsBox]").focus(),
                  $("html, body").animate({ scrollTop: "0" }, 500),
                  $(".alert").delay(5e3).slideUp(300))
                : ($("#technicianErrorsBox").html("").hide(),
                  displayDocument(this, "#technicianErrorsBox", t));
            }),
            listenChange(".editTechnicianProfileImage", function () {
              var t = e($(this), "#editTechnicianErrorsBox");
              isEmpty(t) || 0 == t
                ? ($(this).val(""),
                  $("#editTechnicianErrorsBox").removeClass("d-none hide"),
                  $("#editTechnicianErrorsBox")
                    .text("The image must be a file of type: jpg, jpeg, png.")
                    .show(),
                  $("[id=editTechnicianErrorsBox]").focus(),
                  $("html, body").animate({ scrollTop: "0" }, 500),
                  $(".alert").delay(5e3).slideUp(300))
                : ($("#editTechnicianErrorsBox").html("").hide(),
                  displayDocument(this, "#editTechnicianErrorsBox", t));
            });
        },
        681: () => {
          "use strict";
          listen("click", ".deleteTechnicianBtn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#labTechnicianURL").val() + "/" + t,
              "",
              $("#labTechnician").val()
            );
          }),
            listenChange(".technicianStatus", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              updateLabTechnicianStatus(t);
            }),
            listenChange("#technicianFilterStatus", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            }),
            listen("click", "#technicianResetFilter", function () {
              $("#technicianFilterStatus").val(0).trigger("change"),
                hideDropdownManually(
                  $("#labTechnicianFilterBtn"),
                  $(".dropdown-menu")
                );
            }),
            (window.updateLabTechnicianStatus = function (e) {
              $.ajax({
                url: $("#labTechnicianURL").val() + "/" + e + "/active-deactive",
                method: "post",
                cache: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message), livewire.emit("refresh"));
                }
              });
            });
        },
        4874: () => {},
        8283: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#indexLiveConsultationUrl").length) return;
            listenShownBsModal("#add_consulatation_modal", function () {
              $(
                ".doctor-name,.patient-name,.consultation-type,.consultation-type-number,.change-status"
              ).select2({
                width: "100%",
                dropdownParent: "#add_consulatation_modal"
              });
            }),
              listenShownBsModal("#edit_consulatation_modal", function () {
                $(
                  ".edit-doctor-name,.edit-patient-name,.edit-consultation-type,.edit-consultation-type-number,.edit-change-status"
                ).select2({
                  width: "100%",
                  dropdownParent: "#edit_consulatation_modal"
                });
              }),
              $("#liveConsultationFilterStatusArr").select2({ width: "100%" }),
              $(".consultation-date").flatpickr({
                enableTime: !0,
                defaultDate: new Date(),
                minDate: new Date(),
                dateFormat: "Y-m-d H:i",
                locale: $(".userCurrentLanguage").val()
              }),
              $(".edit-consultation-date").flatpickr({
                enableTime: !0,
                minDate: new Date(),
                dateFormat: "Y-m-d H:i",
                locale: $(".userCurrentLanguage").val()
              }),
              $(".change-consultation-status").select2({ width: "100%" });
          }),
            listenHiddenBsModal("#add_consulatation_modal", function () {
              resetModalForm("#addConsultationForm", "#consultationErrorsBox"),
                $(".consultation-type, .consultation-type-number")
                  .val("")
                  .trigger("change"),
                $("select").each(function (e, t) {
                  var a = "#" + $(this).attr("id");
                  $(a).val(""), $(a).prop("selectedIndex", 0).trigger("change");
                }),
                $("#consultationTypeNumber").val(null).trigger("change"),
                $("#consultationTypeNumber").append(
                  $(
                    '<option selected="selected" value="">Select Type Number</option>'
                  )
                );
            }),
            listenHiddenBsModal("#edit_consulatation_modal", function () {
              resetModalForm(
                "#editConsultationForm",
                "#editConsultationErrorsBox"
              );
            }),
            listenChange(".patient-name, .edit-patient-name", function () {
              "" !== $(this).val() &&
                ((e = $(this).val()),
                $(
                  ".consultation-type-number, .edit-consultation-type-number"
                ).empty(),
                $(
                  ".consultation-type-number, .edit-consultation-type-number"
                ).append(
                  '<option selected="selected" value="">Select Type Number</option>'
                ),
                $(".consultation-type, .edit-consultation-type").removeAttr(
                  "disabled"
                ));
            });
          var e = null;
          listenChange(".consultation-type", function () {
            $.ajax({
              url: $("#indexLiveConsultationTypeNumber").val(),
              type: "get",
              dataType: "json",
              data: { consultation_type: $(this).val(), patient_id: e },
              success: function (e) {
                0 !== e.data.length
                  ? ($(".consultation-type-number").empty(),
                    $(".consultation-type-number").removeAttr("disabled"),
                    $(".consultation-type-number").append(
                      '<option selected="selected" value="">Select Type Number</option>'
                    ),
                    $.each(e.data, function (e, t) {
                      $(".consultation-type-number").append(
                        $("<option></option>").attr("value", e).text(t)
                      );
                    }),
                    $(".consultation-type-number").select2({
                      width: "100%",
                      dropdownParent: $("#add_consulatation_modal")
                    }),
                    $(".edit-consultation-type-number").select2({
                      width: "100%",
                      dropdownParent: $("#edit_consulatation_modal")
                    }))
                  : ($(".consultation-type-number").empty(),
                    $(".consultation-type-number").append(
                      '<option selected="selected" value="">Select Type Number</option>'
                    ),
                    $(".consultation-type-number").prop("disabled", !0));
              }
            });
          }),
            listenChange(".edit-consultation-type", function () {
              $.ajax({
                url: $("#indexLiveConsultationTypeNumber").val(),
                type: "get",
                dataType: "json",
                data: { consultation_type: $(this).val(), patient_id: e },
                success: function (e) {
                  0 !== e.data.length
                    ? ($(".edit-consultation-type-number").empty(),
                      $(".edit-consultation-type-number").removeAttr("disabled"),
                      $(".edit-consultation-type-number").append(
                        '<option selected="selected" value="">Select Type Number</option>'
                      ),
                      $.each(e.data, function (e, t) {
                        $(".edit-consultation-type-number").append(
                          $("<option></option>").attr("value", e).text(t)
                        );
                      }),
                      $(".consultation-type-number").select2({
                        width: "100%",
                        dropdownParent: $("#add_consulatation_modal")
                      }),
                      $(".edit-consultation-type-number").select2({
                        width: "100%",
                        dropdownParent: $("#edit_consulatation_modal")
                      }))
                    : ($(".edit-consultation-type-number").empty(),
                      $(".edit-consultation-type-number").append(
                        '<option selected="selected" value="">Select Type Number</option>'
                      ),
                      $(".edit-consultation-type-number").prop("disabled", !0));
                }
              });
            }),
            listenSubmit("#addConsultationForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#consultationSave");
              t.button("loading"),
                $("#consultationSave").attr("disabled", !0),
                $.ajax({
                  url: $("#indexLiveConsultationCreateUrl").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_consulatation_modal").modal("hide"),
                      $("#liveConsultationTable")
                        .DataTable()
                        .ajax.reload(null, !1),
                      setTimeout(function () {
                        t.button("reset");
                      }, 2500),
                      $("#consultationSave").attr("disabled", !1),
                      livewire.emit("refresh"));
                  },
                  error: function (e) {
                    printErrorMessage("#consultationErrorsBox", e),
                      setTimeout(function () {
                        t.button("reset");
                      }, 2e3),
                      $("#consultationSave").attr("disabled", !1);
                  }
                });
            }),
            listenSubmit("#editConsultationForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editConsultationSave");
              t.button("loading"),
                $("#editConsultationSave").attr("disabled", !0);
              var a = $("#liveConsultationId").val();
              $.ajax({
                url: $("#indexLiveConsultationUrl").val() + "/" + a,
                type: "post",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_consulatation_modal").modal("hide"),
                    $("#liveConsultationTable").DataTable().ajax.reload(null, !1),
                    $("#editConsultationSave").attr("disabled", !1),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  manageAjaxErrors(e),
                    $("#editConsultationSave").attr("disabled", !1);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenClick(".editConsultationBtn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#indexLiveConsultationUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      if (e.success) {
                        var t = e.data;
                        $("#liveConsultationId").val(t.id),
                          $(".edit-consultation-title").val(t.consultation_title),
                          $(".edit-consultation-date").val(
                            moment(t.consultation_date).format(
                              "YYYY-MM-DD h:mm A"
                            )
                          ),
                          $(".edit-consultation-duration-minutes").val(
                            t.consultation_duration_minutes
                          ),
                          $(".edit-patient-name")
                            .val(t.patient_id)
                            .trigger("change"),
                          $(".edit-doctor-name")
                            .val(t.doctor_id)
                            .trigger("change"),
                          $(".host-enable,.host-disabled").prop("checked", !1),
                          t.host_video,
                          $(
                            'input[name="host_video"][value='.concat(
                              t.host_video,
                              "]"
                            )
                          ).prop("checked", !0),
                          $(".client-enable,.client-disabled").prop(
                            "checked",
                            !1
                          ),
                          t.participant_video,
                          $(
                            'input[name="participant_video"][value='.concat(
                              t.participant_video,
                              "]"
                            )
                          ).prop("checked", !0),
                          $(".edit-consultation-type")
                            .val(t.type)
                            .trigger("change"),
                          setTimeout(function () {
                            $(".edit-consultation-type-number")
                              .val(t.type_number)
                              .trigger("change");
                          }, 1e3),
                          $(".edit-description").val(t.description),
                          $("#edit_consulatation_modal").modal("show"),
                          ajaxCallCompleted();
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenClick(".startConsultationBtn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url:
                      $("#indexLiveConsultationUrl").val() + "/" + t + "/start",
                    type: "GET",
                    success: function (e) {
                      if (e.success) {
                        var t = e.data;
                        $("#startConsultationId").val(t.liveConsultation.id),
                          $(".start-modal-title").text(
                            t.liveConsultation.consultation_title
                          ),
                          $(".host-name").text(t.liveConsultation.user.full_name),
                          $(".date").text(
                            moment(t.liveConsultation.consultation_date).format(
                              "Do MMM, Y"
                            ) +
                              " " +
                              moment(t.liveConsultation.consultation_date).format(
                                "LT"
                              )
                          ),
                          $(".minutes").text(
                            t.liveConsultation.consultation_duration_minutes
                          ),
                          $("#startModal")
                            .find(".status")
                            .append(
                              "started" === t.zoomLiveData.data.status
                                ? $(".status").text("Started")
                                : $(".status").text("Awaited")
                            ),
                          $(".start").attr(
                            "href",
                            $("#indexConsultationPatientRole").val()
                              ? t.liveConsultation.meta.join_url
                              : "started" === t.zoomLiveData.data.status
                              ? $(".start").addClass("disabled")
                              : t.liveConsultation.meta.start_url
                          ),
                          $("#startModal").modal("show"),
                          ajaxCallCompleted();
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenClick(".deleteConsultationBtn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#indexLiveConsultationUrl").val() + "/" + t,
                "",
                $("#LiveConsultation").val()
              );
            }),
            listenChange(".change-consultation-status", function () {
              var e = $(this).val();
              $.ajax({
                url: $("#indexLiveConsultationUrl").val() + "/change-status",
                type: "GET",
                data: { statusId: e, id: $(this).attr("data-id") },
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message), livewire.emit("refresh"));
                },
                error: function (e) {
                  manageAjaxErrors(e);
                }
              });
            }),
            listenClick(".showConsultationData", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              $.ajax({
                url: $("#indexLiveConsultationUrl").val() + "/" + t,
                type: "GET",
                success: function (e) {
                  if (e.success) {
                    var t = e.data.liveConsultation,
                      a = $("#show_live_consultations_modal");
                    $("#startLiveConsultationId").val(t.id),
                      $("#showConsultationTitle").text(t.consultation_title),
                      $("#showConsultationDate").text(
                        moment(t.consultation_date).format("Do MMM, Y") +
                          " " +
                          moment(t.consultation_date).format("LT")
                      ),
                      $("#showConsultationDurationMinutes").text(
                        t.consultation_duration_minutes
                      ),
                      $("#showConsultationPatient").text(
                        t.patient.patient_user.full_name
                      ),
                      $("#showConsultationDoctor").text(
                        t.doctor.doctor_user.full_name
                      ),
                      0 == t.type
                        ? a.find("#showConsultationType").append("OPD")
                        : a.find("#showConsultationType").append("IPD"),
                      0 == t.type
                        ? a
                            .find("#showConsultationTypeNumber")
                            .append(t.opd_patient.opd_number)
                        : a
                            .find("#showConsultationTypeNumber")
                            .append(t.ipd_patient.ipd_number),
                      0 === t.host_video
                        ? $("#showConsultationHostVideo").text("Disable")
                        : $("#showConsultationHostVideo").text("Enable"),
                      0 === t.participant_video
                        ? $("#showConsultationParticipantVideo").text("Disable")
                        : $("#showConsultationParticipantVideo").text("Enable"),
                      isEmpty(t.description)
                        ? $("#showConsultationDescription").text("N/A")
                        : $("#showConsultationDescription").text(t.description),
                      a.modal("show");
                  }
                },
                error: function (e) {
                  manageAjaxErrors(e);
                }
              });
            }),
            listenHiddenBsModal("#show_live_consultations_modal", function () {
              $(this)
                .find(
                  "#showConsultationTitle, #showConsultationDate, #showConsultationDurationMinutes, #showConsultationPatient, #showConsultationDoctor, #showConsultationType, #showConsultationTypeNumber, #showConsultationHostVideo, #showConsultationParticipantVideo, #showConsultationDescription"
                )
                .empty();
            }),
            listenClick(".add-credential", function () {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var e,
                  t = $("#zoomUserId").val();
                (e = t),
                  $.ajax({
                    url: "user-zoom-credential/" + e + "/fetch",
                    type: "GET",
                    success: function (e) {
                      if (e.success) {
                        var t = e.data;
                        isEmpty(t) ||
                          ($("#zoomApiKey").val(t.zoom_api_key),
                          $("#zoomApiSecret").val(t.zoom_api_secret)),
                          $("#addCredential").modal("show"),
                          ajaxCallCompleted();
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#addZoomForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#btnZoomSave");
              t.button("loading"),
                $.ajax({
                  url: $("#indexZoomCredentialCreateUrl").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#addCredential").modal("hide"),
                      setTimeout(function () {
                        t.button("reset");
                      }, 2500),
                      livewire.emit("refresh"));
                  },
                  error: function (e) {
                    printErrorMessage("#credentialValidationErrorsBox", e),
                      setTimeout(function () {
                        t.button("reset");
                      }, 2e3);
                  }
                });
            }),
            listenChange("#liveConsultationFilterStatusArr", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            }),
            listenClick("#consultationResetFilter", function () {
              $("#liveConsultationFilterStatusArr").val(0).trigger("change"),
                hideDropdownManually(
                  $("#liveConsultationFilterBtn"),
                  $(".dropdown-menu")
                );
            }),
            listenChange(".consultation-type", function () {
              $(".consultation-type-number").val("").trigger("change");
            }),
            listenChange(".patient-name", function () {
              $(".consultation-type").val("").trigger("change"),
                $(".consultation-type-number").trigger("change");
            });
        },
        6551: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#indexLiveMeetingUrl").length) return;
            $(".change-meeting-status").select2({ width: "100%" }),
              $("#meetingUserId, #statusArr").select2({ width: "100%" }),
              $(".editUserId").select2({ width: "100%" }),
              $(".consultation-date, .edit-consultation-date").flatpickr({
                enableTime: !0,
                minDate: new Date(),
                dateFormat: "Y-m-d H:i",
                locale: $(".userCurrentLanguage").val()
              });
          }),
            listenSubmit("#addLiveMeetingForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#meetingSave");
              $("#meetingSave").attr("disabled", !0),
                $.ajax({
                  url: $("#indexLiveMeetingCreateUrl").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_live_meeting_modal").modal("hide"),
                      t.attr("disabled", !1),
                      livewire.emit("refresh"),
                      $(".change-meeting-status").select2({ width: "100%" }),
                      setTimeout(function () {
                        t.attr("disabled", !1);
                      }, 3e3));
                  },
                  error: function (e) {
                    printErrorMessage("#meetingErrorsBox", e),
                      setTimeout(function () {
                        t.attr("disabled", !1);
                      }, 2e3);
                  }
                });
            }),
            listenHiddenBsModal("#add_live_meeting_modal", function () {
              resetModalForm("#addLiveMeetingForm", "#meetingErrorsBox"),
                $("#meetingUserId")
                  .val($(".loggedInUserId").val())
                  .trigger("change.select2");
            }),
            listenChange(".change-meeting-status", function () {
              var e = $(this).val();
              $.ajax({
                url: $("#indexLiveMeetingUrl").val() + "/change-status",
                type: "GET",
                data: { statusId: e, id: $(this).attr("data-id") },
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message), livewire.emit("refresh"));
                },
                error: function (e) {
                  manageAjaxErrors(e);
                }
              });
            }),
            listen("click", ".startMeetingBtn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#indexLiveMeetingUrl").val() + "/" + t + "/start",
                    type: "GET",
                    success: function (e) {
                      if (e.success) {
                        var t = e.data;
                        $("#startLiveConsultationId").val(t.liveMeeting.id),
                          $(".start-modal-title").text(
                            t.liveMeeting.consultation_title
                          ),
                          $(".host-name").text(t.liveMeeting.user.full_name),
                          $(".date").text(
                            moment(t.liveMeeting.consultation_date).format(
                              "Do MMM, Y"
                            ) +
                              " " +
                              moment(t.liveMeeting.consultation_date).format("LT")
                          ),
                          $(".minutes").text(
                            t.liveMeeting.consultation_duration_minutes
                          ),
                          $("#startConsultationModal")
                            .find(".status")
                            .append(
                              "started" === t.zoomLiveData.data.status
                                ? $(".status").text("Started")
                                : $(".status").text("Awaited")
                            ),
                          $("#indexMeetingAdminRole").val() ||
                          $("#indexMeetingDoctorRole").val()
                            ? "started" === t.zoomLiveData.data.status
                              ? $(".start").addClass("disabled")
                              : $(".start").attr(
                                  "href",
                                  t.liveMeeting.meta.start_url
                                )
                            : $(".start").attr(
                                "href",
                                t.liveMeeting.meta.join_url
                              ),
                          $("#startConsultationModal").modal("show"),
                          ajaxCallCompleted();
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listen("click", ".showMeetingData", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              $.ajax({
                url: $("#indexLiveMeetingUrl").val() + "/" + t,
                type: "GET",
                success: function (e) {
                  if (e.success) {
                    var t = e.data;
                    $("#showMeetingId").val(t.id),
                      $("#showMeetingTitle").text(t.consultation_title),
                      $("#showMeetingDate").text(
                        moment(t.consultation_date).format("Do MMM, Y") +
                          " " +
                          moment(t.consultation_date).format("LT")
                      ),
                      $("#showMeetingMinutes").text(
                        t.consultation_duration_minutes
                      ),
                      0 == t.host_video
                        ? $("#showMeetingHost").text("Disable")
                        : $("#showMeetingHost").text("Enable"),
                      0 == t.participant_video
                        ? $("#showMeetingParticipant").text("Disable")
                        : $("#showMeetingParticipant").text("Enable"),
                      isEmpty(t.description)
                        ? $("#showMeetingDescription").text("N/A")
                        : $("#showMeetingDescription").text(t.description),
                      $("#show_live_meetings_modal").modal("show");
                  }
                },
                error: function (e) {
                  manageAjaxErrors(e);
                }
              });
            }),
            listen("click", ".editMeetingBtn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#indexLiveMeetingUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      if (e.success) {
                        var t = e.data;
                        $("#liveMeetingId").val(t.id),
                          $(".edit-consultation-title").val(t.consultation_title),
                          $(".edit-consultation-date").val(
                            moment(t.consultation_date).format(
                              "YYYY-MM-DD h:mm A"
                            )
                          ),
                          $(".edit-consultation-duration-minutes").val(
                            t.consultation_duration_minutes
                          ),
                          $(".editUserId")
                            .val(t.meetingUsers)
                            .trigger("change.select2"),
                          $(".host-enable,.host-disabled").prop("checked", !1),
                          t.host_video,
                          $(
                            'input[name="host_video"][value='.concat(
                              t.host_video,
                              "]"
                            )
                          ).prop("checked", !0),
                          $(".client-enable,.client-disabled").prop(
                            "checked",
                            !1
                          ),
                          t.participant_video,
                          $(
                            'input[name="participant_video"][value='.concat(
                              t.participant_video,
                              "]"
                            )
                          ).prop("checked", !0),
                          $(".edit-description").val(t.description),
                          $("#edit_live_meeting_modal").modal("show"),
                          ajaxCallCompleted();
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#editMeetingForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editMeetingSave");
              t.button("loading"), t.attr("disabled", !0);
              var a = $("#liveMeetingId").val();
              $.ajax({
                url: $("#indexLiveMeetingUrl").val() + "/" + a,
                type: "post",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_live_meeting_modal").modal("hide"),
                    t.attr("disabled", !1),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  t.attr("disabled", !1), manageAjaxErrors(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listen("click", ".deleteMeetingBtn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#indexLiveMeetingUrl").val() + "/" + t,
                "",
                $("#LiveMeeting").val()
              );
            }),
            listenHiddenBsModal("#show_live_meetings_modal", function () {
              $(this)
                .find(
                  "#showMeetingTitle,#showMeetingDate, #showMeetingMinutes, #showMeetingHost, #showMeetingParticipant, #showMeetingDescription"
                )
                .empty();
            }),
            listenChange("#liveMeetingFilterArrID", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            }),
            listenClick("#liveMeetingResetFilter", function () {
              $("#liveMeetingFilterArrID").val(0).trigger("change"),
                hideDropdownManually(
                  $("#liveMeetingFilterBtn"),
                  $(".dropdown-menu")
                );
            });
        },
        9239: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#mailEmailId").length) return;
            $("#mailEmailId").focus();
          }),
            listenChange("#mailDocumentImage", function () {
              var e = isValidMailDocument($(this), "#mailValidationErrorsBox");
              isEmpty(e) ||
                0 == e ||
                ($("#mailValidationErrorsBox").html("").hide(),
                displayDocument(this, "#mailPreviewImage", e));
            }),
            (window.isValidMailDocument = function (e, t) {
              var a = $(e).val().split(".").pop().toLowerCase();
              return -1 ==
                $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"])
                ? ($(e).val(""),
                  $(t)
                    .html(
                      "The document must be a file of type: jpeg, jpg, png, pdf, doc, docx."
                    )
                    .show(),
                  !1)
                : a;
            }),
            listenClick(".removeMailImage", function () {
              defaultImagePreview("#mailPreviewImage");
            });
        },
        4117: () => {
          document.addEventListener("turbo:load", function () {
            listenClick(".showMedicineBtn", function (e) {
              e.preventDefault();
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url: $("#medicinesShowModal").val() + "/" + t,
                  type: "GET",
                  success: function (e) {
                    if (e.success) {
                      $("#showMedicineName").text(e.data.name),
                        $("#showMedicineBrand").text(e.data.brand_name),
                        $("#showMedicineCategory").text(e.data.category_name),
                        $("#showMedicineSaltComposition").text(
                          e.data.salt_composition
                        ),
                        $("#showMedicineSellingPrice").text(e.data.selling_price),
                        $("#showMedicineBuyingPrice").text(e.data.buying_price),
                        $("#showMedicineSideEffects").text(e.data.side_effects),
                        moment.locale($("#medicineLanguage").val());
                      var t = moment(e.data.created_at);
                      $("#showMedicineCreatedOn").text(t.fromNow()),
                        $("#showMedicineUpdatedOn").text(
                          moment(e.data.updated_at).fromNow()
                        ),
                        $("#showMedicineDescription").text(e.data.description),
                        setValueOfEmptySpan(),
                        $("#showMedicine").appendTo("body").modal("show");
                    }
                  },
                  error: function (e) {
                    displayErrorMessage(e.responseJSON.message);
                  }
                });
            });
          }),
            listenClick(".deleteMedicineBtn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#indexMedicineUrl").val() + "/" + t,
                "",
                $("#Medicine").val()
              );
            });
        },
        4163: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#createMedicine").length && !$("#editMedicine").length)
              return;
            var e = $("#qty");
            e.blur(function () {
              e.val() < 0 && e.val(0);
            }),
              $("#medicineBrandId,#medicineCategoryId").select2({
                width: "100%"
              }),
              $("#medicineNameId").focus();
          }),
            listenSubmit("#createMedicine, #editMedicine", function () {
              $("#medicineSave").attr("disabled", !0);
            });
        },
        2252: () => {
          "use strict";
          listenClick(".editNoticeboardBtn", function (e) {
            if (!$(".ajaxCallIsRunning").val()) {
              ajaxCallInProgress();
              var t = $(e.currentTarget).attr("data-id");
              renderNoticeBoardDetailData(t);
            }
          }),
            (window.renderNoticeBoardDetailData = function (e) {
              $.ajax({
                url: $("#showNoticeBoardUrl").val() + "/" + e + "/edit",
                type: "GET",
                success: function (e) {
                  e.success &&
                    ($("#noticeBoardId").val(e.data.id),
                    $("#editNoticeBoardTitle").val(e.data.title),
                    $("#editNoticeBoardDescription").val(e.data.description),
                    $("#edit_notice_boards_modal").modal("show"),
                    ajaxCallCompleted());
                },
                error: function (e) {
                  manageAjaxErrors(e);
                }
              });
            }),
            listenSubmit("#editNoticeBoardForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editNoticeBoardSave");
              t.button("loading");
              var a = $("#noticeBoardId").val();
              $.ajax({
                url: $("#showNoticeBoardUrl").val() + "/" + a,
                type: "patch",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_notice_boards_modal").modal("hide"),
                    setTimeout(function () {
                      window.location.reload();
                    }, 3e3));
                },
                error: function (e) {
                  manageAjaxErrors(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            });
        },
        8180: () => {
          "use strict";
          listenSubmit("#addNoticeBoardForm", function (e) {
            e.preventDefault(),
              $("#noticeBoardSave").attr("disabled", !0),
              $.ajax({
                url: $("#indexNoticeBoardCreateUrl").val(),
                type: "POST",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#add_notice_boards_modal").modal("hide"),
                    livewire.emit("refresh"),
                    $("#noticeBoardSave").attr("disabled", !1));
                },
                error: function (e) {
                  printErrorMessage("#noticeBoardErrorsBox", e),
                    $("#noticeBoardSave").attr("disabled", !1);
                }
              });
          }),
            listen("click", ".notice-edit-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#indexNoticeBoardUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      e.success &&
                        ($("#noticeBoardId").val(e.data.id),
                        $("#editNoticeBoardTitle").val(e.data.title),
                        $("#editNoticeBoardDescription").val(e.data.description),
                        $("#edit_notice_boards_modal").modal("show"),
                        ajaxCallCompleted());
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listen("click", ".notice-view-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t = e.currentTarget.dataset.id;
                $.ajax({
                  url: $("#indexNoticeBoardUrl").val() + "/" + t,
                  type: "GET",
                  success: function (e) {
                    e.success &&
                      ($("#showNoticeBoardTitle").html(""),
                      $("#showNoticeBoardDescription").html(""),
                      $("#showNoticeBoardTitle").append(e.data.title),
                      $("#showNoticeBoardDescription").append(e.data.description),
                      $("#show_notice_boards_modal")
                        .appendTo("body")
                        .modal("show"),
                      ajaxCallCompleted());
                  },
                  error: function (e) {
                    manageAjaxErrors(e);
                  }
                });
              }
            }),
            listenSubmit("#editNoticeBoardsForm", function (e) {
              e.preventDefault(), $("#noticeBoardSave").attr("disabled", !0);
              var t = $("#noticeBoardId").val();
              $.ajax({
                url: $("#indexNoticeBoardUrl").val() + "/" + t,
                type: "patch",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_notice_boards_modal").modal("hide"),
                    livewire.emit("refresh"),
                    $("#noticeBoardSave").attr("disabled", !1));
                },
                error: function (e) {
                  manageAjaxErrors(e), $("#noticeBoardSave").attr("disabled", !1);
                }
              });
            }),
            listenHiddenBsModal("#add_notice_boards_modal", function () {
              resetModalForm("#addNoticeBoardForm", "#noticeBoardErrorsBox"),
                $("#noticeBoardSave").attr("disabled", !1);
            }),
            listenHiddenBsModal("#edit_notice_boards_modal", function () {
              resetModalForm(
                "#editNoticeBoardsForm",
                "#editNoticeBoardErrorsBox"
              );
            });
        },
        3177: () => {
          listen("click", ".notice-board-delete-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#indexNoticeBoardUrl").val() + "/" + t,
              "",
              $("#noticeBoard").val()
            );
          });
        },
        1915: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#createNurseForm").length && !$("#editNurseForm").length)
              return;
            $("#nurseBloodGroup").select2({ width: "100%" }),
              $("#editNurseBloodGroup").select2({ width: "100%" }),
              $(".nurseBirthDate").flatpickr({
                format: "YYYY-MM-DD",
                useCurrent: !0,
                sideBySide: !0,
                maxDate: new Date(),
                locale: $(".userCurrentLanguage").val()
              }),
              $("#departmentId").select2({ width: "100%" }),
              $("#createNurseForm, #editNurseForm")
                .find("input:text:visible:first")
                .focus();
          }),
            listenSubmit("#createNurseForm, #editNurseForm", function () {
              if ("" !== $(".error-msg").text())
                return $(".phoneNumber").focus(), !1;
            }),
            listenChange(".nurseProfileImage", function () {
              var e = isValidOpdTimelineDocument($(this), "#nurseErrorsBox");
              isEmpty(e) || 0 == e
                ? ($(this).val(""),
                  $("#nurseErrorsBox").removeClass("d-none hide"),
                  $("#nurseErrorsBox")
                    .text("The image must be a file of type: jpg, jpeg, png.")
                    .show(),
                  $("[id=nurseErrorsBox]").focus(),
                  $("html, body").animate({ scrollTop: "0" }, 500),
                  $(".alert").delay(5e3).slideUp(300))
                : ($(".alert").html("").hide(),
                  displayDocument(this, ".nursePreviewImage", e));
            }),
            listenChange(".nurseProfileImage", function () {
              var e = isValidOpdTimelineDocument($(this), "#editNurseErrorsBox");
              isEmpty(e) || 0 == e
                ? ($(this).val(""),
                  $("#editNurseErrorsBox").removeClass("d-none hide"),
                  $("#editNurseErrorsBox")
                    .text("The image must be a file of type: jpg, jpeg, png.")
                    .show(),
                  $("[id=editNurseErrorsBox]").focus(),
                  $("html, body").animate({ scrollTop: "0" }, 500),
                  $(".alert").delay(5e3).slideUp(300))
                : ($(".alert").html("").hide(),
                  displayDocument(this, ".nursePreviewImage", e));
            });
        },
        9916: () => {
          listen("click", ".deleteNurseBtn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem($("#nurseURL").val() + "/" + t, "", $("#Nurse").val());
          }),
            listenChange(".nurseStatus", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              updateNurseStatus(t);
            }),
            listen("click", "#nurseResetFilter", function () {
              $("#nurse_filter_status").val(0).trigger("change"),
                hideDropdownManually($("#nurseFilterBtn"), $(".dropdown-menu"));
            }),
            listenChange("#nurse_filter_status", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            }),
            (window.updateNurseStatus = function (e) {
              $.ajax({
                url: $("#nurseURL").val() + "/" + +e + "/active-deactive",
                method: "post",
                cache: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message), livewire.emit("refresh"));
                }
              });
            });
        },
        877: () => {},
        6544: (e, t, a) => {
          "use strict";
          var n = a(381),
            i = a.n(n);
          document.addEventListener("turbo:load", function () {
            if (
              !$("#opdDiagnosisReportDate").length &&
              !$("#editOpdDiagnosisReportDate").length
            )
              return;
            $("#opdDiagnosisReportDate, #editOpdDiagnosisReportDate").flatpickr({
              enableTime: !0,
              defaultDate: new Date(),
              dateFormat: "Y-m-d H:i",
              useCurrent: !0,
              sideBySide: !0,
              minDate: i()($("#showOpdAppointmentDate").val()).format(
                "YYYY-MM-DD"
              ),
              locale: $(".userCurrentLanguage").val(),
              widgetPositioning: { horizontal: "left", vertical: "bottom" }
            });
          }),
            listenClick(".deleteOpdDiagnosisBtn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#showOpdDiagnosisUrl").val() + "/" + t,
                null,
                $("#opdDiagnosisDeleteBtn").val()
              );
            }),
            listenSubmit("#addOpdDiagnosisForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#btnOpdDiagnosisSave");
              t.button("loading");
              var a = {
                formSelector: $(this),
                url: $("#showOpdDiagnosisCreateUrl").val(),
                type: "POST"
              };
              newRecord(a, t, "#add_opd_diagnoses_modal"), t.attr("disabled", !1);
            }),
            listenClick(".editOpdDiagnosisBtn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t = $(e.currentTarget).attr("data-id");
                renderOpdDiagnosisData(t);
              }
            }),
            (window.renderOpdDiagnosisData = function (e) {
              $.ajax({
                url: $("#showOpdDiagnosisUrl").val() + "/" + e + "/edit",
                type: "GET",
                success: function (e) {
                  if (e.success) {
                    var t = e.data.opd_diagnosis_document_url
                      .split(".")
                      .pop()
                      .toLowerCase();
                    "pdf" == t
                      ? $("#editOpdDiagnosisPreviewImage").css(
                          "background-image",
                          'url("' + $(".pdfDocumentImageUrl").val() + '")'
                        )
                      : "docx" == t || "doc" == t
                      ? $("#editOpdDiagnosisPreviewImage").css(
                          "background-image",
                          'url("' + $(".docxDocumentImageUrl").val() + '")'
                        )
                      : "" != e.data.opd_diagnosis_document_url &&
                        $("#editOpdDiagnosisPreviewImage").css(
                          "background-image",
                          'url("' + e.data.opd_diagnosis_document_url + '")'
                        ),
                      $("#opdDiagnosisId").val(e.data.id),
                      $("#editOpdDiagnosisReportType").val(e.data.report_type),
                      document
                        .querySelector("#editOpdDiagnosisReportDate")
                        ._flatpickr.setDate(i()(e.data.report_date).format()),
                      $("#editOpdDiagnosisDescription").val(e.data.description),
                      "" != e.data.opd_diagnosis_document_url
                        ? ($("#opdDiagnosisDocumentUrl").show(),
                          $(".btn-view").show(),
                          $("#opdDiagnosisDocumentUrl").attr(
                            "href",
                            e.data.opd_diagnosis_document_url
                          ))
                        : ($("#opdDiagnosisDocumentUrl").hide(),
                          $(".btn-view").hide()),
                      $("#edit_opd_diagnoses_modal").modal("show"),
                      ajaxCallCompleted();
                  }
                },
                error: function (e) {
                  manageAjaxErrors(e);
                }
              });
            }),
            listenSubmit("#editOpdDiagnosisForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#btnEditOpdDiagnosisSave");
              t.button("loading");
              var a = $("#opdDiagnosisId").val(),
                n = $("#showOpdDiagnosisUrl").val() + "/" + a,
                i = {
                  formSelector: $(this),
                  url: n,
                  type: "POST",
                  tableSelector: null
                };
              editRecord(i, t, "#edit_opd_diagnoses_modal");
            }),
            listenHiddenBsModal("#add_opd_diagnoses_modal", function () {
              resetModalForm("#addOpdDiagnosisForm", "#opdDiagnosisErrorsBox"),
                $("#opdDiagnosisPreviewImage").attr(
                  "src",
                  $("#showOpdDefaultDocumentImageUrl").val()
                ),
                $("#opdDiagnosisPreviewImage").css(
                  "background-image",
                  'url("' + $("#showOpdDefaultDocumentImageUrl").val() + '")'
                );
            }),
            listenHiddenBsModal("#edit_opd_diagnoses_modal", function () {
              resetModalForm(
                "#editOpdDiagnosisForm",
                "#editOpdDiagnosisErrorsBox"
              ),
                $("#editOpdDiagnosisPreviewImage").attr(
                  "src",
                  $("#showOpdDefaultDocumentImageUrl").val()
                ),
                $("#editOpdDiagnosisPreviewImage").css(
                  "background-image",
                  'url("' + $("#showOpdDefaultDocumentImageUrl").val() + '")'
                );
            }),
            listenChange("#opdDiagnosisDocumentImage", function () {
              var e = isValidDocumentOpdDiagnosis(
                $(this),
                "#opdDiagnosisErrorsBox"
              );
              isEmpty(e) ||
                0 == e ||
                ($("#opdDiagnosisErrorsBox").html("").hide(),
                displayDocument(this, "#opdDiagnosisPreviewImage", e));
            }),
            listenChange("#editOpdDiagnosisDocumentImage", function () {
              var e = isValidDocumentOpdDiagnosis(
                $(this),
                "#editOpdDiagnosisErrorsBox"
              );
              isEmpty(e) ||
                0 == e ||
                ($("#editOpdDiagnosisErrorsBox").html("").hide(),
                displayDocument(this, "#editOpdDiagnosisPreviewImage", e));
            }),
            (window.isValidDocumentOpdDiagnosis = function (e, t) {
              var a = $(e).val().split(".").pop().toLowerCase();
              return -1 ==
                $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"])
                ? ($(e).val(""),
                  $(t)
                    .html(
                      "The document must be a file of type: jpeg, jpg, png, pdf, doc, docx."
                    )
                    .show(),
                  !1)
                : a;
            }),
            listenClick(".removeOpdDiagnosisImage", function () {
              defaultImagePreview("#opdDiagnosisPreviewImage");
            }),
            listenClick(".removeOpdDiagnosisImageEdit", function () {
              defaultImagePreview("#editOpdDiagnosisPreviewImage");
            });
        },
        6789: () => {
          document.addEventListener("turbo:load", function () {
            if (
              !$("#createOpdPatientForm").length &&
              !$("#editOpdPatientDepartmentForm").length
            )
              return;
            $(
              "#opdPatientId, #opdDoctorId,#opdPaymentMode,#editOpdPatientId, #editOpdDoctorId,#editOpdPaymentMode"
            ).select2({ width: "100%" }),
              $("#opdCaseId ,#editOpdCaseId").select2({
                width: "100%",
                placeholder: "Choose Case"
              });
            var e = $("#opdAppointmentDate,#editOpdAppointmentDate ").flatpickr({
              enableTime: !0,
              dateFormat: "Y-m-d H:i",
              locale: $(".userCurrentLanguage").val()
            });
            $(".lastVisit").val() &&
              ($("#opdPatientId,#editOpdPatientId")
                .val($(".lastVisit").val())
                .trigger("change"),
              $("#opdPatientId,#editOpdPatientId").attr("disabled", !0));
            $(".isEdit").val()
              ? ($("#opdPatientId,#editOpdPatientId").attr("disabled", !0),
                $("#opdPatientId,#editOpdPatientId").trigger("change"),
                e.set(
                  "minDate",
                  $("#opdAppointmentDate,#editOpdAppointmentDate").val()
                ))
              : (e.setDate(new Date()), e.set("minDate", new Date()));
          }),
            listenSubmit(
              "#createOpdPatientForm, #editOpdPatientDepartmentForm",
              function () {
                $("#opdPatientId,#editOpdPatientId").attr("disabled", !1),
                  $("#btnOpdSave,#btnEditOpdSave").attr("disabled", !0);
              }
            ),
            listenChange("#opdPatientId,#editOpdPatientId", function () {
              "" !== $(this).val() &&
                $.ajax({
                  url: $(".opdPatientCasesUrl").val(),
                  type: "get",
                  dataType: "json",
                  data: { id: $(this).val() },
                  success: function (e) {
                    0 !== e.data.length
                      ? ($("#opdCaseId,#editOpdCaseId").empty(),
                        $("#opdCaseId,#editOpdCaseId").removeAttr("disabled"),
                        $.each(e.data, function (e, t) {
                          $(".patientCaseId").val() == t
                            ? $("#editOpdCaseId").append(
                                $("<option></option>")
                                  .attr("value", e)
                                  .attr("selected", !0)
                                  .text(t)
                              )
                            : $("#opdCaseId,#editOpdCaseId").append(
                                $("<option></option>").attr("value", e).text(t)
                              );
                        }))
                      : $("#opdCaseId,#editOpdCaseId").prop("disabled", !0);
                  }
                }),
                $("#opdCaseId,#editOpdCaseId").empty(),
                $("#opdCaseId,#editOpdCaseId").prop("disabled", !0),
                $("#opdCaseId ,#editOpdCaseId").select2({
                  width: "100%",
                  placeholder: "Choose Case"
                });
            }),
            listenChange("#opdDoctorId,#editOpdDoctorId", function () {
              "" !== $(this).val() &&
                $.ajax({
                  url: $(".doctorOpdChargeUrl").val(),
                  type: "get",
                  dataType: "json",
                  data: { id: $(this).val() },
                  success: function (e) {
                  console.log(e);
                //   if($('#is_old_patient_checkbox')[0].checked){
                //     0 !== e.data.length
                //       ? $("#opdStandardCharge,#editOpdStandardCharge").val(
                //           e.data[0].followup_charge
                //         );
                //         $('#doctor_id_for_schedule').val(

                //         )
                //       : $("#opdStandardCharge,#editOpdStandardCharge").val(0);
                // addAmount();
                //   }else {
                //     0 !== e.data.length
                //       ? $("#opdStandardCharge,#editOpdStandardCharge").val(
                //           e.data[0].standard_charge
                //         )
                //       : $("#opdStandardCharge,#editOpdStandardCharge").val(0);
                // addAmount();
                //   }
                  if ($('#is_old_patient_checkbox')[0].checked) {
                    if (e.data.length !== 0) {
                        $("#opdStandardCharge, #editOpdStandardCharge").val(e.data[0].followup_charge);
                        $("#doctor_id_for_schedule").val(e.data[0].doctor.id);
                    } else {
                        $("#opdStandardCharge, #editOpdStandardCharge").val(0);
                    }
                addAmount();

                } else {
                    if (e.data.length !== 0) {
                        $("#opdStandardCharge, #editOpdStandardCharge").val(e.data[0].standard_charge);
                        $("#doctor_id_for_schedule").val(e.data[0].doctor.id);
                    } else {
                        $("#opdStandardCharge, #editOpdStandardCharge").val(0);
                    }
                addAmount();

                }
                    
                  }
                });

            });
        },
        566: () => {
          listen("click", ".deleteOpdPatientBtn", function (e) {
            var t = $(".deleteOpdPatientBtn").attr("data-id");
            deleteItem(
              $("#indexOpdPatientUrl").val() + "/" + t,
              null,
              $("#Receptionist").val()
            );
          });
        },
        8681: () => {
          listen("click", ".delete-visit-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#showOpdPatientUrl").val() + "/" + t,
              "",
              $("#opdPatients").val()
            );
          });
        },
        3592: () => {},
        3445: () => {},
        7465: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#showOpdListPatientDepartmentId").length) return;
            (e = $("#showOpdListPatientDepartmentId").val()),
              $.ajax({
                url: $("#showOpdListTimelinesUrl").val(),
                type: "get",
                data: { id: e },
                success: function (e) {
                  $("#opdTimelines").html(e);
                }
              });
            var e;
          });
        },
        794: () => {},
        766: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#OPDtab").length) return;
            var e = window.location.hash;
            $('#OPDtab a[href="' + e + '"]').tab("show");
          }),
            listenClick("#OPDtab a", function (e) {
              e.preventDefault(), $(this).tab("show");
            }),
            $("ul.nav-tabs > li > a").on("shown.bs.tab", function (e) {
              var t = $(e.target).attr("href").substr(1);
              window.location.hash = t;
            });
        },
        6315: () => {
          function e(e) {
            $.ajax({
              url: $("#showOpdTimelinesUrl").val(),
              type: "get",
              data: { id: e },
              success: function (e) {
                $("#opdPatientTimelines").html(e);
              }
            });
          }
          document.addEventListener("turbo:load", function () {
            if (
              !$("#opdTimelineDate").length &&
              !$("#editOpdTimelineDate").length
            )
              return;
            e($("#opdPatientDepartmentId").val()),
              $("#opdTimelineDate, #editOPdTimelineDate").flatpickr({
                format: "YYYY-MM-DD",
                useCurrent: !0,
                sideBySide: !0,
                locale: $(".userCurrentLanguage").val(),
                minDate: moment($("#showOpdAppointmentDate").val()).format(
                  "YYYY-MM-DD"
                )
              });
          }),
            listenSubmit("#addOpdTimelineNewForm", function (t) {
              t.preventDefault();
              var a = jQuery(this).find("#btnOpdTimelineSave");
              a.button("loading");
              var n = {
                formSelector: $(this),
                url: $("#showOpdTimelineCreateUrl").val(),
                type: "POST",
                tableSelector: "#tbl"
              };
              newRecord(n, a, "#addOpdTimelineModal"),
                a.attr("disabled", !1),
                $("#addOpdTimelineNewForm")[0].reset(),
                setTimeout(function () {
                  e($("#opdPatientDepartmentId").val());
                }, 500);
            }),
            listenClick(".edit-OpdTimeline-btn", function () {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var e = $(this).data("timeline-id");
                renderOpdTimelineData(e);
              }
            }),
            (window.renderOpdTimelineData = function (e) {
              $.ajax({
                url: $("#showOpdTimelinesUrl").val() + "/" + e + "/edit",
                type: "GET",
                success: function (e) {
                  if (e.success) {
                    if ("" != e.data.opd_timeline_document_url) {
                      var t = e.data.opd_timeline_document_url
                        .split(".")
                        .pop()
                        .toLowerCase();
                      "pdf" == t
                        ? $("#editOpdPreviewTimelineImage").css(
                            "background-image",
                            'url("' + $(".pdfDocumentImageUrl").val() + '")'
                          )
                        : "docx" == t || "doc" == t
                        ? $("#editOpdPreviewTimelineImage").css(
                            "background-image",
                            'url("' + $(".docxDocumentImageUrl").val() + '")'
                          )
                        : $("#editOpdPreviewTimelineImage").css(
                            "background-image",
                            'url("' + e.data.opd_timeline_document_url + '")'
                          ),
                        $("#editOpdTimeDocumentUrl").show(),
                        $(".btn-view").show();
                    } else
                      $("#editOpdTimeDocumentUrl").hide(),
                        $(".btn-view").hide(),
                        $("#editOpdPreviewTimelineImage").css(
                          "background-image",
                          'url("' +
                            $("#showOpdDefaultDocumentImageUrl").val() +
                            '")'
                        );
                    $("#opdTimelineId").val(e.data.id),
                      $("#editOPdTimelineTitle").val(e.data.title),
                      document
                        .querySelector("#editOPdTimelineDate")
                        ._flatpickr.setDate(moment(e.data.date).format()),
                      $("#editOpdTimelineDescription").val(e.data.description),
                      $("#editOpdTimeDocumentUrl").attr(
                        "href",
                        e.data.opd_timeline_document_url
                      ),
                      1 == e.data.visible_to_person
                        ? $("#editOpdTimelineVisibleToPerson").prop("checked", !0)
                        : $("#editOpdTimelineVisibleToPerson").prop(
                            "checked",
                            !1
                          ),
                      $("#editOpdTimelineModal").modal("show"),
                      ajaxCallCompleted();
                  }
                },
                error: function (e) {
                  manageAjaxErrors(e);
                }
              });
            }),
            listenSubmit("#editOpdTimelineForm", function (t) {
              t.preventDefault();
              var a = jQuery(this).find("#btnOpdTimelineEdit");
              a.button("loading");
              var n = $("#opdTimelineId").val(),
                i = $("#showOpdTimelinesUrl").val() + "/" + n,
                r = {
                  formSelector: $(this),
                  url: i,
                  type: "POST",
                  tableSelector: "#tbl"
                };
              editRecord(r, a, "#editOpdTimelineModal"),
                setTimeout(function () {
                  e($("#opdPatientDepartmentId").val());
                }, 500);
            }),
            listenClick(".delete-OpdTimeline-btn", function () {
              var t = $(this).data("timeline-id");
              swal({
                title: $(".deleteVariable").val(),
                text: $(".confirmVariable").val() + $("#opdTimeline").val() + "?",
                type: "warning",
                icon: "warning",
                showCancelButton: !0,
                closeOnConfirm: !1,
                confirmButtonColor: "#50cd89",
                showLoaderOnConfirm: !0,
                buttons: { confirm: "Yes", cancel: "No" }
              }).then(function (a) {
                a &&
                  $.ajax({
                    url: $("#showOpdTimelinesUrl").val() + "/" + t,
                    type: "DELETE",
                    dataType: "json",
                    success: function (t) {
                      t.success &&
                        setTimeout(function () {
                          e($("#opdPatientDepartmentId").val());
                        }, 500),
                        swal({
                          title: $(".deletedVariable").val(),
                          text:
                            $("#opdTimeline").val() +
                            $(".hasBeenDeletedVariable").val(),
                          icon: "success",
                          confirmButtonColor: "#50cd89",
                          timer: 2e3
                        }),
                        livewire.emit("refresh");
                    }
                  });
              });
            }),
            listenHiddenBsModal("#addOpdTimelineModal", function () {
              resetModalForm(
                "#addOpdTimelineNewForm",
                "#timeLinevalidationErrorsBox"
              ),
                $("#opdPreviewTimelineImage").attr(
                  "src",
                  $(".defaultDocumentImageUrl").val()
                ),
                $("#opdPreviewTimelineImage").css(
                  "background-image",
                  'url("' + $(".defaultDocumentImageUrl").val() + '")'
                );
            }),
            listenHiddenBsModal("#editOpdTimelineModal", function () {
              resetModalForm(
                "#editOpdTimelineForm",
                "#editTimelineValidationErrorsBox"
              );
            }),
            (window.isValidOpdTimelineDocument = function (e, t) {
              var a = $(e).val().split(".").pop().toLowerCase();
              return -1 ==
                $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"])
                ? ($(e).val(""),
                  $(t)
                    .html(
                      "The document must be a file of type: jpeg, jpg, png, pdf, doc, docx."
                    )
                    .show(),
                  !1)
                : a;
            }),
            listenClick(".removeOpdTimelineImage", function () {
              defaultImagePreview("#opdPreviewTimelineImage");
            }),
            listenClick(".removeOpdTimelineImageEdit", function () {
              defaultImagePreview("#editOpdPreviewTimelineImage");
            });
        },
        8284: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#editOperationReportForm").length) return;
            $("#editOperationDoctorId, #editOperationCaseId").select2({
              width: "100%"
            }),
              $("#editOperationDate").flatpickr({
                format: "YYYY-MM-DD HH:mm:ss",
                useCurrent: !0,
                sideBySide: !0,
                locale: $(".userCurrentLanguage").val()
              });
          }),
            listenClick(".editOperationReportBtn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#indexOperationReportUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      e.success &&
                        ($("#operationReportId").val(e.data.id),
                        $("#editOperationCaseId")
                          .val(e.data.case_id)
                          .trigger("change.select2"),
                        $("#editOperationDoctorId")
                          .val(e.data.doctor_id)
                          .trigger("change.select2"),
                        $("#editOperationDescription").val(e.data.description),
                        $("#editOperationDate").val(
                          format(e.data.date, "YYYY-MM-DD HH:mm:ss")
                        ),
                        $("#edit_operations_reports_modal").modal("show"),
                        ajaxCallCompleted());
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#editOperationReportForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editOperationReportSave");
              t.button("loading");
              var a = $("#operationReportId").val();
              $.ajax({
                url: $("#indexOperationReportUrl").val() + "/" + a,
                type: "patch",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_operations_reports_modal").modal("hide"),
                    setTimeout(function () {
                      window.location.reload();
                    }, 3e3));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            });
        },
        9920: () => {
          document.addEventListener("turbo:load", function () {
            if (
              !$("#addOperationReportForm").length &&
              !$("#editOperationReportForm").length
            )
              return;
            $("#operationDoctorId, #operationCaseId").select2({
              width: "100%",
              dropdownParent: $("#add_operations_reports_modal")
            }),
              $("#editOperationDoctorId, #editOperationCaseId").select2({
                width: "100%",
                dropdownParent: $("#edit_operations_reports_modal")
              }),
              $("#operationDate, #editOperationDate").flatpickr({
                dateFormat: "Y-m-d h:i K",
                useCurrent: !0,
                sideBySide: !0,
                enableTime: !0,
                locale: $(".userCurrentLanguage").val()
              });
          }),
            listenSubmit("#addOperationReportForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#operationReportSave");
              t.button("loading"),
                $.ajax({
                  url: $("#operationReportCreateUrl").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_operations_reports_modal").modal("hide"),
                      Livewire.emit("refresh"));
                  },
                  error: function (e) {
                    printErrorMessage("#operationErrorsBox", e);
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listenClick(".editOperationReportsBtn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#operationReportUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      e.success &&
                        ($("#operationReportId").val(e.data.id),
                        $("#editOperationCaseId")
                          .val(e.data.case_id)
                          .trigger("change.select2"),
                        $("#editOperationDoctorId")
                          .val(e.data.doctor_id)
                          .trigger("change.select2"),
                        $("#editOperationDescription").val(e.data.description),
                        document
                          .querySelector("#editOperationDate")
                          ._flatpickr.setDate(moment(e.data.date).format()),
                        $("#edit_operations_reports_modal").modal("show"),
                        ajaxCallCompleted());
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#editOperationReportsForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editOperationSave");
              t.button("loading");
              var a = $("#operationReportId").val();
              $.ajax({
                url: $("#operationReportUrl").val() + "/" + a,
                type: "patch",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_operations_reports_modal").modal("hide"),
                    Livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_operations_reports_modal", function () {
              resetModalForm("#addOperationReportForm", "#OperationErrorsBox"),
                $("#operationCaseId, #operationDoctorId")
                  .val("")
                  .trigger("change.select2");
            }),
            listenHiddenBsModal("#edit_operations_reports_modal", function () {
              resetModalForm(
                "#editOperationReportsForm",
                "#editOperationErrorsBox"
              );
            });
        },
        8369: () => {
          listenClick(".deleteOperationReportsBtn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#operationReportUrl").val() + "/" + t,
              "",
              $("#operationReport").val()
            );
          });
        },
        7610: () => {
          document.addEventListener("turbo:load", function () {
            if (!$(".packageForm").length) return;
            $(".packageForm").find("input:text:visible:first").focus();
            var e = function (e) {
                return e.replace(/,/g, "");
              },
              n = function (e, t) {
                return e > 0 && t > 0 ? e * t : 0;
              };
            a(".serviceId"),
              (window.isNumberKey = function (e, t) {
                var a = e.which ? e.which : event.keyCode;
                return !(
                  (46 !== a || -1 !== $(t).val().indexOf(".")) &&
                  (a < 48 || a > 57)
                );
              }),
              listenKeyup(".packageQty", function () {
                var a = parseInt($(this).val()),
                  i = $(this).parent().siblings().find(".price").val();
                i = parseInt(e(i));
                var r = n(a, i);
                $(this)
                  .parent()
                  .siblings(".amount")
                  .text(addCommas(r.toString())),
                  t();
              }),
              listenKeyup(".price", function () {
                var a = $(this).val();
                a = parseInt(e(a));
                var i = parseInt($(this).parent().siblings().find(".qty").val()),
                  r = n(i, a);
                $(this)
                  .parent()
                  .siblings(".amount")
                  .text(addCommas(r.toString())),
                  t();
              }),
              listenKeyup("#packageDiscountId", function () {
                t();
              });
          }),
            (uniquePackageId = $(".packageUniqueId").val()),
            listenClick("#addPackageItem", function () {
              var t = {
                  services: JSON.parse($(".associateServices").val()),
                  uniqueId: uniquePackageId
                },
                n = prepareTemplateRender("#packageServiceTemplate", t);
              $(".package-service-item-container").append(n),
                a(".serviceId"),
                uniquePackageId++,
                e();
            }),
            listenClick(".delete-service-package-item", function () {
              $(this).parents("tr").remove(), e(), t();
            });
          var e = function () {
              var e = 1;
              if (
                ($(".package-service-item-container>tr").each(function () {
                  $(this).find(".item-number").text(e), e++;
                }),
                e - 1 == 0)
              ) {
                var t = {
                    services: JSON.parse($(".associateServices").val()),
                    uniqueId: uniquePackageId
                  },
                  n = prepareTemplateRender("#packageServiceTemplate", t);
                $(".package-service-item-container").append(n),
                  a(".serviceId"),
                  uniquePackageId++;
              }
            },
            t = function () {
              var e = 0,
                t = parseFloat(
                  "" !== $("#packageDiscountId").val()
                    ? $("#packageDiscountId").val()
                    : 0
                );
              $(".package-service-item-container>tr").each(function () {
                var t = $(this).find(".item-total").text();
                (t = removeCommas(t)),
                  (t = isEmpty($.trim(t)) ? 0 : parseInt(t)),
                  (e += t);
              }),
                (e = parseFloat(e)),
                (e -= (e * t) / 100),
                $("#packageTotal").text(
                  $(".currentCurrency").val() + addCommas(e.toFixed(2))
                ),
                $("#packageTotal_amount").val(e);
            },
            a = function (e) {
              $(e).select2({ placeholder: "Select Service", width: "100%" });
            };
          listenSubmit(".packageForm", function (e) {
            e.preventDefault(),
              $("#packageSaveBtn").attr("disabled", !0),
              jQuery(this).find("#packageSaveBtn").button("loading");
            var t = new FormData($(this)[0]);
            $.ajax({
              url: $(".packageSaveUrl").val(),
              type: "POST",
              dataType: "json",
              data: t,
              processData: !1,
              contentType: !1,
              success: function (e) {
                displaySuccessMessage(e.message),
                  (window.location.href = $(".packageUrl").val()),
                  $("#packageSaveBtn").attr("disabled", !1);
              },
              error: function (e) {
                printErrorMessage("#packageValidationErrorsBox", e),
                  $("#packageSaveBtn").attr("disabled", !1);
              }
            });
          });
        },
        2512: () => {
          "use strict";
          listenClick(".deletePackageBtn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#showPackageReportUrl").val() + "/" + t,
              "",
              $("#Packages").val()
            );
          });
        },
        2280: () => {
          "use strict";
          listenSubmit("#addPathologyCategoryForm", function (e) {
            e.preventDefault();
            var t = jQuery(this).find("#pathologyCategorySave");
            t.button("loading"),
              $.ajax({
                url: $("#createPathologyCategoryURL").val(),
                type: "POST",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#add_pathology_categories_modal").modal("hide"),
                    window.livewire.emit("refresh"));
                },
                error: function (e) {
                  printErrorMessage("#pCategoryErrorsBox", e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
          }),
            listenSubmit("#editPathologyCategoryForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editPathologyCategorySave");
              t.button("loading");
              var a = $("#pathologyCategoryId").val();
              $.ajax({
                url: $("#pathologyCategoryURL").val() + "/" + a,
                type: "patch",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_pathology_categories_modal").modal("hide"),
                    window.livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_pathology_categories_modal", function () {
              resetModalForm("#addPathologyCategoryForm", "#pCategoryErrorsBox");
            }),
            listenHiddenBsModal("#edit_pathology_categories_modal", function () {
              resetModalForm(
                "#editPathologyCategoryForm",
                "#editPCategoryErrorsBox"
              );
            }),
            (window.renderPathologyCategoriesData = function (e) {
              $.ajax({
                url: $("#pathologyCategoryURL").val() + "/" + e + "/edit",
                type: "GET",
                success: function (e) {
                  if (e.success) {
                    var t = e.data;
                    $("#pathologyCategoryId").val(t.id),
                      $("#editPathologyCategoryName").val(t.name),
                      $("#edit_pathology_categories_modal").modal("show"),
                      ajaxCallCompleted();
                  }
                },
                error: function (e) {
                  manageAjaxErrors(e);
                }
              });
            }),
            listenClick(".editPathologyCategoryBtn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t = $(e.currentTarget).attr("data-id");
                renderPathologyCategoriesData(t);
              }
            }),
            listenClick(".deletePathologyCategoryBtn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#pathologyCategoryURL").val() + "/" + t,
                "",
                $("#pathologyCategory").val()
              );
            });
        },
        7011: () => {
          document.addEventListener("turbo:load", function () {
            if (
              !$("#createPathologyTest").length &&
              !$("#editPathologyTest").length
            )
              return;
            $(".price-input").trigger("input"),
              $(".pathologyCategories,.pChargeCategories").select2({
                width: "100%"
              }),
              $("#createPathologyTest, #editPathologyTest")
                .find("input:text:visible:first")
                .focus();
          }),
            listenChange(".pChargeCategories", function (e) {
              var t,
                a = $(this).val();
              "" !== a
                ? ((t = a),
                  $.ajax({
                    url:
                      $(".pathologyTestActionURL").val() +
                      "/get-standard-charge/" +
                      t,
                    method: "get",
                    cache: !1,
                    success: function (e) {
                      "" !== e &&
                        ($(".pathologyStandardCharge").val(e.data),
                        $(".price-input").trigger("input"));
                    }
                  }))
                : $(".pathologyStandardCharge").val("");
            });
        },
        2745: () => {
          "use strict";
          listenClick(".deletePathologyTestBtn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#pathologyTestURL").val() + "/" + t,
              "",
              $("#pathologyTest").val()
            );
          }),
            listenClick(".showPathologyTestBtn", function (e) {
              e.preventDefault();
              var t = $(e.currentTarget).attr("data-id");
              renderPathologyTestData(t);
            }),
            (window.renderPathologyTestData = function (e) {
              $.ajax({
                url: $("#pathologyTestShowUrl").val() + "/" + e,
                type: "GET",
                success: function (e) {
                  e.success &&
                    ($("#showPathologyTestName").text(e.data.test_name),
                    $("#showPathologyTestShortName").text(e.data.short_name),
                    $("#showPathologyTestType").text(e.data.test_type),
                    $("#showPathologyCategories").text(
                      e.data.pathology_category_name
                    ),
                    $("#showPathologyTestUnit").text(e.data.unit),
                    $("#showPathologyTestSubcategory").text(e.data.subcategory),
                    $("#showPathologyTestMethod").text(e.data.method),
                    $("#showPathologyTestReportDays").text(e.data.report_days),
                    $("#showPathologyChargeCategories").text(
                      e.data.charge_category_name
                    ),
                    $("#showPTestStandardCharge").text(e.data.standard_charge),
                    moment.locale($("#pathologyTestLanguage").val()),
                    $("#showPathologyTestCreatedOn").text(
                      moment(e.data.created_at).fromNow()
                    ),
                    $("#showPathologyTestUpdatedOn").text(
                      moment(e.data.updated_at).fromNow()
                    ),
                    setValueOfEmptySpan(),
                    $("#showPathologyTest").appendTo("body").modal("show"));
                },
                error: function (e) {
                  displayErrorMessage(e.responseJSON.message);
                }
              });
            });
        },
        3906: () => {
          document.addEventListener("turbo:load", function () {
            if (
              !$("#createPatientAdmission").length &&
              !$("#editPatientAdmission").length
            )
              return;
            if (
              ($(
                "#admissionPatientId, #admissionDoctorId, #admissionPackageId, #admissionInsuranceId, #admissionBedId"
              ).select2({ width: "100%" }),
              (e = $("#admissionDate").flatpickr({
                dateFormat: "Y-m-d H:i",
                sideBySide: !0,
                enableTime: !0,
                locale: $(".userCurrentLanguage").val()
              })),
              $("#admissionPatientId").focus(),
              $(".isEdit").val())
            ) {
              setTimeout(function () {
                $("#admissionDate").trigger("dp.change");
              }, 300);
              var t = void 0,
                a = $("#admissionPatientBirthDate").val();
              $("#admissionDate").flatpickr({
                dateFormat: "Y-m-d H:i",
                sideBySide: !0,
                enableTime: !0,
                minDate: a,
                locale: $(".userCurrentLanguage").val(),
                onChange: function (e, a, n) {
                  var i = moment($("#admissionDate").val())
                    .add(1, "days")
                    .format();
                  void 0 !== t && t.set("minDate", i);
                }
              }),
                (t = $("#admissionDischargeDate").flatpickr({
                  dateFormat: "Y-m-d H:i",
                  sideBySide: !0,
                  minDate: n,
                  useCurrent: !1,
                  enableTime: !0,
                  locale: $(".userCurrentLanguage").val()
                }));
              var n = moment($("#admissionDate").val()).add(1, "days").format();
              t.set("minDate", n);
            }
          });
          var e = void 0;
          listenSubmit(
            "#createPatientAdmission, #editPatientAdmission",
            function () {
              if ("" !== $(".error-msg").text())
                return $(".phoneNumber").focus(), !1;
            }
          ),
            listenChange("#admissionPatientId", function (e) {
              var t = $(this).val();
              getPatientAdmissionDate(t);
            }),
            (window.getPatientAdmissionDate = function (t) {
              $.ajax({
                url: $("#admissionPatientBirthUrl").val() + "/" + t,
                method: "get",
                cache: !1,
                success: function (t) {
                  e.set("minDate", t.user.dob);
                }
              });
            });
        },
        5903: () => {
          listen("click", ".delete-patient-admission-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#indexPatientAdmissionsUrl").val() + "/" + t,
              "",
              $("#patientAdmission").val()
            );
          }),
            listenChange(".patientAdmissionStatus", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              updatePatientAdmissionStatus(t);
            }),
            listen("click", ".show-patient-admission-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              renderPatientAdmissionData(t);
            }),
            (window.renderPatientAdmissionData = function (e) {
              $.ajax({
                url: $("#patientAdmissionsShowModal").val() + "/" + e,
                type: "GET",
                success: function (e) {
                  if (e.success) {
                    $("#showAdmissionPatient_name").text(
                      e.data.patient.patient_user.full_name
                    ),
                      $("#showAdmissionDoctor_name").text(
                        e.data.doctor.doctor_user.full_name
                      ),
                      $("#showAdmission_id").text(e.data.patient_admission_id),
                      moment.locale($("#patientAdmissionDate").val()),
                      $("#showAdmission_date").text(
                        moment(e.data.admission_date).format("Do MMM, Y h:mm A")
                      ),
                      null == e.data.discharge_date
                        ? $("#showAdmissionDischarge_date").text("N/A")
                        : $("#showAdmissionDischarge_date").text(
                            moment(e.data.discharge_date).format(
                              "Do MMM, Y h:mm A"
                            )
                          ),
                      $("#showAdmissionPackage").text(
                        e.data.package ? e.data.package.name : "N/A"
                      ),
                      $("#showAdmissionInsurance").text(
                        e.data.insurance ? e.data.insurance.name : "N/A"
                      ),
                      $("#showAdmission_bed").text(
                        e.data.bed ? e.data.bed.name : "N/A"
                      ),
                      $("#showAdmissionPolicy_no").text(e.data.policy_no),
                      $("#showAdmissionAgent_name").text(e.data.agent_name),
                      $("#showAdmissionGuardian_name").text(e.data.guardian_name),
                      $("#showAdmissionGuardian_relation").text(
                        e.data.guardian_relation
                      ),
                      $("#showAdmissionGuardian_contact").text(
                        e.data.guardian_contact
                      ),
                      $("#showAdmissionGuardian_address").text(
                        e.data.guardian_address
                      ),
                      $("#showAdmissionPatient_status").empty();
                    var t = $("#patientAdmissionActive").val(),
                      a = $("#patientAdmissionDeActive").val();
                    1 == e.data.status
                      ? $("#showAdmissionPatient_status").append(
                          '<span class="badge bg-light-success">' + t + "</span>"
                        )
                      : $("#showAdmissionPatient_status").append(
                          '<span class="badge bg-light-danger">' + a + "</span>"
                        ),
                      $("#showAdmissionCreated_on").text(
                        moment(e.data.created_at).fromNow()
                      ),
                      $("#showAdmissionUpdated_on").text(
                        moment(e.data.updated_at).fromNow()
                      ),
                      setValueOfEmptySpan(),
                      $("#showPatientAdmission").appendTo("body").modal("show");
                  }
                },
                error: function (e) {
                  displayErrorMessage(e.responseJSON.message);
                }
              });
            }),
            listenChange("#patient_admission_filter_status", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val()),
                hideDropdownManually(
                  $("#patientAdmissionFilterBtn"),
                  $(".dropdown-menu")
                );
            }),
            listenClick("#admissionResetFilter", function () {
              $("#patient_admission_filter_status").val(0).trigger("change"),
                hideDropdownManually(
                  $("#patientAdmissionFilterBtn"),
                  $(".dropdown-menu")
                );
            }),
            (window.updatePatientAdmissionStatus = function (e) {
              $.ajax({
                url:
                  $("#indexPatientAdmissionsUrl").val() +
                  "/" +
                  +e +
                  "/active-deactive",
                method: "post",
                cache: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message), livewire.emit("refresh"));
                },
                error: function (e) {
                  displayErrorMessage(e.responseJSON.message);
                }
              });
            });
        },
        5321: () => {
          document.addEventListener("turbo:load", function () {
            if (
              !$("#createPatientCaseForm").length &&
              !$("#editPatientCaseForm").length
            )
              return;
            $("#casePatientId, #caseDoctorId").select2({ width: "100%" }),
              $("#caseDate").flatpickr({
                enableTime: !0,
                dateFormat: "Y-m-d H:i",
                locale: $(".userCurrentLanguage").val()
              }),
              $(".price-input").trigger("input");
          }),
            listenSubmit(
              "#createPatientCaseForm, #editPatientCaseForm",
              function () {
                if ("" !== $(".error-msg").text())
                  return $(".phoneNumber").focus(), !1;
              }
            );
        },
        7336: () => {
          "use strict";
          listenClick(".delete-patient-case-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#indexPatientCaseUrl").val() + "/" + t,
              "",
              Lang.get("messages.case.case")
            );
          }),
            listenClick("#caseResetFilter", function () {
              $("#caseHead").val(0).trigger("change"),
                hideDropdownManually($("#caseFilterBtn"), $(".dropdown-menu"));
            }),
            listenChange(".patientCaseStatus", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              caseActiveDeActiveStatus(t);
            }),
            (window.caseActiveDeActiveStatus = function (e) {
              $.ajax({
                url:
                  $("#indexPatientCaseUrl").val() + "/" + e + "/active-deactive",
                method: "post",
                cache: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message), Livewire.emit("refresh"));
                }
              });
            }),
            listenClick(".show-patient-case-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              renderPatientCaseData(t);
            }),
            (window.renderPatientCaseData = function (e) {
              $.ajax({
                url: $("#patientCaseShowModal").val() + "/" + e,
                type: "GET",
                success: function (e) {
                  if (e.success) {
                    console.log(e.data),
                      $("#case_id").text(e.data.case_id),
                      $("#patient_name").text(e.data.patient_name),
                      $("#patient_phone").text(e.data.phone),
                      $("#patient_doctor").text(e.data.doctor_name),
                      moment.locale($("#caseLanguage").val()),
                      $("#case_date").text(
                        moment(e.data.date).format("Do MMM, Y h:mm A")
                      ),
                      $("#case_fee").text(e.data.fee),
                      $("#description").text(e.data.description),
                      $("#patientStatus").empty();
                    var t = $("#patientCaseActive").val(),
                      a = $("#patientCaseDeActive").val();
                    1 == e.data.status
                      ? $("#patientStatus").append(
                          '<span class="badge bg-light-success">' + t + "</span>"
                        )
                      : $("#patientStatus").append(
                          '<span class="badge bg-light-danger">' + a + "</span>"
                        ),
                      $("#created_on").text(moment(e.data.created_at).fromNow()),
                      $("#updated_on").text(moment(e.data.updated_at).fromNow()),
                      setValueOfEmptySpan(),
                      $("#showPatientCase").appendTo("body").modal("show");
                  }
                },
                error: function (e) {
                  displayErrorMessage(e.responseJSON.message);
                }
              });
            }),
            listenChange("#caseHead", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            });
        },
        7495: () => {},
        9110: () => {
          function e() {
            var e = 1;
            $(".diagnosis-item-container>tr").each(function () {
              $(this).find(".item-number").text(e), e++;
            });
          }
          document.addEventListener("turbo:load", function () {
            if (
              !$("#diagnosisTestPatientId").length &&
              !$("#editDiagnosisTestPatientId").length
            )
              return;
            $(
              "#diagnosisTestPatientId,#diagnosisTestDoctorId,#diagnosisTestCategoryId"
            ).select2(),
              $(
                "#editDiagnosisTestPatientId,#editDiagnosisTestDoctorId,#editDiagnosisTestCategoryId"
              ).select2();
          }),
            listenClick(
              "#addDiagnosisTestItem,#addEditDiagnosisTestItem",
              function () {
                var t = $(".uniqueId").val(),
                  a = prepareTemplateRender("#patientDiagnosisTestTemplate", {
                    uniqueId: t
                  });
                $(".diagnosis-item-container").append(a), t++, e();
              }
            ),
            listenClick(".delete-diagnosis", function () {
              $(this).parents("tr").remove(), e();
            }),
            listenSubmit(".patientDiagnosisTestForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find(".saveBtn");
              t.attr("disabled", !0);
              var a = new FormData($(this)[0]);
              $.ajax({
                url: $(".patientDiagnosisTestSaveUrl").val(),
                type: "POST",
                dataType: "json",
                data: a,
                processData: !1,
                contentType: !1,
                success: function (e) {
                  displaySuccessMessage(e.message),
                    (window.location.href = $(".patientDiagnosisTest").val()),
                    t.attr("disabled", !1);
                },
                error: function (e) {
                  printErrorMessage("#diagnosisTestErrorsBox", e),
                    t.attr("disabled", !1);
                }
              });
            });
        },
        8343: () => {
          listenClick(".patient-diagnosys-test-delete-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#patientDiagnosisTestUrl").val() + "/" + t,
              "",
              $("#patientDiagnosisTest").val()
            );
          });
        },
        1632: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#indexPatientPrescriptionId").length) return;
            $("#patient_id,#filter_status").select2({ width: "100%" });
          });
        },
        6535: () => {
          "use strict";
          listenChange("#patients_prescription_filter_status", function () {
            window.livewire.emit("changeFilter", "statusFilter", $(this).val());
          }),
            listenClick("#patientPrescriptionResetFilter", function () {
              $("#patients_prescription_filter_status").val(2).trigger("change"),
                hideDropdownManually(
                  $("#patientsPrescriptionFilterBtn"),
                  $(".dropdown-menu")
                );
            });
        },
        7138: () => {
          function e(e, t) {
            var a = $(e).val().split(".").pop().toLowerCase();
            return (
              -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
            );
          }
          document.addEventListener("turbo:load", function () {
            if (!$("#createPatientForm").length && !$("#editPatientForm").length)
              return;
            $(".patientBirthDate").flatpickr({
              maxDate: new Date(),
              locale: $(".userCurrentLanguage").val()
            });
          }),
            listenKeyup(".patientFacebookUrl", function () {
              this.value = this.value.toLowerCase();
            }),
            listenKeyup(".patientTwitterUrl", function () {
              this.value = this.value.toLowerCase();
            }),
            listenKeyup(".patientInstagramUrl", function () {
              this.value = this.value.toLowerCase();
            }),
            listenKeyup(".patientLinkedInUrl", function () {
              this.value = this.value.toLowerCase();
            }),
            listenSubmit("#createPatientForm, #editPatientForm", function () {
              if ("" !== $(".error-msg").text())
                return $(".phoneNumber").focus(), !1;
              var e = $(".patientFacebookUrl").val(),
                t = $(".patientTwitterUrl").val(),
                a = $(".patientInstagramUrl").val(),
                n = $(".patientLinkedInUrl").val(),
                i = new RegExp(
                  /^(https?:\/\/)?((m{1}\.)?)?((w{2,3}\.)?)facebook.[a-z]{2,3}\/?.*/i
                ),
                r = new RegExp(
                  /^(https?:\/\/)?((m{1}\.)?)?((w{2,3}\.)?)twitter\.[a-z]{2,3}\/?.*/i
                ),
                s = new RegExp(
                  /^(https?:\/\/)?((w{2,3}\.)?)instagram.[a-z]{2,3}\/?.*/i
                ),
                o = new RegExp(
                  /^(https?:\/\/)?((w{2,3}\.)?)linkedin\.[a-z]{2,3}\/?.*/i
                );
              return "" != e && !e.match(i)
                ? (displayErrorMessage("Please enter a valid Facebook URL"), !1)
                : "" != t && !t.match(r)
                ? (displayErrorMessage("Please enter a valid Twitter URL"), !1)
                : "" != a && !a.match(s)
                ? (displayErrorMessage("Please enter a valid Instagram URL"), !1)
                : "" == n || !!n.match(o)
                ? void 0
                : (displayErrorMessage("Please enter a valid Linkedin URL"), !1);
            }),
            $("#createPatientForm, #editPatientForm")
              .find("input:text:visible:first")
              .focus(),
            listenClick(".remove-patient-image", function () {
              defaultImagePreview(".previewImage", 1);
            }),
            listenChange(".patientProfileImage", function () {
              var t = e($(this), "#patientErrorBox");
              console.log(t),
                isEmpty(t) || 0 == t
                  ? ($(this).val(""),
                    $("#patientErrorBox").removeClass("d-none hide"),
                    $("#patientErrorBox")
                      .text("The image must be a file of type: jpg, jpeg, png.")
                      .show(),
                    $("[id=patientErrorBox]").focus(),
                    $("html, body").animate({ scrollTop: "0" }, 500),
                    $(".alert").delay(5e3).slideUp(300))
                  : ($("#patientErrorBox").html("").hide(),
                    displayDocument(this, "#patientErrorBox", t));
            }),
            listenChange(".editPatientImage", function () {
              var t = e($(this), "#editPatientErrorsBox");
              console.log(t),
                isEmpty(t) || 0 == t
                  ? ($(this).val(""),
                    $("#editPatientErrorsBox").removeClass("d-none hide"),
                    $("#editPatientErrorsBox")
                      .text("The image must be a file of type: jpg, jpeg, png.")
                      .show(),
                    $("[id=editPatientErrorsBox]").focus(),
                    $("html, body").animate({ scrollTop: "0" }, 500),
                    $(".alert").delay(5e3).slideUp(300))
                  : ($("#editPatientErrorsBox").html("").hide(),
                    displayDocument(this, "#patientErrorBox", t));
            });
        },
        6117: () => {
          listen("click", ".delete-patient-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#indexPatientUrl").val() + "/" + t,
              "",
              $("#Patients").val()
            );
          }),
            listenChange(".patientStatus", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              updatePatientStatus(t);
            }),
            (window.updatePatientStatus = function (e) {
              $.ajax({
                url: $("#indexPatientUrl").val() + "/" + +e + "/active-deactive",
                method: "post",
                cache: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message), livewire.emit("refresh"));
                }
              });
            }),
            listenChange("#patient_filter_status", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            }),
            listenClick("#patientResetFilter", function () {
              $("#patient_filter_status").val(0).trigger("change"),
                hideDropdownManually($("#patientFilterBtn"), $(".dropdown-menu"));
            });
        },
        364: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#showPatientUrl").length) return;
            $("#editPatientPaymentDate").flatpickr({
              dateFormat: "Y-m-d",
              locale: $(".userCurrentLanguage").val()
            }),
              $("#editAdvancedPaymentModal").on("shown.bs.modal", function () {
                $("#editPatientId:first").focus();
              }),
              $("#editVaccinationDoesGivenDate").flatpickr({
                enableTime: !0,
                defaultDate: new Date(),
                locale: $(".userCurrentLanguage").val(),
                dateFormat: "Y-m-d H:i"
              }),
              listenShownBsModal("#editVaccinationModal", function () {
                $(
                  "#editPatientVaccinationName, #editVaccinationPatientName"
                ).select2({
                  width: "100%",
                  dropdownParent: $("#editVaccinationModal")
                });
              }),
              (function () {
                if (!$("#showPatientUrl").length) return;
                listen("click", ".layout-delete-btn", function (e) {
                  $(this);
                  var t = $(e.currentTarget).attr("data-id"),
                    a = $(this).data("url"),
                    n = $(this).data("message");
                  deleteItem(a + "/" + t, "", n);
                });
              })();
          }),
            listen("click", ".edit-advancedPayment-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t = $(e.currentTarget).attr("data-id");
                renderPatientListingData(t);
              }
            }),
            (window.renderPatientListingData = function (e) {
              $.ajax({
                url:
                  $("#showPatientAdvancedPaymentUrl").val() + "/" + e + "/edit",
                type: "GET",
                success: function (e) {
                  e.success &&
                    ($("#patientAdvancePaymentId").val(e.data.id),
                    $("#editPatientPaymentId")
                      .val(e.data.patient_id)
                      .trigger("change.select2"),
                    $("#editPatientPaymentReceiptNo").val(e.data.receipt_no),
                    $("#editPatientPaymentAmount").val(e.data.amount),
                    $(".price-input").trigger("input"),
                    document
                      .querySelector("#editPatientPaymentDate")
                      ._flatpickr.setDate(moment(e.data.date).format()),
                    $("#editAdvancedPaymentModal").modal("show"),
                    ajaxCallCompleted());
                },
                error: function (e) {
                  manageAjaxErrors(e);
                }
              });
            }),
            listenSubmit("#editAdvancedPaymentForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editPatientPaymentSave");
              t.button("loading");
              var a = $("#patientAdvancePaymentId").val();
              $.ajax({
                url: $("#showPatientAdvancedPaymentUrl").val() + "/" + a,
                type: "patch",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#editAdvancedPaymentModal").modal("hide"),
                    location.reload());
                },
                error: function (e) {
                  manageAjaxErrors(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#editAdvancedPaymentModal", function () {
              resetModalForm(
                "#editAdvancedPaymentForm",
                "#editPatientPaymentErrorsBox"
              );
            }),
            listen("click", ".edit-vaccination-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t = $(e.currentTarget).attr("data-id");
                renderVaccinationData(t);
              }
            }),
            (window.renderVaccinationData = function (e) {
              $.ajax({
                url: $("#showVaccinatedPatientUrl").val() + "/" + e + "/edit",
                type: "GET",
                success: function (e) {
                  if (e.success) {
                    var t = e.data;
                    $("#vaccinatedPatientId").val(t.id),
                      $("#editVaccinationPatientName")
                        .val(t.patient_id)
                        .trigger("change.select2"),
                      $("#editPatientVaccinationName")
                        .val(t.vaccination_id)
                        .trigger("change.select2"),
                      $("#editVaccinationSerialNo").val(
                        t.vaccination_serial_number
                      ),
                      $("#editVaccinationDoseNumber").val(t.dose_number),
                      document
                        .querySelector("#editVaccinationDoesGivenDate")
                        ._flatpickr.setDate(moment(t.dose_given_date).format()),
                      $("#editVaccinationDescription").val(t.description),
                      $("#editVaccinationModal").modal("show"),
                      ajaxCallCompleted();
                  }
                },
                error: function (e) {
                  manageAjaxErrors(e);
                }
              });
            }),
            listenSubmit("#editVaccinationForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editVaccinationSave");
              t.button("loading");
              var a = $("#vaccinatedPatientId").val();
              $.ajax({
                url: $("#showVaccinatedPatientUrl").val() + "/" + a + "/update",
                type: "post",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#editVaccinationModal").modal("hide"),
                    location.reload());
                },
                error: function (e) {
                  manageAjaxErrors(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#editVaccinationModal", function () {
              resetModalForm(
                "#editVaccinationForm",
                "#editPatientVaccinationErrorsBox1"
              );
            });
        },
        2899: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#filterPaymentAccount").length) return;
            $("#filterPaymentAccount").select2({ width: "100%" });
          }),
            listenChange("#filterPaymentReport", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            }),
            listen("click", "#paymentReportResetFilter", function () {
              $("#filterPaymentReport").val(0).trigger("change"),
                hideDropdownManually(
                  $("#paymentReportFilterBtn"),
                  $(".dropdown-menu")
                );
            });
        },
        1667: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#paymentDate").length) return;
            $("#paymentDate").flatpickr({
              dateFormat: "Y-m-d",
              locale: $(".userCurrentLanguage").val()
            }),
              $(".price-input").trigger("input");
          });
        },
        2841: () => {
          listen("click", ".delete-payment-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#indexPaymentUrl").val() + "/" + t,
              "",
              $("#Payment").val()
            );
          }),
            listen("click", ".show-payment-btn", function (e) {
              e.preventDefault();
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url: $("#paymentShowModal").val() + "/" + t,
                  type: "GET",
                  success: function (e) {
                    e.success &&
                      ($("#payment_account").text(e.data.account.name),
                      $("#payment_date").text(
                        moment(e.data.payment_date).format("Do MMM, YYYY")
                      ),
                      $("#pay_to").text(e.data.pay_to),
                      $("#payment_amount").text(e.data.amount),
                      $("#created_on").text(moment(e.data.created_at).fromNow()),
                      $("#updated_on").text(moment(e.data.updated_at).fromNow()),
                      $("#description").text(e.data.description),
                      $("#description").css("overflow-wrap", "break-word"),
                      setValueOfEmptySpan(),
                      $("#showPayment").appendTo("body").modal("show"));
                  },
                  error: function (e) {
                    displayErrorMessage(e.responseJSON.message);
                  }
                });
            });
        },
        3314: () => {
          function e(e, t) {
            var a = $(e).val().split(".").pop().toLowerCase();
            return (
              -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
            );
          }
          document.addEventListener("turbo:load", function () {
            if (
              !$("#createPharmacistForm").length &&
              !$("#editPharmacistForm").length
            )
              return;
            $(".pharmacistBloodGroup").select2({ width: "100%" }),
              $(".pharmacistBirthDate")
                .flatpickr({
                  dateFormat: "Y-m-d",
                  useCurrent: false,
                  locale: $(".userCurrentLanguage").val()
                })
                .set("maxDate", new Date()),
              $(".departmentId").length &&
                $(".departmentId").select2({ width: "100%" });
            $("#createPharmacistForm, #editPharmacistForm")
              .find("input:text:visible:first")
              .focus();
          }),
            listenSubmit(
              "#createPharmacistForm, #editPharmacistForm",
              function () {
                if ("" !== $(".error-msg").text())
                  return $(".phoneNumber").focus(), !1;
              }
            ),
            listenClick(".remove-pharmacist-image", function () {
              defaultImagePreview(".previewImage", 1);
            }),
            listenChange(".pharmacistProfileImage", function () {
              var t = e($(this), "#pharmacistsErrorBox");
              console.log(t),
                isEmpty(t) || 0 == t
                  ? ($(this).val(""),
                    $("#pharmacistsErrorBox").removeClass("d-none hide"),
                    $("#pharmacistsErrorBox")
                      .text("The image must be a file of type: jpg, jpeg, png.")
                      .show(),
                    $("[id=pharmacistsErrorBox]").focus(),
                    $("html, body").animate({ scrollTop: "0" }, 500),
                    $(".alert").delay(5e3).slideUp(300))
                  : ($("#pharmacistsErrorBox").html("").hide(),
                    displayDocument(this, "#pharmacistsErrorBox", t));
            }),
            listenChange(".editPharmacistProfileImage", function () {
              var t = e($(this), "#editPharmacistErrorBox");
              console.log(t),
                isEmpty(t) || 0 == t
                  ? ($(this).val(""),
                    $("#editPharmacistErrorBox").removeClass("d-none hide"),
                    $("#editPharmacistErrorBox")
                      .text("The image must be a file of type: jpg, jpeg, png.")
                      .show(),
                    $("[id=editPharmacistErrorBox]").focus(),
                    $("html, body").animate({ scrollTop: "0" }, 500),
                    $(".alert").delay(5e3).slideUp(300))
                  : ($("#editPharmacistErrorBox").html("").hide(),
                    displayDocument(this, "#pharmacistsErrorBox", t));
            });
        },
        6935: () => {
          listen("click", ".delete-pharmacist-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#indexPharmacistUrl").val() + "/" + t,
              "",
              $("#Pharmacist").val()
            );
          }),
            listen("change", ".pharmacistStatus", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              updatePharmacistsStatus(t);
            }),
            listen("click", "#pharmacistResetFilter", function () {
              $("#pharmacist_filter_status").val(0).trigger("change"),
                hideDropdownManually(
                  $("#pharmacistFilterBtn"),
                  $(".dropdown-menu")
                );
            }),
            listenChange("#pharmacist_filter_status", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            }),
            (window.updatePharmacistsStatus = function (e) {
              $.ajax({
                url:
                  $("#indexPharmacistUrl").val() + "/" + +e + "/active-deactive",
                method: "post",
                cache: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message), livewire.emit("refresh"));
                }
              });
            });
        },
        9886: () => {},
        8433: () => {
          document.addEventListener("turbo:load", function () {
            if (!$(".editPostalDate").length) return;
            $(".date, .editPostalDate").flatpickr({
              format: "YYYY-MM-DD",
              useCurrent: !0,
              sideBySide: !0,
              locale: $(".userCurrentLanguage").val()
            }),
              (e = $(".editPostalDate").flatpickr({
                format: "YYYY-MM-DD",
                useCurrent: !1,
                sideBySide: !1,
                locale: $(".userCurrentLanguage").val()
              }));
          });
          var e;
          $(".add_modal").val(), $(".edit_modal").val();
          listenSubmit(".addPostalForm", function (e) {
            e.preventDefault(), $(".btnPostalSave").attr("disabled", !0);
            var t = jQuery(this).find(".btnPostalSave");
            t.button("loading");
            var a = new FormData($(this)[0]);
            $.ajax({
              url: $(".postalCreateUrl").val(),
              type: "POST",
              data: a,
              processData: !1,
              contentType: !1,
              success: function (e) {
                e.success &&
                  (displaySuccessMessage(e.message),
                  ($("#add_postal_receives_modal").length ||
                    $("#edit_postal_receives_modal").length) &&
                    $(
                      "#add_postal_receives_modal,#edit_postal_receives_modal"
                    ).modal("hide"),
                  ($("#add_postal_dispatch_modal").length ||
                    $("#edit_postal_dispatch_modal").length) &&
                    $(
                      "#add_postal_dispatch_modal,#edit_postal_dispatch_modal"
                    ).modal("hide"),
                  Livewire.emit("refresh"),
                  setTimeout(function () {
                    $(".btnPostalSave").attr("disabled", !1), t.button("reset");
                  }, 1e3));
              },
              error: function (e) {
                printErrorMessage(".validationErrorsBox", e),
                  setTimeout(function () {
                    $(".btnPostalSave").attr("disabled", !1), t.button("reset");
                  }, 1e3);
              }
            });
          }),
            listenClick(".delete-postal-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem($(".postalUrl").val() + "/" + t, "", $(".name").val());
            }),
            listenClick(".edit-postal-btn", function (t) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var a,
                  n = t.currentTarget.dataset.id;
                (a = n),
                  $.ajax({
                    url: $(".postalUrl").val() + "/" + a + "/edit",
                    type: "GET",
                    success: function (t) {
                      if (t.success) {
                        if ("" != t.data.document_url) {
                          var a = t.data.document_url
                            .split(".")
                            .pop()
                            .toLowerCase();
                          "pdf" === a
                            ? $(".editPreviewImage").css(
                                "background-image",
                                'url("' + $(".pdfDocumentImageUrl").val() + '")'
                              )
                            : "docx" === a || "doc" === a
                            ? $(".editPreviewImage").css(
                                "background-image",
                                'url("' + $(".docxDocumentImageUrl").val() + '")'
                              )
                            : "" === a
                            ? $(".editPreviewImage").css(
                                "background-image",
                                'url("' +
                                  $(".defaultDocumentImageUrl").val() +
                                  '")'
                              )
                            : $(".editPreviewImage").css(
                                "background-image",
                                'url("' + t.data.document_url + '")'
                              );
                        }
                        $($(".hiddenId").val()).val(t.data.id),
                          $(".editFromTitle").val(t.data.from_title),
                          e.setDate(format(t.data.date, "YYYY-MM-DD")),
                          $(".editReferenceNumber").val(t.data.reference_no),
                          $(".editToTitle").val(t.data.to_title),
                          $(".editAddress").val(t.data.address),
                          isEmpty(t.data.document_url)
                            ? $(".edit-attachment").addClass("d-none")
                            : $(".documentUrl").attr("href", t.data.document_url),
                          $("#edit_postal_receives_modal").length &&
                            $("#edit_postal_receives_modal").modal("show"),
                          $("#edit_postal_dispatch_modal").length &&
                            $("#edit_postal_dispatch_modal").modal("show"),
                          ajaxCallCompleted();
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit(".editPostalForm", function (e) {
              e.preventDefault(), $(".btnEditSave").attr("disabled", !0);
              var t = jQuery(this).find(".btnEditSave");
              if (
                (t.button("loading"),
                1 == $(".isPostal").val() &&
                  0 === $(".editFromTitle").val().trim().length)
              )
                return (
                  displayErrorMessage("The from title is required."),
                  $(".btnEditSave").attr("disabled", !1),
                  !1
                );
              if (
                2 == $(".isPostal").val() &&
                0 === $(".editToTitle").val().trim().length
              )
                return (
                  displayErrorMessage("The to title is required."),
                  $(".btnEditSave").attr("disabled", !1),
                  !1
                );
              var a = $($(".hiddenId").val()).val(),
                n = $(".postalUrl").val() + "/" + a,
                i = {
                  formSelector: $(this),
                  url: n,
                  type: "post",
                  tableSelector: $(".tableName").val()
                };
              editRecord(i, t),
                $("#edit_postal_receives_modal").length &&
                  $("#edit_postal_receives_modal").modal("hide"),
                $("#edit_postal_dispatch_modal").length &&
                  $("#edit_postal_dispatch_modal").modal("hide"),
                $(".btnEditSave").attr("disabled", !1);
            }),
            listenChange(".postalAttachment", function () {
              var e = (function (e, t) {
                var a = $(e).val().split(".").pop().toLowerCase();
                if (
                  -1 == $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"])
                )
                  return (
                    $(e).val(""),
                    $(t).html($(".documentError").val()).removeClass("hide"),
                    $(t).removeAttr("style"),
                    !1
                  );
                return $(t).html($(".documentError").val()).addClass("hide"), a;
              })($(this), ".validationErrorsBox");
              isEmpty(e) ||
                0 == e ||
                ($(".validationErrorsBox").html("").hide(),
                displayDocument(this, ".previewImage", e));
            }),
            listenClick(".remove-postal-image", function () {
              defaultImagePreview(".previewImage");
            }),
            listenClick(".remove-postal-image-edit", function () {
              defaultImagePreview(".editPreviewImage");
            }),
            listenHiddenBsModal("#add_postal_dispatch_modal", function () {
              resetModalForm("#addDispatchForm", ".validationErrorsBox"),
                $(".previewImage").css(
                  "background-image",
                  'url("' + $(".defaultDocumentImageUrl").val() + '")'
                );
            }),
            listenHiddenBsModal("#edit_postal_dispatch_modal", function () {
              resetModalForm("#editDispatchForm", ".editValidationErrorsBox1"),
                $(".editPreviewImage").css(
                  "background-image",
                  'url("' + $(".defaultDocumentImageUrl").val() + '")'
                );
            }),
            listenHiddenBsModal("#add_postal_receives_modal", function () {
              resetModalForm("#addReceiveForm", ".validationErrorsBox"),
                $(".previewImage").css(
                  "background-image",
                  'url("' + $(".defaultDocumentImageUrl").val() + '")'
                );
            }),
            listenHiddenBsModal("#edit_postal_receives_modal", function () {
              resetModalForm("#editReceiveForm", ".editValidationErrorsBox1"),
                $(".editPreviewImage").css(
                  "background-image",
                  'url("' + $(".defaultDocumentImageUrl").val() + '")'
                );
            });
        },
        9425: () => {
          document.addEventListener("turbo:load", function () {
            if (
              !$("#prescriptionPatientId").length &&
              !$("#editPrescriptionPatientId").length
            )
              return;
            $(
              "#prescriptionPatientId,#editPrescriptionPatientId,#filter_status,#prescriptionDoctorId,#editPrescriptionDoctorId,#prescriptionTime,#prescriptionMedicineCategoryId,#prescriptionMedicineBrandId,.prescriptionMedicineId,.prescriptionMedicineMealId,#editPrescriptionTime"
            ).select2({ width: "100%" }),
              $(
                "#prescriptionMedicineBrandId, #prescriptionMedicineBrandId"
              ).select2({
                width: "100%",
                dropdownParent: $("#add_new_medicine")
              }),
              $("#prescriptionPatientId").first().focus();
          }),
            (uniquePrescriptionId = $("#prescriptionUniqueId").val()),
            listenSubmit("#createPrescription, #editPrescription", function () {
              $(".btnPrescriptionSave").attr("disabled", !0);
            }),
            listenSubmit("#createMedicineFromPrescription", function (e) {
              e.preventDefault(),
                $.ajax({
                  url: $("#createMedicineFromPrescriptionPost").val(),
                  method: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    $(".medicineTable").load(
                      location.href + " .medicineTable",
                      function () {
                        $(".prescriptionMedicineId").select2();
                      }
                    ),
                      displaySuccessMessage(e.message),
                      $("#add_new_medicine").modal("hide");
                  },
                  error: function (e) {
                    printErrorMessage("#medicinePrescriptionErrorBox", e);
                  }
                });
            });
          var e = function (e) {
            $(e).select2({ placeholder: "Select Medicine", width: "100%" });
          };
          listenHiddenBsModal("#add_new_medicine", function () {
            resetModalForm(
              "#createMedicineFromPrescription",
              "#medicinePrescriptionErrorBox"
            );
          }),
            listenClick(".delete-prescription-medicine-item", function () {
              $(this).parents("tr").remove();
            }),
            listenClick(".add-medicine-btn", function () {
              var t = {
                  medicines: JSON.parse(
                    $(".associatePrescriptionMedicines").val()
                  ),
                  meals: JSON.parse($(".associatePrescriptionMeals").val()),
                  uniqueId: uniquePrescriptionId
                },
                a = prepareTemplateRender("#prescriptionMedicineTemplate", t);
              $(".prescription-medicine-container").append(a),
                e(".prescriptionMedicineId"),
                e(".prescriptionMedicineMealId"),
                uniquePrescriptionId++,
                $("#prescriptionUniqueId").val(uniquePrescriptionId);
            });
        },
        5462: () => {
          listenClick(".delete-prescription-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#indexPrescriptionUrl").val() + "/" + t,
              "",
              $("#Prescription").val()
            );
          }),
            listenChange(".prescriptionStatus", function (e) {
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url:
                    $("#indexPrescriptionUrl").val() +
                    "/" +
                    +t +
                    "/active-deactive",
                  method: "post",
                  cache: !1,
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      hideDropdownManually(
                        $("#prescriptionFilterBtn"),
                        $("#prescriptionFilter")
                      ));
                  },
                  error: function (e) {
                    displayErrorMessage(e.responseJSON.message);
                  }
                });
            }),
            listenClick("#prescriptionResetFilter", function () {
              $("#prescriptionHead").val("2").trigger("change"),
                hideDropdownManually(
                  $("#prescriptionFilterBtn"),
                  $(".dropdown-menu")
                );
            }),
            listenChange("#prescriptionHead", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            });
        },
        7448: () => {
          listenSubmit("#addRadiologyCategoryForm", function (e) {
            e.preventDefault();
            var t = jQuery(this).find("#btnRadiologyCategorySave");
            t.button("loading"),
              $.ajax({
                url: $("#createRadiologyCategoryURL").val(),
                type: "POST",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#add_radiology_categories_modal").modal("hide"),
                    $("#radiologyCategoryTable")
                      .DataTable()
                      .ajax.reload(null, !0),
                    Livewire.emit("refresh"));
                },
                error: function (e) {
                  printErrorMessage("#rcvalidationErrorsBox", e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
          }),
            listenSubmit("#editRadiologyCategoryForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#btnRadiologyCategoryEditSave");
              t.button("loading");
              var a = $("#radiologyCategoryId").val();
              $.ajax({
                url: $("#radiologyCategoryURL").val() + "/" + a,
                type: "patch",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_radiology_categories_modal").modal("hide"),
                    $("#radiologyCategoryTable")
                      .DataTable()
                      .ajax.reload(null, !0),
                    Livewire.emit("refresh"));
                },
                error: function (e) {
                  UnprocessableInputError(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_radiology_categories_modal", function () {
              resetModalForm(
                "#addRadiologyCategoryForm",
                "#rcvalidationErrorsBox"
              );
            }),
            listenHiddenBsModal("#edit_radiology_categories_modal", function () {
              resetModalForm(
                "#editRadiologyCategoryForm",
                "#editRCValidationErrorsBox"
              );
            }),
            listenClick(".edit-radiology-category-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#radiologyCategoryURL").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      if (e.success) {
                        var t = e.data;
                        $("#radiologyCategoryId").val(t.id),
                          $("#editRadiologyCategoryName").val(t.name),
                          $("#edit_radiology_categories_modal").modal("show"),
                          ajaxCallCompleted(),
                          Livewire.emit("refresh");
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenClick(".delete-radiology-category-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#radiologyCategoryURL").val() + "/" + t,
                "",
                $("#radiologyCategory").val()
              );
            });
        },
        6219: () => {
          document.addEventListener("turbo:load", function () {
            if (!$(".radiologyTestActionURL").length) return;
            $(".price-input").trigger("input"),
              $(".radiologyCategories,.chargeCategories").select2({
                width: "100%"
              }),
              $("#createRadiologyTest, #editRadiologyTest")
                .find("input:text:visible:first")
                .focus();
          }),
            (window.radiologyTestGetStandardCharge = function (e) {
              $.ajax({
                url:
                  $(".radiologyTestActionURL").val() +
                  "/get-standard-charge/" +
                  e,
                method: "get",
                cache: !1,
                success: function (e) {
                  "" !== e.data &&
                    ($(".rtStandardCharge").val(e.data),
                    $(".price-input").trigger("input"));
                }
              });
            }),
            listenChange(".chargeCategories", function (e) {
              var t = $(this).val();
              "" !== t
                ? radiologyTestGetStandardCharge(t)
                : $(".rtStandardCharge").val("");
            });
        },
        3390: () => {
          listenClick(".delete-radiology-test-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#radiologyTestURL").val() + "/" + t,
              "",
              $("#radiologyTest").val()
            );
          }),
            listenClick(".show-radiology-test-btn", function (e) {
              e.preventDefault();
              var t = $(this).attr("data-id");
              radiologyTestRenderData(t);
            }),
            (window.radiologyTestRenderData = function (e) {
              $.ajax({
                url: $("#radiologyTestShowModal").val() + "/" + e,
                type: "GET",
                success: function (e) {
                  e.success &&
                    ($("#showRtTest_name").text(e.data.test_name),
                    $("#showRtShort_name").text(e.data.short_name),
                    $("#showRtTest_type").text(e.data.test_type),
                    $("#showRadiologyCategories").text(
                      e.data.radiology_category_name
                    ),
                    $("#showRtSubcategory").text(e.data.subcategory),
                    $("#showRtReport_days").text(e.data.report_days),
                    $("#showCharge_categories").text(e.data.charge_category_name),
                    $("#showRtStandard_charge").text(e.data.standard_charge),
                    moment.locale($("#radiologyTestLanguage").val()),
                    $("#showRtCreated_on").text(
                      moment(e.data.created_at).fromNow()
                    ),
                    $("#showRtUpdated_on").text(
                      moment(e.data.updated_at).fromNow()
                    ),
                    setValueOfEmptySpan(),
                    $("#showRadiologyTest").appendTo("body").modal("show"));
                },
                error: function (e) {
                  displayErrorMessage(e.responseJSON.message);
                }
              });
            });
        },
        3184: () => {
          function e(e, t) {
            var a = $(e).val().split(".").pop().toLowerCase();
            return (
              -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
            );
          }
          document.addEventListener("turbo:load", function () {
            (function () {
              if (!$("#receptionistBirthDate").length) return;
              $("#receptionistBirthDate").flatpickr({
                format: "YYYY-MM-DD",
                useCurrent: !0,
                sideBySide: !0,
                maxDate: new Date(),
                locale: $(".userCurrentLanguage").val()
              }),
                $("#receptionistBloodGroup").select2({ width: "100%" }),
                $("#receptionistDepartmentId").select2({ width: "100%" }),
                $("#createReceptionForm")
                  .find("input:text:visible:first")
                  .focus();
            })(),
              (function () {
                if (!$("#editReceptionistBirthDate").length) return;
                $("#editReceptionistBirthDate").flatpickr({
                  format: "YYYY-MM-DD",
                  useCurrent: !0,
                  sideBySide: !0,
                  maxDate: new Date(),
                  locale: $(".userCurrentLanguage").val()
                }),
                  $("#editReceptionistBloodGroup").select2({ width: "100%" }),
                  $("#editReceptionForm")
                    .find("input:text:visible:first")
                    .focus();
              })();
          }),
            listenSubmit("#createReceptionForm, #editReceptionForm", function () {
              if ("" !== $(".error-msg").text())
                return $(".phoneNumber").focus(), !1;
            }),
            listenClick(".remove-receptionist-image", function () {
              defaultImagePreview("#receptionistPreviewImage", 1);
            }),
            listenChange(".receptionistProfileImage", function () {
              var t = e($(this), "#receptionistErrorsBox");
              console.log(t),
                isEmpty(t) || 0 == t
                  ? ($(this).val(""),
                    $("#receptionistErrorsBox").removeClass("d-none hide"),
                    $("#receptionistErrorsBox")
                      .text("The image must be a file of type: jpg, jpeg, png.")
                      .show(),
                    $("[id=receptionistErrorsBox]").focus(),
                    $("html, body").animate({ scrollTop: "0" }, 500),
                    $(".alert").delay(5e3).slideUp(300))
                  : ($("#receptionistErrorsBox").html("").hide(),
                    displayDocument(this, "#customValidationErrorsBox", t));
            }),
            listenChange(".editReceptionistProfileImage", function () {
              var t = e($(this), "#editReceptionistErrorsBox");
              console.log(t),
                isEmpty(t) || 0 == t
                  ? ($(this).val(""),
                    $("#editReceptionistErrorsBox").removeClass("d-none hide"),
                    $("#editReceptionistErrorsBox")
                      .text("The image must be a file of type: jpg, jpeg, png.")
                      .show(),
                    $("[id=editReceptionistErrorsBox]").focus(),
                    $("html, body").animate({ scrollTop: "0" }, 500),
                    $(".alert").delay(5e3).slideUp(300))
                  : ($("#editReceptionistErrorsBox").html("").hide(),
                    displayDocument(this, "#customValidationErrorsBox", t));
            });
        },
        7201: () => {
          "use strict";
          (window.updateReceptionistStatus = function (e) {
            $.ajax({
              url: $("#receptionistUrl").val() + "/" + +e + "/active-deactive",
              method: "post",
              cache: !1,
              success: function (e) {
                e.success && displaySuccessMessage(e.message);
              }
            });
          }),
            listenClick(".delete-receptionist-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#receptionistUrl").val() + "/" + t,
                "#receptionistsTbl",
                $("#Receptionist").val()
              );
            }),
            listenChange(".receptionistStatus", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              updateReceptionistStatus(t);
            }),
            listenChange("#receptionist_filter_status", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            }),
            listen("click", "#receptionistResetFilter", function () {
              $("#receptionist_filter_status").val(0).trigger("change"),
                hideDropdownManually(
                  $("#receptionistsFilterBtn"),
                  $(".dropdown-menu")
                );
            });
        },
        6224: () => {},
        383: () => {
          document.addEventListener("turbo:load", function () {
            if (!$(".scheduleForm").length) return;
            $("#doctorId, #serialVisibilityId").select2({ width: "100%" }),
              $(".perPatientTime").flatpickr({
                enableTime: !0,
                noCalendar: !0,
                enableSeconds: !0,
                dateFormat: "H:i:S",
                time_24hr: !0,
                locale: $(".userCurrentLanguage").val()
              });
            var e = [],
              t = [];
            $.each(JSON.parse($(".hospitalSchedule").val()), function (a, n) {
              (e[a] = parseInt(n.day_of_week)),
                (t[n.day_of_week] = [n.start_time, n.end_time]);
            });
            var a = 0;
            $(".perPatientTime").val();
            for (; a <= 7; a++)
              -1 !== $.inArray(a, e)
                ? (e.sort(),
                  $(".cpy-btn" + (e[0] - 1)).hide(),
                  $(".hospitalScheduleFrom-" + a).flatpickr({
                    enableTime: !0,
                    noCalendar: !0,
                    enableSeconds: !0,
                    dateFormat: "H:i:S",
                    time_24hr: !0,
                    minTime: t[a][0]
                  }),
                  (hospitalToSchedule = $(".hospitalScheduleTo-" + a).flatpickr({
                    enableTime: !0,
                    noCalendar: !0,
                    enableSeconds: !0,
                    dateFormat: "H:i:S",
                    time_24hr: !0,
                    minTime:
                      t[a][0].split(":")[0] +
                      ":" +
                      parseInt(t[a][0].split(":")[1]) +
                      5,
                    maxTime: t[a][1]
                  })))
                : $(".hospitalScheduleFrom-" + a)
                    .parent()
                    .parent()
                    .hide();
            function n(e) {
              if (e.prev().length > 0)
                return "none" == e.prev().css("display") ? n(e.prev()) : e.prev();
            }
            listenClick(".copy-btn", function (e) {
              e.preventDefault();
              var t = n($(this).parent().parent()),
                a = $(e.currentTarget).attr("data-id"),
                i = a - 1,
                r = $("#availableFrom-".concat(i)).val(),
                s = $("#availableTo-".concat(i)).val();
              (r = t.find("td .availableFrom").val()),
                (s = t.find("td .availableTo").val());
              var o, d;
              (o = r),
                $("#availableFrom-".concat(a)).val(r),
                (d = s),
                $("#availableTo-".concat(a)).val(s);
              var l = a + 1;
              $(".hospitalScheduleFrom-" + l).flatpickr({
                enableTime: !0,
                noCalendar: !0,
                enableSeconds: !0,
                dateFormat: "H:i:S",
                time_24hr: !0,
                minTime: o
              }),
                $(".hospitalScheduleTo-" + l).flatpickr({
                  enableTime: !0,
                  noCalendar: !0,
                  enableSeconds: !0,
                  dateFormat: "H:i:S",
                  time_24hr: !0,
                  maxTime: d
                });
            }),
              listenSubmit(".scheduleForm", function (e) {
                if (
                  (e.preventDefault(), "00:00:00" == $(".perPatientTime").val())
                )
                  return (
                    $("#scheduleErrorsBox")
                      .html("Please select per patient time")
                      .show(),
                    $(".perPatientTime").focus(),
                    !1
                  );
                for (var a = 0, n = !0; a <= 6; a++)
                  if (
                    "00:00:00" != $("#availableFrom-" + a).val() &&
                    ((n = !1),
                    "undefined" !== t[a + 1] &&
                      $("#availableFrom-" + a).val() < t[a + 1][0])
                  )
                    return (
                      $("#availableFrom-" + a).focus(),
                      $("#scheduleErrorsBox")
                        .show()
                        .html(
                          "Available From time must be greater than hospital schedule time"
                        )
                        .show(),
                      $("#scheduleErrorsBox").delay(5e3).fadeOut(),
                      !1
                    );
                if (n)
                  return (
                    $("#scheduleErrorsBox")
                      .show()
                      .html("Available From time must be greater than Zero"),
                    $("#scheduleErrorsBox").delay(5e3).fadeOut(),
                    !1
                  );
                for (var i = 0, r = !0; i <= 6; i++)
                  if (
                    "00:00:00" != $("#availableTo-" + i).val() &&
                    ((r = !1),
                    "undefined" !== t[i + 1] &&
                      $("#availableTo-" + i).val() > t[i + 1][1] + ":00")
                  )
                    return (
                      $("#availableTo-" + i).focus(),
                      $("#scheduleErrorsBox")
                        .show()
                        .html(
                          "Available To time must be less than hospital schedule time"
                        )
                        .show(),
                      $("#scheduleErrorsBox").delay(5e3).fadeOut(),
                      !1
                    );
                if (r)
                  return (
                    $("#scheduleErrorsBox")
                      .show()
                      .html("Available To time must be greater than Zero"),
                    $("#scheduleErrorsBox").delay(5e3).fadeOut(),
                    !1
                  );
                $(this)[0].submit();
              });
          });
        },
        5416: () => {
          listenClick(".delete-schedule-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#indexScheduleUrl").val() + "/" + t,
              "",
              $("#Schedule").val()
            );
          });
        },
        3950: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#createServiceForm").length && !$("#editServiceForm").length)
              return;
            $("#serviceStatus").select2({ width: "100%" }),
              $(".price-input").trigger("input"),
              $(window).on("beforeunload", function () {
                $("input[type=submit]").prop("disabled", "disabled");
              }),
              $("#createServiceForm, #editServiceForm")
                .find("input:text:visible:first")
                .focus();
          }),
            listenSubmit("#createServiceForm, #editServiceForm", function () {
              $("#serviceBtnSave").attr("disabled", !0);
            });
        },
        9946: () => {
          "use strict";
          listenClick(".delete-service-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#showServiceReportUrl").val() + "/" + t,
              "",
              $("#Service").val()
            );
          }),
            listenChange(".serviceStatus", function (e) {
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url:
                    $("#showServiceReportUrl").val() +
                    "/" +
                    t +
                    "/active-deactive",
                  method: "post",
                  cache: !1,
                  success: function (e) {
                    e.success && displaySuccessMessage(e.message);
                  }
                });
            }),
            listenChange("#service_filter_status", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val()),
                hideDropdownManually($("#incomeFilterBtn"), $("#incomeFilter"));
            }),
            listenClick("#serviceResetFilter", function () {
              $("#service_filter_status").val(0).trigger("change"),
                hideDropdownManually($("#serviceFilterBtn"), $(".dropdown-menu"));
            });
        },
        4810: () => {
          function e(e, t) {
            var a = $(e).val().split(".").pop().toLowerCase();
            return (
              -1 != $.inArray(a, ["jpg", "png", "jpeg"]) && ($(t).hide(), !0)
            );
          }
          document.addEventListener("turbo:load", function () {
            if (!$("#generalCurrencyType").length) return;
            $("#generalCurrencyType").select2({ width: "100%" }),
              (function () {
                if (!$("#countryPhone").length) return !1;
                var e = document.querySelector("#countryPhone");
                (errorMsg = document.querySelector(".error-msg")),
                  (validMsg = document.querySelector(".valid-msg"));
                Lang.get("messages.common.invalid_number"),
                  Lang.get("messages.common.invalid_country_code"),
                  Lang.get("messages.common.too_short"),
                  Lang.get("messages.common.too_long");
                var t = window.intlTelInput(e, {
                    initialCountry: "IN",
                    separateDialCode: !0,
                    geoIpLookup: function (e, t) {
                      $.get("https://ipinfo.io", function () {}, "jsonp").always(
                        function (t) {
                          var a = t && t.country ? t.country : "";
                          e(a);
                        }
                      );
                    },
                    utilsScript: "../../public/assets/js/inttel/js/utils.min.js"
                  }),
                  a =
                    t.selectedCountryData.name +
                    " +" +
                    t.selectedCountryData.dialCode;
                $("#countryPhone").val(a);
                var n = function () {
                  e.classList.remove("error");
                };
                e.addEventListener("blur", function () {
                  if ((n(), e.value.trim()))
                    if (t.isValidNumber()) validMsg.classList.remove("d-none");
                    else {
                      e.classList.add("error");
                      t.getValidationError();
                      errorMsg.classList.remove("d-none");
                    }
                }),
                  e.addEventListener("change", n),
                  e.addEventListener("keyup", n),
                  $(document).on(
                    "blur keyup change countrychange",
                    "#countryPhone",
                    function () {
                      var e = t.selectedCountryData.dialCode,
                        a = t.selectedCountryData.iso2;
                      $("#countryCode").val(e), $("#countryName").val(a);
                    }
                  );
              })();
          }),
            listenChange(".generalAppLogo", function () {
              var t = e($(this), "#generalValidationErrorsBox");
              isEmpty(t) || 0 == t
                ? ($(this).val(""),
                  $("#generalValidationErrorsBox").removeClass("d-none hide"),
                  $("#generalValidationErrorsBox")
                    .text("The image must be a file of type: jpg, jpeg, png.")
                    .show(),
                  $("[id=generalValidationErrorsBox]").focus(),
                  $("html, body").animate({ scrollTop: "0" }, 500),
                  $(".alert").delay(5e3).slideUp(300))
                : ($("#generalValidationErrorsBox").html("").hide(),
                  displayDocument(this, "#generalPreviewImage", t));
            }),
            listenChange(".generalFavicon", function () {
              var t = e($(this), "#settingValidationErrorsBox");
              console.log(!isEmpty(t) && 0 != t),
                isEmpty(t) || 0 == t
                  ? ($(this).val(""),
                    $("#generalValidationErrorsBox").removeClass("d-none hide"),
                    $("#generalValidationErrorsBox")
                      .text("The image must be a file of type: jpg, jpeg, png.")
                      .show(),
                    $("[id=generalValidationErrorsBox]").focus(),
                    $("html, body").animate({ scrollTop: "0" }, 500),
                    $(".alert").delay(5e3).slideUp(300))
                  : ($("#generalValidationErrorsBox").html("").hide(),
                    displayDocument(this, "#generalPreviewImage", t));
            }),
            listenKeyup("#generalFacebookUrl", function () {
              this.value = this.value.toLowerCase();
            }),
            listenKeyup("#generalTwitterUrl", function () {
              this.value = this.value.toLowerCase();
            }),
            listenKeyup("#generalInstagramUrl", function () {
              this.value = this.value.toLowerCase();
            }),
            listenKeyup("#generalLinkedInUrl", function () {
              this.value = this.value.toLowerCase();
            }),
            listenSubmit("#createSetting", function (e) {
              if ("" !== $(".error-msg").text())
                return $("#generalPhoneNumber").focus(), !1;
              var t = $("#generalFacebookUrl").val(),
                a = $("#generalTwitterUrl").val(),
                n = $("#generalInstagramUrl").val(),
                i = $("#generalLinkedInUrl").val(),
                r = new RegExp(
                  /^(https?:\/\/)?((m{1}\.)?)?((w{2,3}\.)?)facebook.[a-z]{2,3}\/?.*/i
                ),
                s = new RegExp(
                  /^(https?:\/\/)?((m{1}\.)?)?((w{2,3}\.)?)twitter\.[a-z]{2,3}\/?.*/i
                ),
                o = new RegExp(
                  /^(https?:\/\/)?((w{2,3}\.)?)instagram.[a-z]{2,3}\/?.*/i
                ),
                d = new RegExp(
                  /^(https?:\/\/)?((w{2,3}\.)?)linkedin\.[a-z]{2,3}\/?.*/i
                );
              return "" != t && !t.match(r)
                ? (displayErrorMessage("Please enter a valid Facebook URL"), !1)
                : "" != a && !a.match(s)
                ? (displayErrorMessage("Please enter a valid Twitter URL"), !1)
                : "" != n && !n.match(o)
                ? (displayErrorMessage("Please enter a valid Instagram URL"), !1)
                : !("" != i && !i.match(d)) ||
                  (displayErrorMessage("Please enter a valid Linkedin URL"), !1);
            }),
            listenChange(".settingStatus", function (e) {
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url:
                    $("#sideBarModuleUrl").val() + "/" + t + "/active-deactive",
                  method: "post",
                  cache: !1,
                  success: function (e) {
                    e.success &&
                      (setTimeout(function () {
                        window.location.reload();
                      }, 5e3),
                      displaySuccessMessage(e.message),
                      livewire.emit("refresh"));
                  }
                });
            }),
            listenChange("#module_filter_status", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val()),
                hideDropdownManually($("#moduleFilterBtn"), $("#moduleFilter"));
            }),
            listenClick("#settingResetFilter", function () {
              $("#module_filter_status").val(0).trigger("change"),
                hideDropdownManually($("#moduleFilterBtn"), $(".dropdown-menu"));
            });
        },
        2716: () => {
          "use strict";
          $(document).ready(function () {
            listenKeyup("#menuSearch", function () {
              var e = $(this).val().toLowerCase();
              $(".nav-item").filter(function () {
                $(".no-record").addClass("d-none"),
                  $(this).toggle($(this).text().toLowerCase().indexOf(e) > -1),
                  0 == $(".nav-item:visible").last().length &&
                    $(".no-record").removeClass("d-none");
              });
            }),
              listenClick(".sidebar-aside-toggle", function () {
                !0 === $(this).hasClass("active")
                  ? $(".sidebar-search-box").addClass("d-none")
                  : $(".sidebar-search-box").removeClass("d-none");
              });
          });
        },
        3382: () => {
          function e() {
            $(".mySmsClass").hide(), $(".role").show(), $(".send").show();
          }
          document.addEventListener("turbo:load", function () {
            if (!$("#smsUrl").length) return;
            $("#smsMessageId").keypress(function (e) {
              var t = $("#smsMessageId").val(),
                a = t.length;
              parseInt(160 - a) <= 0 &&
                0 !== e.which &&
                0 !== e.charCode &&
                ($("#smsMessageId").val(t.substring(0, a - 1)),
                displayErrorMessage(
                  "The message may not be greater than 160 characters."
                ));
            }),
              $(".mySmsClass").hide(),
              $("#smsPhoneNumber").prop("required", !1);
          }),
            listenClick(".smsNumber", function () {
              $(".smsNumber").is(":checked")
                ? ($(".mySmsClass").show(),
                  $(".smsNumber").attr("value", 1),
                  $(".role").hide(),
                  $("#smsRoleId").prop("required", !1),
                  $(".send").hide(),
                  $("#smsUserId").prop("required", !1),
                  $("#smsPhoneNumber").attr("required"),
                  $("#smsPhoneNumber").prop("required", !0))
                : ($("#smsPhoneNumber").prop("required", !1), e());
            }),
            listenHiddenBsModal("#AddSmsModal", function () {
              resetModalForm("#addSmsForm", "#smsValidationErrorsBox"),
                $("#smsUserId").val("").trigger("change.select2"),
                $("#smsRoleId").val("").trigger("change.select2"),
                $(".valid-msg").addClass("hide"),
                e();
            }),
            listenShownBsModal("#AddSmsModal", function () {
              $("#smsUserId,#smsRoleId").select2({
                width: "100%",
                dropdownParent: $("#AddSmsModal")
              });
            }),
            listenChange("#smsRoleId", function () {
              "" !== $(this).val() &&
                $.ajax({
                  url: $("#getUsersListUrl").val(),
                  type: "get",
                  dataType: "json",
                  data: { id: $(this).val() },
                  success: function (e) {
                    $("#smsUserId").empty(),
                      $("#smsUserId").removeAttr("disabled"),
                      $.each(e.data, function (e, t) {
                        $("#smsUserId").append(
                          $("<option></option>").attr("value", e).text(t)
                        );
                      });
                  }
                }),
                $("#smsUserId").empty(),
                $("#smsUserId").prop("disabled", !0);
            }),
            listen("click", ".show-sms-btn", function (e) {
              e.preventDefault();
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url: $("#SMSShowModal").val() + "/" + t,
                  type: "GET",
                  success: function (e) {
                    e.success &&
                      ($("#showSmsSend_to").text(
                        e.data.user ? e.data.user.full_name : "N/A"
                      ),
                      $("#showSmsUser_role").text(
                        e.data.user ? e.data.user.roles[0].name : "N/A"
                      ),
                      $("#showSms_phone").text(e.data.phone_number),
                      $("#showSmsSend_by").text(
                        e.data.send_by ? e.data.send_by.full_name : "N/A"
                      ),
                      $("#showSms_message").text(e.data.message),
                      moment.locale($("#smsLanguage").val()),
                      $("#showSms_date").text(
                        moment(e.data.created_at).fromNow()
                      ),
                      $("#showSmsUpdated_on").text(
                        moment(e.data.updated_at).fromNow()
                      ),
                      setValueOfEmptySpan(),
                      $("#showSms").appendTo("body").modal("show"));
                  },
                  error: function (e) {
                    displayErrorMessage(e.responseJSON.message);
                  }
                });
            }),
            listen("submit", "#addSmsForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#smsBtnSave");
              t.button("loading"),
                $("#smsNumber").is(":checked") &&
                  ($("#smsRoleId").remove(), $("#smsUserId").remove()),
                $.ajax({
                  url: $("#createSmsUrl").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#AddSmsModal").modal("hide"),
                      livewire.emit("refresh"));
                  },
                  error: function (e) {
                    displayErrorMessage("Please set your credential"),
                      $("#AddSmsModal").modal("hide");
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listen("click", ".delete-sms-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem($("#smsUrl").val() + "/" + t, "", $("#SMS").val());
            });
        },
        8418: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#indexTestimonialUrl").length) return;
            $(".testimonialDescription").attr("maxlength", 150);
          }),
            listenSubmit("#addTestimonialForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#testimonialSave");
              t.button("loading");
              var a = new FormData($(this)[0]);
              $.ajax({
                url: $("#indexTestimonialCreateUrl").val(),
                type: "POST",
                dataType: "json",
                data: a,
                processData: !1,
                contentType: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#add_testimonials").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  printErrorMessage("#testimonialErrorsBox", e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listen("click", ".edit-testimonial-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#indexTestimonialUrl").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      e.success &&
                        (e.data.document_url.split(".").pop().toLowerCase(),
                        $("#editTestimonialPreviewImage").css(
                          "background-image",
                          'url("' + e.data.document_url + '")'
                        ),
                        $("#testimonialId").val(e.data.id),
                        $("#editTestimonialName").val(e.data.name),
                        $("#editTestimonialDescription").val(e.data.description),
                        isEmpty(e.data.document_url)
                          ? ($("#testimonialDocumentUrl").hide(),
                            $(".btn-view").hide())
                          : ($("#testimonialDocumentUrl").show(),
                            $(".btn-view").show(),
                            $("#testimonialDocumentUrl").attr(
                              "href",
                              e.data.document_url
                            )),
                        $("#edit_testimonials").modal("show"),
                        ajaxCallCompleted());
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenKeyup(".testimonialDescription", function () {
              $(".description").attr("maxlength", 150);
            }),
            listenSubmit("#editTestimonialForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editTestimonialSave");
              t.button("loading");
              var a = $("#testimonialId").val(),
                n = new FormData($(this)[0]);
              $.ajax({
                url: $("#indexTestimonialUrl").val() + "/" + a,
                type: "post",
                data: n,
                processData: !1,
                contentType: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_testimonials").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  manageAjaxErrors(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenHiddenBsModal("#add_testimonials", function () {
              resetModalForm(
                "#addTestimonialForm",
                "#add_testimonials #testimonialErrorsBox"
              ),
                $("#testimonialPreviewImage")
                  .attr(
                    "src",
                    $("#indexTestimonialDefaultDocumentImageUrl").val()
                  )
                  .css(
                    "background-image",
                    "url(".concat(
                      $("#indexTestimonialDefaultDocumentImageUrl").val(),
                      ")"
                    )
                  );
            }),
            listenShownBsModal("#add_testimonials", function () {
              $("#add_testimonials #testimonialErrorsBox").show(),
                $("#add_testimonials #testimonialErrorsBox").addClass("d-none");
            }),
            listenHiddenBsModal("#edit_testimonials", function () {
              resetModalForm(
                "#editTestimonialForm",
                "#edit_testimonials #editTestimonialErrorsBox"
              ),
                $(".editTestimonialPreviewImage")
                  .attr(
                    "src",
                    $("#indexTestimonialDefaultDocumentImageUrl").val()
                  )
                  .css(
                    "background-image",
                    "url(".concat(
                      $("#indexTestimonialDefaultDocumentImageUrl").val(),
                      ")"
                    )
                  );
            }),
            listenShownBsModal("#edit_testimonials", function () {
              $("#edit_testimonials #editTestimonialErrorsBox").show(),
                $("#edit_testimonials #editTestimonialErrorsBox").addClass(
                  "d-none"
                );
            }),
            listen("click", ".delete-testimonial-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#indexTestimonialUrl").val() + "/" + t,
                "",
                $("#Testimonial").val()
              );
            }),
            listen("click", ".view-testimonial-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t = $(e.currentTarget).attr("data-id");
                $.ajax({
                  url: $("#indexTestimonialUrl").val() + "/" + t,
                  type: "GET",
                  success: function (e) {
                    e.success &&
                      ($("#showTestimonialName").html(""),
                      $("#showTestimonialDescription").html(""),
                      $("#showTestimonialName").append(e.data.name),
                      $("#showTestimonialDescription").append(e.data.description),
                      $("#userProfilePicture").attr("src", e.data.document_url),
                      $("#show_testimonials").appendTo("body").modal("show"),
                      ajaxCallCompleted());
                  },
                  error: function (e) {
                    manageAjaxErrors(e);
                  }
                });
              }
            });
        },
        3878: (e, t, a) => {
          "use strict";
          var n = {};
          a.r(n),
            a.d(n, {
              PageRenderer: () => ce,
              PageSnapshot: () => z,
              clearCache: () => be,
              connectStreamSource: () => Me,
              disconnectStreamSource: () => we,
              navigator: () => ge,
              registerAdapter: () => ve,
              renderStreamMessage: () => $e,
              session: () => pe,
              setConfirmMethod: () => De,
              setProgressBarDelay: () => Le,
              start: () => fe,
              visit: () => ye
            }),
            (function () {
              if (
                void 0 === window.Reflect ||
                void 0 === window.customElements ||
                window.customElements.polyfillWrapFlushCallback
              )
                return;
              const e = HTMLElement,
                t = function () {
                  return Reflect.construct(e, [], this.constructor);
                };
              (window.HTMLElement = t),
                (HTMLElement.prototype = e.prototype),
                (HTMLElement.prototype.constructor = HTMLElement),
                Object.setPrototypeOf(HTMLElement, e);
            })(),
            (function (e) {
              function t(e, t, a) {
                throw new e(
                  "Failed to execute 'requestSubmit' on 'HTMLFormElement': " +
                    t +
                    ".",
                  a
                );
              }
              "function" != typeof e.requestSubmit &&
                (e.requestSubmit = function (e) {
                  e
                    ? (!(function (e, a) {
                        e instanceof HTMLElement ||
                          t(
                            TypeError,
                            "parameter 1 is not of type 'HTMLElement'"
                          ),
                          "submit" == e.type ||
                            t(
                              TypeError,
                              "The specified element is not a submit button"
                            ),
                          e.form == a ||
                            t(
                              DOMException,
                              "The specified element is not owned by this form element",
                              "NotFoundError"
                            );
                      })(e, this),
                      e.click())
                    : (((e = document.createElement("input")).type = "submit"),
                      (e.hidden = !0),
                      this.appendChild(e),
                      e.click(),
                      this.removeChild(e));
                });
            })(HTMLFormElement.prototype);
          const i = new WeakMap();
          function r(e) {
            const t = (function (e) {
              const t =
                  e instanceof Element
                    ? e
                    : e instanceof Node
                    ? e.parentElement
                    : null,
                a = t ? t.closest("input, button") : null;
              return "submit" == (null == a ? void 0 : a.type) ? a : null;
            })(e.target);
            t && t.form && i.set(t.form, t);
          }
          var s, o, d, l, c, u;
          !(function () {
            if ("submitter" in Event.prototype) return;
            let e;
            if (
              "SubmitEvent" in window &&
              /Apple Computer/.test(navigator.vendor)
            )
              e = window.SubmitEvent.prototype;
            else {
              if ("SubmitEvent" in window) return;
              e = window.Event.prototype;
            }
            addEventListener("click", r, !0),
              Object.defineProperty(e, "submitter", {
                get() {
                  if (
                    "submit" == this.type &&
                    this.target instanceof HTMLFormElement
                  )
                    return i.get(this.target);
                }
              });
          })(),
            (function (e) {
              (e.eager = "eager"), (e.lazy = "lazy");
            })(s || (s = {}));
          class m extends HTMLElement {
            constructor() {
              super(),
                (this.loaded = Promise.resolve()),
                (this.delegate = new m.delegateConstructor(this));
            }
            static get observedAttributes() {
              return ["disabled", "loading", "src"];
            }
            connectedCallback() {
              this.delegate.connect();
            }
            disconnectedCallback() {
              this.delegate.disconnect();
            }
            reload() {
              const { src: e } = this;
              (this.src = null), (this.src = e);
            }
            attributeChangedCallback(e) {
              "loading" == e
                ? this.delegate.loadingStyleChanged()
                : "src" == e
                ? this.delegate.sourceURLChanged()
                : this.delegate.disabledChanged();
            }
            get src() {
              return this.getAttribute("src");
            }
            set src(e) {
              e ? this.setAttribute("src", e) : this.removeAttribute("src");
            }
            get loading() {
              return (function (e) {
                switch (e.toLowerCase()) {
                  case "lazy":
                    return s.lazy;
                  default:
                    return s.eager;
                }
              })(this.getAttribute("loading") || "");
            }
            set loading(e) {
              e
                ? this.setAttribute("loading", e)
                : this.removeAttribute("loading");
            }
            get disabled() {
              return this.hasAttribute("disabled");
            }
            set disabled(e) {
              e
                ? this.setAttribute("disabled", "")
                : this.removeAttribute("disabled");
            }
            get autoscroll() {
              return this.hasAttribute("autoscroll");
            }
            set autoscroll(e) {
              e
                ? this.setAttribute("autoscroll", "")
                : this.removeAttribute("autoscroll");
            }
            get complete() {
              return !this.delegate.isLoading;
            }
            get isActive() {
              return this.ownerDocument === document && !this.isPreview;
            }
            get isPreview() {
              var e, t;
              return null ===
                (t =
                  null === (e = this.ownerDocument) || void 0 === e
                    ? void 0
                    : e.documentElement) || void 0 === t
                ? void 0
                : t.hasAttribute("data-turbo-preview");
            }
          }
          function _(e) {
            return new URL(e.toString(), document.baseURI);
          }
          function h(e) {
            let t;
            return e.hash
              ? e.hash.slice(1)
              : (t = e.href.match(/#(.*)$/))
              ? t[1]
              : void 0;
          }
          function p(e, t) {
            return _(
              (null == t ? void 0 : t.getAttribute("formaction")) ||
                e.getAttribute("action") ||
                e.action
            );
          }
          function g(e) {
            return (
              ((function (e) {
                return (function (e) {
                  return e.pathname.split("/").slice(1);
                })(e).slice(-1)[0];
              })(e).match(/\.[^.]*$/) || [])[0] || ""
            );
          }
          function f(e, t) {
            const a = (function (e) {
              return (t = e.origin + e.pathname), t.endsWith("/") ? t : t + "/";
              var t;
            })(t);
            return e.href === _(a).href || e.href.startsWith(a);
          }
          function v(e, t) {
            return f(e, t) && !!g(e).match(/^(?:|\.(?:htm|html|xhtml))$/);
          }
          function y(e) {
            const t = h(e);
            return null != t ? e.href.slice(0, -(t.length + 1)) : e.href;
          }
          function M(e) {
            return y(e);
          }
          class w {
            constructor(e) {
              this.response = e;
            }
            get succeeded() {
              return this.response.ok;
            }
            get failed() {
              return !this.succeeded;
            }
            get clientError() {
              return this.statusCode >= 400 && this.statusCode <= 499;
            }
            get serverError() {
              return this.statusCode >= 500 && this.statusCode <= 599;
            }
            get redirected() {
              return this.response.redirected;
            }
            get location() {
              return _(this.response.url);
            }
            get isHTML() {
              return (
                this.contentType &&
                this.contentType.match(
                  /^(?:text\/([^\s;,]+\b)?html|application\/xhtml\+xml)\b/
                )
              );
            }
            get statusCode() {
              return this.response.status;
            }
            get contentType() {
              return this.header("Content-Type");
            }
            get responseText() {
              return this.response.clone().text();
            }
            get responseHTML() {
              return this.isHTML
                ? this.response.clone().text()
                : Promise.resolve(void 0);
            }
            header(e) {
              return this.response.headers.get(e);
            }
          }
          function $(e, { target: t, cancelable: a, detail: n } = {}) {
            const i = new CustomEvent(e, {
              cancelable: a,
              bubbles: !0,
              detail: n
            });
            return (
              t && t.isConnected
                ? t.dispatchEvent(i)
                : document.documentElement.dispatchEvent(i),
              i
            );
          }
          function b() {
            return new Promise((e) => requestAnimationFrame(() => e()));
          }
          function L(e = "") {
            return new DOMParser().parseFromString(e, "text/html");
          }
          function D(e, ...t) {
            const a = (function (e, t) {
                return e.reduce(
                  (e, a, n) => e + a + (null == t[n] ? "" : t[n]),
                  ""
                );
              })(e, t)
                .replace(/^\n/, "")
                .split("\n"),
              n = a[0].match(/^\s+/),
              i = n ? n[0].length : 0;
            return a.map((e) => e.slice(i)).join("\n");
          }
          function k() {
            return Array.apply(null, { length: 36 })
              .map((e, t) =>
                8 == t || 13 == t || 18 == t || 23 == t
                  ? "-"
                  : 14 == t
                  ? "4"
                  : 19 == t
                  ? (Math.floor(4 * Math.random()) + 8).toString(16)
                  : Math.floor(15 * Math.random()).toString(16)
              )
              .join("");
          }
          function Y(e, ...t) {
            for (const a of t.map((t) =>
              null == t ? void 0 : t.getAttribute(e)
            ))
              if ("string" == typeof a) return a;
            return null;
          }
          function T(...e) {
            for (const t of e)
              "turbo-frame" == t.localName && t.setAttribute("busy", ""),
                t.setAttribute("aria-busy", "true");
          }
          function S(...e) {
            for (const t of e)
              "turbo-frame" == t.localName && t.removeAttribute("busy"),
                t.removeAttribute("aria-busy");
          }
          !(function (e) {
            (e[(e.get = 0)] = "get"),
              (e[(e.post = 1)] = "post"),
              (e[(e.put = 2)] = "put"),
              (e[(e.patch = 3)] = "patch"),
              (e[(e.delete = 4)] = "delete");
          })(o || (o = {}));
          class x {
            constructor(e, t, a, n = new URLSearchParams(), i = null) {
              (this.abortController = new AbortController()),
                (this.resolveRequestPromise = (e) => {}),
                (this.delegate = e),
                (this.method = t),
                (this.headers = this.defaultHeaders),
                (this.body = n),
                (this.url = a),
                (this.target = i);
            }
            get location() {
              return this.url;
            }
            get params() {
              return this.url.searchParams;
            }
            get entries() {
              return this.body ? Array.from(this.body.entries()) : [];
            }
            cancel() {
              this.abortController.abort();
            }
            async perform() {
              var e, t;
              const { fetchOptions: a } = this;
              null === (t = (e = this.delegate).prepareHeadersForRequest) ||
                void 0 === t ||
                t.call(e, this.headers, this),
                await this.allowRequestToBeIntercepted(a);
              try {
                this.delegate.requestStarted(this);
                const e = await fetch(this.url.href, a);
                return await this.receive(e);
              } catch (e) {
                if ("AbortError" !== e.name)
                  throw (this.delegate.requestErrored(this, e), e);
              } finally {
                this.delegate.requestFinished(this);
              }
            }
            async receive(e) {
              const t = new w(e);
              return (
                $("turbo:before-fetch-response", {
                  cancelable: !0,
                  detail: { fetchResponse: t },
                  target: this.target
                }).defaultPrevented
                  ? this.delegate.requestPreventedHandlingResponse(this, t)
                  : t.succeeded
                  ? this.delegate.requestSucceededWithResponse(this, t)
                  : this.delegate.requestFailedWithResponse(this, t),
                t
              );
            }
            get fetchOptions() {
              var e;
              return {
                method: o[this.method].toUpperCase(),
                credentials: "same-origin",
                headers: this.headers,
                redirect: "follow",
                body: this.isIdempotent ? null : this.body,
                signal: this.abortSignal,
                referrer:
                  null === (e = this.delegate.referrer) || void 0 === e
                    ? void 0
                    : e.href
              };
            }
            get defaultHeaders() {
              return { Accept: "text/html, application/xhtml+xml" };
            }
            get isIdempotent() {
              return this.method == o.get;
            }
            get abortSignal() {
              return this.abortController.signal;
            }
            async allowRequestToBeIntercepted(e) {
              const t = new Promise((e) => (this.resolveRequestPromise = e));
              $("turbo:before-fetch-request", {
                cancelable: !0,
                detail: {
                  fetchOptions: e,
                  url: this.url,
                  resume: this.resolveRequestPromise
                },
                target: this.target
              }).defaultPrevented && (await t);
            }
          }
          class C {
            constructor(e, t) {
              (this.started = !1),
                (this.intersect = (e) => {
                  const t = e.slice(-1)[0];
                  (null == t ? void 0 : t.isIntersecting) &&
                    this.delegate.elementAppearedInViewport(this.element);
                }),
                (this.delegate = e),
                (this.element = t),
                (this.intersectionObserver = new IntersectionObserver(
                  this.intersect
                ));
            }
            start() {
              this.started ||
                ((this.started = !0),
                this.intersectionObserver.observe(this.element));
            }
            stop() {
              this.started &&
                ((this.started = !1),
                this.intersectionObserver.unobserve(this.element));
            }
          }
          class I {
            constructor(e) {
              (this.templateElement = document.createElement("template")),
                (this.templateElement.innerHTML = e);
            }
            static wrap(e) {
              return "string" == typeof e ? new this(e) : e;
            }
            get fragment() {
              const e = document.createDocumentFragment();
              for (const t of this.foreignElements)
                e.appendChild(document.importNode(t, !0));
              return e;
            }
            get foreignElements() {
              return this.templateChildren.reduce(
                (e, t) =>
                  "turbo-stream" == t.tagName.toLowerCase() ? [...e, t] : e,
                []
              );
            }
            get templateChildren() {
              return Array.from(this.templateElement.content.children);
            }
          }
          (I.contentType = "text/vnd.turbo-stream.html"),
            (function (e) {
              (e[(e.initialized = 0)] = "initialized"),
                (e[(e.requesting = 1)] = "requesting"),
                (e[(e.waiting = 2)] = "waiting"),
                (e[(e.receiving = 3)] = "receiving"),
                (e[(e.stopping = 4)] = "stopping"),
                (e[(e.stopped = 5)] = "stopped");
            })(d || (d = {})),
            (function (e) {
              (e.urlEncoded = "application/x-www-form-urlencoded"),
                (e.multipart = "multipart/form-data"),
                (e.plain = "text/plain");
            })(l || (l = {}));
          class P {
            constructor(e, t, a, n = !1) {
              (this.state = d.initialized),
                (this.delegate = e),
                (this.formElement = t),
                (this.submitter = a),
                (this.formData = (function (e, t) {
                  const a = new FormData(e),
                    n = null == t ? void 0 : t.getAttribute("name"),
                    i = null == t ? void 0 : t.getAttribute("value");
                  n && null != i && a.get(n) != i && a.append(n, i);
                  return a;
                })(t, a)),
                (this.location = _(this.action)),
                this.method == o.get &&
                  (function (e, t) {
                    const a = new URLSearchParams();
                    for (const [e, n] of t) n instanceof File || a.append(e, n);
                    e.search = a.toString();
                  })(this.location, [...this.body.entries()]),
                (this.fetchRequest = new x(
                  this,
                  this.method,
                  this.location,
                  this.body,
                  this.formElement
                )),
                (this.mustRedirect = n);
            }
            static confirmMethod(e, t) {
              return confirm(e);
            }
            get method() {
              var e;
              return (
                (function (e) {
                  switch (e.toLowerCase()) {
                    case "get":
                      return o.get;
                    case "post":
                      return o.post;
                    case "put":
                      return o.put;
                    case "patch":
                      return o.patch;
                    case "delete":
                      return o.delete;
                  }
                })(
                  (
                    (null === (e = this.submitter) || void 0 === e
                      ? void 0
                      : e.getAttribute("formmethod")) ||
                    this.formElement.getAttribute("method") ||
                    ""
                  ).toLowerCase()
                ) || o.get
              );
            }
            get action() {
              var e;
              const t =
                "string" == typeof this.formElement.action
                  ? this.formElement.action
                  : null;
              return (
                (null === (e = this.submitter) || void 0 === e
                  ? void 0
                  : e.getAttribute("formaction")) ||
                this.formElement.getAttribute("action") ||
                t ||
                ""
              );
            }
            get body() {
              return this.enctype == l.urlEncoded || this.method == o.get
                ? new URLSearchParams(this.stringFormData)
                : this.formData;
            }
            get enctype() {
              var e;
              return (function (e) {
                switch (e.toLowerCase()) {
                  case l.multipart:
                    return l.multipart;
                  case l.plain:
                    return l.plain;
                  default:
                    return l.urlEncoded;
                }
              })(
                (null === (e = this.submitter) || void 0 === e
                  ? void 0
                  : e.getAttribute("formenctype")) || this.formElement.enctype
              );
            }
            get isIdempotent() {
              return this.fetchRequest.isIdempotent;
            }
            get stringFormData() {
              return [...this.formData].reduce(
                (e, [t, a]) => e.concat("string" == typeof a ? [[t, a]] : []),
                []
              );
            }
            get confirmationMessage() {
              return this.formElement.getAttribute("data-turbo-confirm");
            }
            get needsConfirmation() {
              return null !== this.confirmationMessage;
            }
            async start() {
              const { initialized: e, requesting: t } = d;
              if (this.needsConfirmation) {
                if (!P.confirmMethod(this.confirmationMessage, this.formElement))
                  return;
              }
              if (this.state == e)
                return (this.state = t), this.fetchRequest.perform();
            }
            stop() {
              const { stopping: e, stopped: t } = d;
              if (this.state != e && this.state != t)
                return (this.state = e), this.fetchRequest.cancel(), !0;
            }
            prepareHeadersForRequest(e, t) {
              if (!t.isIdempotent) {
                const t =
                  (function (e) {
                    if (null != e) {
                      const t = (document.cookie
                        ? document.cookie.split("; ")
                        : []
                      ).find((t) => t.startsWith(e));
                      if (t) {
                        const e = t.split("=").slice(1).join("=");
                        return e ? decodeURIComponent(e) : void 0;
                      }
                    }
                  })(E("csrf-param")) || E("csrf-token");
                t && (e["X-CSRF-Token"] = t),
                  (e.Accept = [I.contentType, e.Accept].join(", "));
              }
            }
            requestStarted(e) {
              var t;
              (this.state = d.waiting),
                null === (t = this.submitter) ||
                  void 0 === t ||
                  t.setAttribute("disabled", ""),
                $("turbo:submit-start", {
                  target: this.formElement,
                  detail: { formSubmission: this }
                }),
                this.delegate.formSubmissionStarted(this);
            }
            requestPreventedHandlingResponse(e, t) {
              this.result = { success: t.succeeded, fetchResponse: t };
            }
            requestSucceededWithResponse(e, t) {
              if (t.clientError || t.serverError)
                this.delegate.formSubmissionFailedWithResponse(this, t);
              else if (
                this.requestMustRedirect(e) &&
                (function (e) {
                  return 200 == e.statusCode && !e.redirected;
                })(t)
              ) {
                const e = new Error(
                  "Form responses must redirect to another location"
                );
                this.delegate.formSubmissionErrored(this, e);
              } else
                (this.state = d.receiving),
                  (this.result = { success: !0, fetchResponse: t }),
                  this.delegate.formSubmissionSucceededWithResponse(this, t);
            }
            requestFailedWithResponse(e, t) {
              (this.result = { success: !1, fetchResponse: t }),
                this.delegate.formSubmissionFailedWithResponse(this, t);
            }
            requestErrored(e, t) {
              (this.result = { success: !1, error: t }),
                this.delegate.formSubmissionErrored(this, t);
            }
            requestFinished(e) {
              var t;
              (this.state = d.stopped),
                null === (t = this.submitter) ||
                  void 0 === t ||
                  t.removeAttribute("disabled"),
                $("turbo:submit-end", {
                  target: this.formElement,
                  detail: Object.assign({ formSubmission: this }, this.result)
                }),
                this.delegate.formSubmissionFinished(this);
            }
            requestMustRedirect(e) {
              return !e.isIdempotent && this.mustRedirect;
            }
          }
          function E(e) {
            const t = document.querySelector(`meta[name="${e}"]`);
            return t && t.content;
          }
          class j {
            constructor(e) {
              this.element = e;
            }
            get children() {
              return [...this.element.children];
            }
            hasAnchor(e) {
              return null != this.getElementForAnchor(e);
            }
            getElementForAnchor(e) {
              return e
                ? this.element.querySelector(`[id='${e}'], a[name='${e}']`)
                : null;
            }
            get isConnected() {
              return this.element.isConnected;
            }
            get firstAutofocusableElement() {
              return this.element.querySelector("[autofocus]");
            }
            get permanentElements() {
              return [
                ...this.element.querySelectorAll("[id][data-turbo-permanent]")
              ];
            }
            getPermanentElementById(e) {
              return this.element.querySelector(`#${e}[data-turbo-permanent]`);
            }
            getPermanentElementMapForSnapshot(e) {
              const t = {};
              for (const a of this.permanentElements) {
                const { id: n } = a,
                  i = e.getPermanentElementById(n);
                i && (t[n] = [a, i]);
              }
              return t;
            }
          }
          class H {
            constructor(e, t) {
              (this.submitBubbled = (e) => {
                const t = e.target;
                if (
                  !e.defaultPrevented &&
                  t instanceof HTMLFormElement &&
                  t.closest("turbo-frame, html") == this.element
                ) {
                  const a = e.submitter || void 0;
                  "dialog" !=
                    ((null == a ? void 0 : a.getAttribute("formmethod")) ||
                      t.method) &&
                    this.delegate.shouldInterceptFormSubmission(t, a) &&
                    (e.preventDefault(),
                    e.stopImmediatePropagation(),
                    this.delegate.formSubmissionIntercepted(t, a));
                }
              }),
                (this.delegate = e),
                (this.element = t);
            }
            start() {
              this.element.addEventListener("submit", this.submitBubbled);
            }
            stop() {
              this.element.removeEventListener("submit", this.submitBubbled);
            }
          }
          class F {
            constructor(e, t) {
              (this.resolveRenderPromise = (e) => {}),
                (this.resolveInterceptionPromise = (e) => {}),
                (this.delegate = e),
                (this.element = t);
            }
            scrollToAnchor(e) {
              const t = this.snapshot.getElementForAnchor(e);
              t
                ? (this.scrollToElement(t), this.focusElement(t))
                : this.scrollToPosition({ x: 0, y: 0 });
            }
            scrollToAnchorFromLocation(e) {
              this.scrollToAnchor(h(e));
            }
            scrollToElement(e) {
              e.scrollIntoView();
            }
            focusElement(e) {
              e instanceof HTMLElement &&
                (e.hasAttribute("tabindex")
                  ? e.focus()
                  : (e.setAttribute("tabindex", "-1"),
                    e.focus(),
                    e.removeAttribute("tabindex")));
            }
            scrollToPosition({ x: e, y: t }) {
              this.scrollRoot.scrollTo(e, t);
            }
            scrollToTop() {
              this.scrollToPosition({ x: 0, y: 0 });
            }
            get scrollRoot() {
              return window;
            }
            async render(e) {
              const { isPreview: t, shouldRender: a, newSnapshot: n } = e;
              if (a)
                try {
                  (this.renderPromise = new Promise(
                    (e) => (this.resolveRenderPromise = e)
                  )),
                    (this.renderer = e),
                    this.prepareToRenderSnapshot(e);
                  const a = new Promise(
                    (e) => (this.resolveInterceptionPromise = e)
                  );
                  this.delegate.allowsImmediateRender(
                    n,
                    this.resolveInterceptionPromise
                  ) || (await a),
                    await this.renderSnapshot(e),
                    this.delegate.viewRenderedSnapshot(n, t),
                    this.finishRenderingSnapshot(e);
                } finally {
                  delete this.renderer,
                    this.resolveRenderPromise(void 0),
                    delete this.renderPromise;
                }
              else this.invalidate();
            }
            invalidate() {
              this.delegate.viewInvalidated();
            }
            prepareToRenderSnapshot(e) {
              this.markAsPreview(e.isPreview), e.prepareToRender();
            }
            markAsPreview(e) {
              e
                ? this.element.setAttribute("data-turbo-preview", "")
                : this.element.removeAttribute("data-turbo-preview");
            }
            async renderSnapshot(e) {
              await e.render();
            }
            finishRenderingSnapshot(e) {
              e.finishRendering();
            }
          }
          class O extends F {
            invalidate() {
              this.element.innerHTML = "";
            }
            get snapshot() {
              return new j(this.element);
            }
          }
          class B {
            constructor(e, t) {
              (this.clickBubbled = (e) => {
                this.respondsToEventTarget(e.target)
                  ? (this.clickEvent = e)
                  : delete this.clickEvent;
              }),
                (this.linkClicked = (e) => {
                  this.clickEvent &&
                    this.respondsToEventTarget(e.target) &&
                    e.target instanceof Element &&
                    this.delegate.shouldInterceptLinkClick(
                      e.target,
                      e.detail.url
                    ) &&
                    (this.clickEvent.preventDefault(),
                    e.preventDefault(),
                    this.delegate.linkClickIntercepted(e.target, e.detail.url)),
                    delete this.clickEvent;
                }),
                (this.willVisit = () => {
                  delete this.clickEvent;
                }),
                (this.delegate = e),
                (this.element = t);
            }
            start() {
              this.element.addEventListener("click", this.clickBubbled),
                document.addEventListener("turbo:click", this.linkClicked),
                document.addEventListener("turbo:before-visit", this.willVisit);
            }
            stop() {
              this.element.removeEventListener("click", this.clickBubbled),
                document.removeEventListener("turbo:click", this.linkClicked),
                document.removeEventListener(
                  "turbo:before-visit",
                  this.willVisit
                );
            }
            respondsToEventTarget(e) {
              const t =
                e instanceof Element
                  ? e
                  : e instanceof Node
                  ? e.parentElement
                  : null;
              return t && t.closest("turbo-frame, html") == this.element;
            }
          }
          class A {
            constructor(e, t, a, n = !0) {
              (this.currentSnapshot = e),
                (this.newSnapshot = t),
                (this.isPreview = a),
                (this.willRender = n),
                (this.promise = new Promise(
                  (e, t) => (this.resolvingFunctions = { resolve: e, reject: t })
                ));
            }
            get shouldRender() {
              return !0;
            }
            prepareToRender() {}
            finishRendering() {
              this.resolvingFunctions &&
                (this.resolvingFunctions.resolve(),
                delete this.resolvingFunctions);
            }
            createScriptElement(e) {
              if ("false" == e.getAttribute("data-turbo-eval")) return e;
              {
                const t = document.createElement("script");
                return (
                  this.cspNonce && (t.nonce = this.cspNonce),
                  (t.textContent = e.textContent),
                  (t.async = !1),
                  (function (e, t) {
                    for (const { name: a, value: n } of [...t.attributes])
                      e.setAttribute(a, n);
                  })(t, e),
                  t
                );
              }
            }
            preservingPermanentElements(e) {
              (class {
                constructor(e) {
                  this.permanentElementMap = e;
                }
                static preservingPermanentElements(e, t) {
                  const a = new this(e);
                  a.enter(), t(), a.leave();
                }
                enter() {
                  for (const e in this.permanentElementMap) {
                    const [, t] = this.permanentElementMap[e];
                    this.replaceNewPermanentElementWithPlaceholder(t);
                  }
                }
                leave() {
                  for (const e in this.permanentElementMap) {
                    const [t] = this.permanentElementMap[e];
                    this.replaceCurrentPermanentElementWithClone(t),
                      this.replacePlaceholderWithPermanentElement(t);
                  }
                }
                replaceNewPermanentElementWithPlaceholder(e) {
                  const t = (function (e) {
                    const t = document.createElement("meta");
                    return (
                      t.setAttribute("name", "turbo-permanent-placeholder"),
                      t.setAttribute("content", e.id),
                      t
                    );
                  })(e);
                  e.replaceWith(t);
                }
                replaceCurrentPermanentElementWithClone(e) {
                  const t = e.cloneNode(!0);
                  e.replaceWith(t);
                }
                replacePlaceholderWithPermanentElement(e) {
                  const t = this.getPlaceholderById(e.id);
                  null == t || t.replaceWith(e);
                }
                getPlaceholderById(e) {
                  return this.placeholders.find((t) => t.content == e);
                }
                get placeholders() {
                  return [
                    ...document.querySelectorAll(
                      "meta[name=turbo-permanent-placeholder][content]"
                    )
                  ];
                }
              }.preservingPermanentElements(this.permanentElementMap, e));
            }
            focusFirstAutofocusableElement() {
              const e = this.connectedSnapshot.firstAutofocusableElement;
              (function (e) {
                return e && "function" == typeof e.focus;
              })(e) && e.focus();
            }
            get connectedSnapshot() {
              return this.newSnapshot.isConnected
                ? this.newSnapshot
                : this.currentSnapshot;
            }
            get currentElement() {
              return this.currentSnapshot.element;
            }
            get newElement() {
              return this.newSnapshot.element;
            }
            get permanentElementMap() {
              return this.currentSnapshot.getPermanentElementMapForSnapshot(
                this.newSnapshot
              );
            }
            get cspNonce() {
              var e;
              return null ===
                (e = document.head.querySelector('meta[name="csp-nonce"]')) ||
                void 0 === e
                ? void 0
                : e.getAttribute("content");
            }
          }
          class R extends A {
            get shouldRender() {
              return !0;
            }
            async render() {
              await b(),
                this.preservingPermanentElements(() => {
                  this.loadFrameElement();
                }),
                this.scrollFrameIntoView(),
                await b(),
                this.focusFirstAutofocusableElement(),
                await b(),
                this.activateScriptElements();
            }
            loadFrameElement() {
              var e;
              const t = document.createRange();
              t.selectNodeContents(this.currentElement), t.deleteContents();
              const a = this.newElement,
                n =
                  null === (e = a.ownerDocument) || void 0 === e
                    ? void 0
                    : e.createRange();
              n &&
                (n.selectNodeContents(a),
                this.currentElement.appendChild(n.extractContents()));
            }
            scrollFrameIntoView() {
              if (this.currentElement.autoscroll || this.newElement.autoscroll) {
                const a = this.currentElement.firstElementChild,
                  n =
                    ((e = this.currentElement.getAttribute(
                      "data-autoscroll-block"
                    )),
                    (t = "end"),
                    "end" == e || "start" == e || "center" == e || "nearest" == e
                      ? e
                      : t);
                if (a) return a.scrollIntoView({ block: n }), !0;
              }
              var e, t;
              return !1;
            }
            activateScriptElements() {
              for (const e of this.newScriptElements) {
                const t = this.createScriptElement(e);
                e.replaceWith(t);
              }
            }
            get newScriptElements() {
              return this.currentElement.querySelectorAll("script");
            }
          }
          class U {
            constructor() {
              (this.hiding = !1),
                (this.value = 0),
                (this.visible = !1),
                (this.trickle = () => {
                  this.setValue(this.value + Math.random() / 100);
                }),
                (this.stylesheetElement = this.createStylesheetElement()),
                (this.progressElement = this.createProgressElement()),
                this.installStylesheetElement(),
                this.setValue(0);
            }
            static get defaultCSS() {
              return D`
        .turbo-progress-bar {
          position: fixed;
          display: block;
          top: 0;
          left: 0;
          height: 3px;
          background: #0076ff;
          z-index: 9999;
          transition:
            width ${U.animationDuration}ms ease-out,
            opacity ${U.animationDuration / 2}ms ${
                U.animationDuration / 2
              }ms ease-in;
          transform: translate3d(0, 0, 0);
        }
      `;
            }
            show() {
              this.visible ||
                ((this.visible = !0),
                this.installProgressElement(),
                this.startTrickling());
            }
            hide() {
              this.visible &&
                !this.hiding &&
                ((this.hiding = !0),
                this.fadeProgressElement(() => {
                  this.uninstallProgressElement(),
                    this.stopTrickling(),
                    (this.visible = !1),
                    (this.hiding = !1);
                }));
            }
            setValue(e) {
              (this.value = e), this.refresh();
            }
            installStylesheetElement() {
              document.head.insertBefore(
                this.stylesheetElement,
                document.head.firstChild
              );
            }
            installProgressElement() {
              (this.progressElement.style.width = "0"),
                (this.progressElement.style.opacity = "1"),
                document.documentElement.insertBefore(
                  this.progressElement,
                  document.body
                ),
                this.refresh();
            }
            fadeProgressElement(e) {
              (this.progressElement.style.opacity = "0"),
                setTimeout(e, 1.5 * U.animationDuration);
            }
            uninstallProgressElement() {
              this.progressElement.parentNode &&
                document.documentElement.removeChild(this.progressElement);
            }
            startTrickling() {
              this.trickleInterval ||
                (this.trickleInterval = window.setInterval(
                  this.trickle,
                  U.animationDuration
                ));
            }
            stopTrickling() {
              window.clearInterval(this.trickleInterval),
                delete this.trickleInterval;
            }
            refresh() {
              requestAnimationFrame(() => {
                this.progressElement.style.width = 10 + 90 * this.value + "%";
              });
            }
            createStylesheetElement() {
              const e = document.createElement("style");
              return (e.type = "text/css"), (e.textContent = U.defaultCSS), e;
            }
            createProgressElement() {
              const e = document.createElement("div");
              return (e.className = "turbo-progress-bar"), e;
            }
          }
          U.animationDuration = 300;
          class q extends j {
            constructor() {
              super(...arguments),
                (this.detailsByOuterHTML = this.children
                  .filter(
                    (e) =>
                      !(function (e) {
                        return "noscript" == e.tagName.toLowerCase();
                      })(e)
                  )
                  .map((e) =>
                    (function (e) {
                      e.hasAttribute("nonce") && e.setAttribute("nonce", "");
                      return e;
                    })(e)
                  )
                  .reduce((e, t) => {
                    const { outerHTML: a } = t,
                      n =
                        a in e
                          ? e[a]
                          : { type: N(t), tracked: W(t), elements: [] };
                    return Object.assign(Object.assign({}, e), {
                      [a]: Object.assign(Object.assign({}, n), {
                        elements: [...n.elements, t]
                      })
                    });
                  }, {}));
            }
            get trackedElementSignature() {
              return Object.keys(this.detailsByOuterHTML)
                .filter((e) => this.detailsByOuterHTML[e].tracked)
                .join("");
            }
            getScriptElementsNotInSnapshot(e) {
              return this.getElementsMatchingTypeNotInSnapshot("script", e);
            }
            getStylesheetElementsNotInSnapshot(e) {
              return this.getElementsMatchingTypeNotInSnapshot("stylesheet", e);
            }
            getElementsMatchingTypeNotInSnapshot(e, t) {
              return Object.keys(this.detailsByOuterHTML)
                .filter((e) => !(e in t.detailsByOuterHTML))
                .map((e) => this.detailsByOuterHTML[e])
                .filter(({ type: t }) => t == e)
                .map(({ elements: [e] }) => e);
            }
            get provisionalElements() {
              return Object.keys(this.detailsByOuterHTML).reduce((e, t) => {
                const {
                  type: a,
                  tracked: n,
                  elements: i
                } = this.detailsByOuterHTML[t];
                return null != a || n
                  ? i.length > 1
                    ? [...e, ...i.slice(1)]
                    : e
                  : [...e, ...i];
              }, []);
            }
            getMetaValue(e) {
              const t = this.findMetaElementByName(e);
              return t ? t.getAttribute("content") : null;
            }
            findMetaElementByName(e) {
              return Object.keys(this.detailsByOuterHTML).reduce((t, a) => {
                const {
                  elements: [n]
                } = this.detailsByOuterHTML[a];
                return (function (e, t) {
                  return (
                    "meta" == e.tagName.toLowerCase() &&
                    e.getAttribute("name") == t
                  );
                })(n, e)
                  ? n
                  : t;
              }, void 0);
            }
          }
          function N(e) {
            return (function (e) {
              return "script" == e.tagName.toLowerCase();
            })(e)
              ? "script"
              : (function (e) {
                  const t = e.tagName.toLowerCase();
                  return (
                    "style" == t ||
                    ("link" == t && "stylesheet" == e.getAttribute("rel"))
                  );
                })(e)
              ? "stylesheet"
              : void 0;
          }
          function W(e) {
            return "reload" == e.getAttribute("data-turbo-track");
          }
          class z extends j {
            constructor(e, t) {
              super(e), (this.headSnapshot = t);
            }
            static fromHTMLString(e = "") {
              return this.fromDocument(L(e));
            }
            static fromElement(e) {
              return this.fromDocument(e.ownerDocument);
            }
            static fromDocument({ head: e, body: t }) {
              return new this(t, new q(e));
            }
            clone() {
              return new z(this.element.cloneNode(!0), this.headSnapshot);
            }
            get headElement() {
              return this.headSnapshot.element;
            }
            get rootLocation() {
              var e;
              return _(
                null !== (e = this.getSetting("root")) && void 0 !== e ? e : "/"
              );
            }
            get cacheControlValue() {
              return this.getSetting("cache-control");
            }
            get isPreviewable() {
              return "no-preview" != this.cacheControlValue;
            }
            get isCacheable() {
              return "no-cache" != this.cacheControlValue;
            }
            get isVisitable() {
              return "reload" != this.getSetting("visit-control");
            }
            getSetting(e) {
              return this.headSnapshot.getMetaValue(`turbo-${e}`);
            }
          }
          !(function (e) {
            (e.visitStart = "visitStart"),
              (e.requestStart = "requestStart"),
              (e.requestEnd = "requestEnd"),
              (e.visitEnd = "visitEnd");
          })(c || (c = {})),
            (function (e) {
              (e.initialized = "initialized"),
                (e.started = "started"),
                (e.canceled = "canceled"),
                (e.failed = "failed"),
                (e.completed = "completed");
            })(u || (u = {}));
          const V = {
            action: "advance",
            historyChanged: !1,
            visitCachedSnapshot: () => {},
            willRender: !0
          };
          var J, G;
          !(function (e) {
            (e[(e.networkFailure = 0)] = "networkFailure"),
              (e[(e.timeoutFailure = -1)] = "timeoutFailure"),
              (e[(e.contentTypeMismatch = -2)] = "contentTypeMismatch");
          })(J || (J = {}));
          class Q {
            constructor(e, t, a, n = {}) {
              (this.identifier = k()),
                (this.timingMetrics = {}),
                (this.followedRedirect = !1),
                (this.historyChanged = !1),
                (this.scrolled = !1),
                (this.snapshotCached = !1),
                (this.state = u.initialized),
                (this.delegate = e),
                (this.location = t),
                (this.restorationIdentifier = a || k());
              const {
                action: i,
                historyChanged: r,
                referrer: s,
                snapshotHTML: o,
                response: d,
                visitCachedSnapshot: l,
                willRender: c
              } = Object.assign(Object.assign({}, V), n);
              (this.action = i),
                (this.historyChanged = r),
                (this.referrer = s),
                (this.snapshotHTML = o),
                (this.response = d),
                (this.isSamePage = this.delegate.locationWithActionIsSamePage(
                  this.location,
                  this.action
                )),
                (this.visitCachedSnapshot = l),
                (this.willRender = c),
                (this.scrolled = !c);
            }
            get adapter() {
              return this.delegate.adapter;
            }
            get view() {
              return this.delegate.view;
            }
            get history() {
              return this.delegate.history;
            }
            get restorationData() {
              return this.history.getRestorationDataForIdentifier(
                this.restorationIdentifier
              );
            }
            get silent() {
              return this.isSamePage;
            }
            start() {
              this.state == u.initialized &&
                (this.recordTimingMetric(c.visitStart),
                (this.state = u.started),
                this.adapter.visitStarted(this),
                this.delegate.visitStarted(this));
            }
            cancel() {
              this.state == u.started &&
                (this.request && this.request.cancel(),
                this.cancelRender(),
                (this.state = u.canceled));
            }
            complete() {
              this.state == u.started &&
                (this.recordTimingMetric(c.visitEnd),
                (this.state = u.completed),
                this.adapter.visitCompleted(this),
                this.delegate.visitCompleted(this),
                this.followRedirect());
            }
            fail() {
              this.state == u.started &&
                ((this.state = u.failed), this.adapter.visitFailed(this));
            }
            changeHistory() {
              var e;
              if (!this.historyChanged) {
                const t =
                    this.location.href ===
                    (null === (e = this.referrer) || void 0 === e
                      ? void 0
                      : e.href)
                      ? "replace"
                      : this.action,
                  a = this.getHistoryMethodForAction(t);
                this.history.update(a, this.location, this.restorationIdentifier),
                  (this.historyChanged = !0);
              }
            }
            issueRequest() {
              this.hasPreloadedResponse()
                ? this.simulateRequest()
                : this.shouldIssueRequest() &&
                  !this.request &&
                  ((this.request = new x(this, o.get, this.location)),
                  this.request.perform());
            }
            simulateRequest() {
              this.response &&
                (this.startRequest(),
                this.recordResponse(),
                this.finishRequest());
            }
            startRequest() {
              this.recordTimingMetric(c.requestStart),
                this.adapter.visitRequestStarted(this);
            }
            recordResponse(e = this.response) {
              if (((this.response = e), e)) {
                const { statusCode: t } = e;
                K(t)
                  ? this.adapter.visitRequestCompleted(this)
                  : this.adapter.visitRequestFailedWithStatusCode(this, t);
              }
            }
            finishRequest() {
              this.recordTimingMetric(c.requestEnd),
                this.adapter.visitRequestFinished(this);
            }
            loadResponse() {
              if (this.response) {
                const { statusCode: e, responseHTML: t } = this.response;
                this.render(async () => {
                  this.cacheSnapshot(),
                    this.view.renderPromise && (await this.view.renderPromise),
                    K(e) && null != t
                      ? (await this.view.renderPage(
                          z.fromHTMLString(t),
                          !1,
                          this.willRender
                        ),
                        this.adapter.visitRendered(this),
                        this.complete())
                      : (await this.view.renderError(z.fromHTMLString(t)),
                        this.adapter.visitRendered(this),
                        this.fail());
                });
              }
            }
            getCachedSnapshot() {
              const e =
                this.view.getCachedSnapshotForLocation(this.location) ||
                this.getPreloadedSnapshot();
              if (
                e &&
                (!h(this.location) || e.hasAnchor(h(this.location))) &&
                ("restore" == this.action || e.isPreviewable)
              )
                return e;
            }
            getPreloadedSnapshot() {
              if (this.snapshotHTML) return z.fromHTMLString(this.snapshotHTML);
            }
            hasCachedSnapshot() {
              return null != this.getCachedSnapshot();
            }
            loadCachedSnapshot() {
              const e = this.getCachedSnapshot();
              if (e) {
                const t = this.shouldIssueRequest();
                this.render(async () => {
                  this.cacheSnapshot(),
                    this.isSamePage
                      ? this.adapter.visitRendered(this)
                      : (this.view.renderPromise &&
                          (await this.view.renderPromise),
                        await this.view.renderPage(e, t, this.willRender),
                        this.adapter.visitRendered(this),
                        t || this.complete());
                });
              }
            }
            followRedirect() {
              var e;
              this.redirectedToLocation &&
                !this.followedRedirect &&
                (null === (e = this.response) || void 0 === e
                  ? void 0
                  : e.redirected) &&
                (this.adapter.visitProposedToLocation(this.redirectedToLocation, {
                  action: "replace",
                  response: this.response
                }),
                (this.followedRedirect = !0));
            }
            goToSamePageAnchor() {
              this.isSamePage &&
                this.render(async () => {
                  this.cacheSnapshot(), this.adapter.visitRendered(this);
                });
            }
            requestStarted() {
              this.startRequest();
            }
            requestPreventedHandlingResponse(e, t) {}
            async requestSucceededWithResponse(e, t) {
              const a = await t.responseHTML,
                { redirected: n, statusCode: i } = t;
              null == a
                ? this.recordResponse({
                    statusCode: J.contentTypeMismatch,
                    redirected: n
                  })
                : ((this.redirectedToLocation = t.redirected
                    ? t.location
                    : void 0),
                  this.recordResponse({
                    statusCode: i,
                    responseHTML: a,
                    redirected: n
                  }));
            }
            async requestFailedWithResponse(e, t) {
              const a = await t.responseHTML,
                { redirected: n, statusCode: i } = t;
              null == a
                ? this.recordResponse({
                    statusCode: J.contentTypeMismatch,
                    redirected: n
                  })
                : this.recordResponse({
                    statusCode: i,
                    responseHTML: a,
                    redirected: n
                  });
            }
            requestErrored(e, t) {
              this.recordResponse({
                statusCode: J.networkFailure,
                redirected: !1
              });
            }
            requestFinished() {
              this.finishRequest();
            }
            performScroll() {
              this.scrolled ||
                ("restore" == this.action
                  ? this.scrollToRestoredPosition() ||
                    this.scrollToAnchor() ||
                    this.view.scrollToTop()
                  : this.scrollToAnchor() || this.view.scrollToTop(),
                this.isSamePage &&
                  this.delegate.visitScrolledToSamePageLocation(
                    this.view.lastRenderedLocation,
                    this.location
                  ),
                (this.scrolled = !0));
            }
            scrollToRestoredPosition() {
              const { scrollPosition: e } = this.restorationData;
              if (e) return this.view.scrollToPosition(e), !0;
            }
            scrollToAnchor() {
              const e = h(this.location);
              if (null != e) return this.view.scrollToAnchor(e), !0;
            }
            recordTimingMetric(e) {
              this.timingMetrics[e] = new Date().getTime();
            }
            getTimingMetrics() {
              return Object.assign({}, this.timingMetrics);
            }
            getHistoryMethodForAction(e) {
              switch (e) {
                case "replace":
                  return history.replaceState;
                case "advance":
                case "restore":
                  return history.pushState;
              }
            }
            hasPreloadedResponse() {
              return "object" == typeof this.response;
            }
            shouldIssueRequest() {
              return (
                !this.isSamePage &&
                ("restore" == this.action
                  ? !this.hasCachedSnapshot()
                  : this.willRender)
              );
            }
            cacheSnapshot() {
              this.snapshotCached ||
                (this.view
                  .cacheSnapshot()
                  .then((e) => e && this.visitCachedSnapshot(e)),
                (this.snapshotCached = !0));
            }
            async render(e) {
              this.cancelRender(),
                await new Promise((e) => {
                  this.frame = requestAnimationFrame(() => e());
                }),
                await e(),
                delete this.frame,
                this.performScroll();
            }
            cancelRender() {
              this.frame && (cancelAnimationFrame(this.frame), delete this.frame);
            }
          }
          function K(e) {
            return e >= 200 && e < 300;
          }
          class Z {
            constructor(e) {
              (this.progressBar = new U()),
                (this.showProgressBar = () => {
                  this.progressBar.show();
                }),
                (this.session = e);
            }
            visitProposedToLocation(e, t) {
              this.navigator.startVisit(e, k(), t);
            }
            visitStarted(e) {
              e.loadCachedSnapshot(),
                e.issueRequest(),
                e.changeHistory(),
                e.goToSamePageAnchor();
            }
            visitRequestStarted(e) {
              this.progressBar.setValue(0),
                e.hasCachedSnapshot() || "restore" != e.action
                  ? this.showVisitProgressBarAfterDelay()
                  : this.showProgressBar();
            }
            visitRequestCompleted(e) {
              e.loadResponse();
            }
            visitRequestFailedWithStatusCode(e, t) {
              switch (t) {
                case J.networkFailure:
                case J.timeoutFailure:
                case J.contentTypeMismatch:
                  return this.reload();
                default:
                  return e.loadResponse();
              }
            }
            visitRequestFinished(e) {
              this.progressBar.setValue(1), this.hideVisitProgressBar();
            }
            visitCompleted(e) {}
            pageInvalidated() {
              this.reload();
            }
            visitFailed(e) {}
            visitRendered(e) {}
            formSubmissionStarted(e) {
              this.progressBar.setValue(0), this.showFormProgressBarAfterDelay();
            }
            formSubmissionFinished(e) {
              this.progressBar.setValue(1), this.hideFormProgressBar();
            }
            showVisitProgressBarAfterDelay() {
              this.visitProgressBarTimeout = window.setTimeout(
                this.showProgressBar,
                this.session.progressBarDelay
              );
            }
            hideVisitProgressBar() {
              this.progressBar.hide(),
                null != this.visitProgressBarTimeout &&
                  (window.clearTimeout(this.visitProgressBarTimeout),
                  delete this.visitProgressBarTimeout);
            }
            showFormProgressBarAfterDelay() {
              null == this.formProgressBarTimeout &&
                (this.formProgressBarTimeout = window.setTimeout(
                  this.showProgressBar,
                  this.session.progressBarDelay
                ));
            }
            hideFormProgressBar() {
              this.progressBar.hide(),
                null != this.formProgressBarTimeout &&
                  (window.clearTimeout(this.formProgressBarTimeout),
                  delete this.formProgressBarTimeout);
            }
            reload() {
              window.location.reload();
            }
            get navigator() {
              return this.session.navigator;
            }
          }
          class X {
            constructor() {
              this.started = !1;
            }
            start() {
              this.started ||
                ((this.started = !0),
                addEventListener(
                  "turbo:before-cache",
                  this.removeStaleElements,
                  !1
                ));
            }
            stop() {
              this.started &&
                ((this.started = !1),
                removeEventListener(
                  "turbo:before-cache",
                  this.removeStaleElements,
                  !1
                ));
            }
            removeStaleElements() {
              const e = [
                ...document.querySelectorAll('[data-turbo-cache="false"]')
              ];
              for (const t of e) t.remove();
            }
          }
          class ee {
            constructor(e) {
              (this.started = !1),
                (this.submitCaptured = () => {
                  removeEventListener("submit", this.submitBubbled, !1),
                    addEventListener("submit", this.submitBubbled, !1);
                }),
                (this.submitBubbled = (e) => {
                  if (!e.defaultPrevented) {
                    const t =
                        e.target instanceof HTMLFormElement ? e.target : void 0,
                      a = e.submitter || void 0;
                    if (t) {
                      "dialog" !=
                        ((null == a ? void 0 : a.getAttribute("formmethod")) ||
                          t.getAttribute("method")) &&
                        this.delegate.willSubmitForm(t, a) &&
                        (e.preventDefault(), this.delegate.formSubmitted(t, a));
                    }
                  }
                }),
                (this.delegate = e);
            }
            start() {
              this.started ||
                (addEventListener("submit", this.submitCaptured, !0),
                (this.started = !0));
            }
            stop() {
              this.started &&
                (removeEventListener("submit", this.submitCaptured, !0),
                (this.started = !1));
            }
          }
          class te {
            constructor(e) {
              (this.element = e),
                (this.linkInterceptor = new B(this, e)),
                (this.formInterceptor = new H(this, e));
            }
            start() {
              this.linkInterceptor.start(), this.formInterceptor.start();
            }
            stop() {
              this.linkInterceptor.stop(), this.formInterceptor.stop();
            }
            shouldInterceptLinkClick(e, t) {
              return this.shouldRedirect(e);
            }
            linkClickIntercepted(e, t) {
              const a = this.findFrameElement(e);
              a && a.delegate.linkClickIntercepted(e, t);
            }
            shouldInterceptFormSubmission(e, t) {
              return this.shouldSubmit(e, t);
            }
            formSubmissionIntercepted(e, t) {
              const a = this.findFrameElement(e, t);
              a &&
                (a.removeAttribute("reloadable"),
                a.delegate.formSubmissionIntercepted(e, t));
            }
            shouldSubmit(e, t) {
              var a;
              const n = p(e, t),
                i = this.element.ownerDocument.querySelector(
                  'meta[name="turbo-root"]'
                ),
                r = _(
                  null !== (a = null == i ? void 0 : i.content) && void 0 !== a
                    ? a
                    : "/"
                );
              return this.shouldRedirect(e, t) && v(n, r);
            }
            shouldRedirect(e, t) {
              const a = this.findFrameElement(e, t);
              return !!a && a != e.closest("turbo-frame");
            }
            findFrameElement(e, t) {
              const a =
                (null == t ? void 0 : t.getAttribute("data-turbo-frame")) ||
                e.getAttribute("data-turbo-frame");
              if (a && "_top" != a) {
                const e = this.element.querySelector(`#${a}:not([disabled])`);
                if (e instanceof m) return e;
              }
            }
          }
          class ae {
            constructor(e) {
              (this.restorationIdentifier = k()),
                (this.restorationData = {}),
                (this.started = !1),
                (this.pageLoaded = !1),
                (this.onPopState = (e) => {
                  if (this.shouldHandlePopState()) {
                    const { turbo: t } = e.state || {};
                    if (t) {
                      this.location = new URL(window.location.href);
                      const { restorationIdentifier: e } = t;
                      (this.restorationIdentifier = e),
                        this.delegate.historyPoppedToLocationWithRestorationIdentifier(
                          this.location,
                          e
                        );
                    }
                  }
                }),
                (this.onPageLoad = async (e) => {
                  await Promise.resolve(), (this.pageLoaded = !0);
                }),
                (this.delegate = e);
            }
            start() {
              this.started ||
                (addEventListener("popstate", this.onPopState, !1),
                addEventListener("load", this.onPageLoad, !1),
                (this.started = !0),
                this.replace(new URL(window.location.href)));
            }
            stop() {
              this.started &&
                (removeEventListener("popstate", this.onPopState, !1),
                removeEventListener("load", this.onPageLoad, !1),
                (this.started = !1));
            }
            push(e, t) {
              this.update(history.pushState, e, t);
            }
            replace(e, t) {
              this.update(history.replaceState, e, t);
            }
            update(e, t, a = k()) {
              const n = { turbo: { restorationIdentifier: a } };
              e.call(history, n, "", t.href),
                (this.location = t),
                (this.restorationIdentifier = a);
            }
            getRestorationDataForIdentifier(e) {
              return this.restorationData[e] || {};
            }
            updateRestorationData(e) {
              const { restorationIdentifier: t } = this,
                a = this.restorationData[t];
              this.restorationData[t] = Object.assign(Object.assign({}, a), e);
            }
            assumeControlOfScrollRestoration() {
              var e;
              this.previousScrollRestoration ||
                ((this.previousScrollRestoration =
                  null !== (e = history.scrollRestoration) && void 0 !== e
                    ? e
                    : "auto"),
                (history.scrollRestoration = "manual"));
            }
            relinquishControlOfScrollRestoration() {
              this.previousScrollRestoration &&
                ((history.scrollRestoration = this.previousScrollRestoration),
                delete this.previousScrollRestoration);
            }
            shouldHandlePopState() {
              return this.pageIsLoaded();
            }
            pageIsLoaded() {
              return this.pageLoaded || "complete" == document.readyState;
            }
          }
          class ne {
            constructor(e) {
              (this.started = !1),
                (this.clickCaptured = () => {
                  removeEventListener("click", this.clickBubbled, !1),
                    addEventListener("click", this.clickBubbled, !1);
                }),
                (this.clickBubbled = (e) => {
                  if (this.clickEventIsSignificant(e)) {
                    const t = (e.composedPath && e.composedPath()[0]) || e.target,
                      a = this.findLinkFromClickTarget(t);
                    if (a) {
                      const t = this.getLocationForLink(a);
                      this.delegate.willFollowLinkToLocation(a, t) &&
                        (e.preventDefault(),
                        this.delegate.followedLinkToLocation(a, t));
                    }
                  }
                }),
                (this.delegate = e);
            }
            start() {
              this.started ||
                (addEventListener("click", this.clickCaptured, !0),
                (this.started = !0));
            }
            stop() {
              this.started &&
                (removeEventListener("click", this.clickCaptured, !0),
                (this.started = !1));
            }
            clickEventIsSignificant(e) {
              return !(
                (e.target && e.target.isContentEditable) ||
                e.defaultPrevented ||
                e.which > 1 ||
                e.altKey ||
                e.ctrlKey ||
                e.metaKey ||
                e.shiftKey
              );
            }
            findLinkFromClickTarget(e) {
              if (e instanceof Element)
                return e.closest("a[href]:not([target^=_]):not([download])");
            }
            getLocationForLink(e) {
              return _(e.getAttribute("href") || "");
            }
          }
          function ie(e) {
            return "advance" == e || "replace" == e || "restore" == e;
          }
          class re {
            constructor(e) {
              this.delegate = e;
            }
            proposeVisit(e, t = {}) {
              this.delegate.allowsVisitingLocationWithAction(e, t.action) &&
                (v(e, this.view.snapshot.rootLocation)
                  ? this.delegate.visitProposedToLocation(e, t)
                  : (window.location.href = e.toString()));
            }
            startVisit(e, t, a = {}) {
              this.stop(),
                (this.currentVisit = new Q(
                  this,
                  _(e),
                  t,
                  Object.assign({ referrer: this.location }, a)
                )),
                this.currentVisit.start();
            }
            submitForm(e, t) {
              this.stop(),
                (this.formSubmission = new P(this, e, t, !0)),
                this.formSubmission.start();
            }
            stop() {
              this.formSubmission &&
                (this.formSubmission.stop(), delete this.formSubmission),
                this.currentVisit &&
                  (this.currentVisit.cancel(), delete this.currentVisit);
            }
            get adapter() {
              return this.delegate.adapter;
            }
            get view() {
              return this.delegate.view;
            }
            get history() {
              return this.delegate.history;
            }
            formSubmissionStarted(e) {
              "function" == typeof this.adapter.formSubmissionStarted &&
                this.adapter.formSubmissionStarted(e);
            }
            async formSubmissionSucceededWithResponse(e, t) {
              if (e == this.formSubmission) {
                const a = await t.responseHTML;
                if (a) {
                  e.method != o.get && this.view.clearSnapshotCache();
                  const { statusCode: n, redirected: i } = t,
                    r = {
                      action: this.getActionForFormSubmission(e),
                      response: { statusCode: n, responseHTML: a, redirected: i }
                    };
                  this.proposeVisit(t.location, r);
                }
              }
            }
            async formSubmissionFailedWithResponse(e, t) {
              const a = await t.responseHTML;
              if (a) {
                const e = z.fromHTMLString(a);
                t.serverError
                  ? await this.view.renderError(e)
                  : await this.view.renderPage(e),
                  this.view.scrollToTop(),
                  this.view.clearSnapshotCache();
              }
            }
            formSubmissionErrored(e, t) {
              console.error(t);
            }
            formSubmissionFinished(e) {
              "function" == typeof this.adapter.formSubmissionFinished &&
                this.adapter.formSubmissionFinished(e);
            }
            visitStarted(e) {
              this.delegate.visitStarted(e);
            }
            visitCompleted(e) {
              this.delegate.visitCompleted(e);
            }
            locationWithActionIsSamePage(e, t) {
              const a = h(e),
                n = h(this.view.lastRenderedLocation),
                i = "restore" === t && void 0 === a;
              return (
                "replace" !== t &&
                y(e) === y(this.view.lastRenderedLocation) &&
                (i || (null != a && a !== n))
              );
            }
            visitScrolledToSamePageLocation(e, t) {
              this.delegate.visitScrolledToSamePageLocation(e, t);
            }
            get location() {
              return this.history.location;
            }
            get restorationIdentifier() {
              return this.history.restorationIdentifier;
            }
            getActionForFormSubmission(e) {
              const { formElement: t, submitter: a } = e,
                n = Y("data-turbo-action", a, t);
              return ie(n) ? n : "advance";
            }
          }
          !(function (e) {
            (e[(e.initial = 0)] = "initial"),
              (e[(e.loading = 1)] = "loading"),
              (e[(e.interactive = 2)] = "interactive"),
              (e[(e.complete = 3)] = "complete");
          })(G || (G = {}));
          class se {
            constructor(e) {
              (this.stage = G.initial),
                (this.started = !1),
                (this.interpretReadyState = () => {
                  const { readyState: e } = this;
                  "interactive" == e
                    ? this.pageIsInteractive()
                    : "complete" == e && this.pageIsComplete();
                }),
                (this.pageWillUnload = () => {
                  this.delegate.pageWillUnload();
                }),
                (this.delegate = e);
            }
            start() {
              this.started ||
                (this.stage == G.initial && (this.stage = G.loading),
                document.addEventListener(
                  "readystatechange",
                  this.interpretReadyState,
                  !1
                ),
                addEventListener("pagehide", this.pageWillUnload, !1),
                (this.started = !0));
            }
            stop() {
              this.started &&
                (document.removeEventListener(
                  "readystatechange",
                  this.interpretReadyState,
                  !1
                ),
                removeEventListener("pagehide", this.pageWillUnload, !1),
                (this.started = !1));
            }
            pageIsInteractive() {
              this.stage == G.loading &&
                ((this.stage = G.interactive),
                this.delegate.pageBecameInteractive());
            }
            pageIsComplete() {
              this.pageIsInteractive(),
                this.stage == G.interactive &&
                  ((this.stage = G.complete), this.delegate.pageLoaded());
            }
            get readyState() {
              return document.readyState;
            }
          }
          class oe {
            constructor(e) {
              (this.started = !1),
                (this.onScroll = () => {
                  this.updatePosition({
                    x: window.pageXOffset,
                    y: window.pageYOffset
                  });
                }),
                (this.delegate = e);
            }
            start() {
              this.started ||
                (addEventListener("scroll", this.onScroll, !1),
                this.onScroll(),
                (this.started = !0));
            }
            stop() {
              this.started &&
                (removeEventListener("scroll", this.onScroll, !1),
                (this.started = !1));
            }
            updatePosition(e) {
              this.delegate.scrollPositionChanged(e);
            }
          }
          class de {
            constructor(e) {
              (this.sources = new Set()),
                (this.started = !1),
                (this.inspectFetchResponse = (e) => {
                  const t = (function (e) {
                    var t;
                    const a =
                      null === (t = e.detail) || void 0 === t
                        ? void 0
                        : t.fetchResponse;
                    if (a instanceof w) return a;
                  })(e);
                  t &&
                    (function (e) {
                      var t;
                      return (null !== (t = e.contentType) && void 0 !== t
                        ? t
                        : ""
                      ).startsWith(I.contentType);
                    })(t) &&
                    (e.preventDefault(), this.receiveMessageResponse(t));
                }),
                (this.receiveMessageEvent = (e) => {
                  this.started &&
                    "string" == typeof e.data &&
                    this.receiveMessageHTML(e.data);
                }),
                (this.delegate = e);
            }
            start() {
              this.started ||
                ((this.started = !0),
                addEventListener(
                  "turbo:before-fetch-response",
                  this.inspectFetchResponse,
                  !1
                ));
            }
            stop() {
              this.started &&
                ((this.started = !1),
                removeEventListener(
                  "turbo:before-fetch-response",
                  this.inspectFetchResponse,
                  !1
                ));
            }
            connectStreamSource(e) {
              this.streamSourceIsConnected(e) ||
                (this.sources.add(e),
                e.addEventListener("message", this.receiveMessageEvent, !1));
            }
            disconnectStreamSource(e) {
              this.streamSourceIsConnected(e) &&
                (this.sources.delete(e),
                e.removeEventListener("message", this.receiveMessageEvent, !1));
            }
            streamSourceIsConnected(e) {
              return this.sources.has(e);
            }
            async receiveMessageResponse(e) {
              const t = await e.responseHTML;
              t && this.receiveMessageHTML(t);
            }
            receiveMessageHTML(e) {
              this.delegate.receivedMessageFromStream(new I(e));
            }
          }
          class le extends A {
            async render() {
              this.replaceHeadAndBody(), this.activateScriptElements();
            }
            replaceHeadAndBody() {
              const { documentElement: e, head: t, body: a } = document;
              e.replaceChild(this.newHead, t), e.replaceChild(this.newElement, a);
            }
            activateScriptElements() {
              for (const e of this.scriptElements) {
                const t = e.parentNode;
                if (t) {
                  const a = this.createScriptElement(e);
                  t.replaceChild(a, e);
                }
              }
            }
            get newHead() {
              return this.newSnapshot.headSnapshot.element;
            }
            get scriptElements() {
              return [...document.documentElement.querySelectorAll("script")];
            }
          }
          class ce extends A {
            get shouldRender() {
              return (
                this.newSnapshot.isVisitable && this.trackedElementsAreIdentical
              );
            }
            prepareToRender() {
              this.mergeHead();
            }
            async render() {
              this.willRender && this.replaceBody();
            }
            finishRendering() {
              super.finishRendering(),
                this.isPreview || this.focusFirstAutofocusableElement();
            }
            get currentHeadSnapshot() {
              return this.currentSnapshot.headSnapshot;
            }
            get newHeadSnapshot() {
              return this.newSnapshot.headSnapshot;
            }
            get newElement() {
              return this.newSnapshot.element;
            }
            mergeHead() {
              this.copyNewHeadStylesheetElements(),
                this.copyNewHeadScriptElements(),
                this.removeCurrentHeadProvisionalElements(),
                this.copyNewHeadProvisionalElements();
            }
            replaceBody() {
              this.preservingPermanentElements(() => {
                this.activateNewBody(), this.assignNewBody();
              });
            }
            get trackedElementsAreIdentical() {
              return (
                this.currentHeadSnapshot.trackedElementSignature ==
                this.newHeadSnapshot.trackedElementSignature
              );
            }
            copyNewHeadStylesheetElements() {
              for (const e of this.newHeadStylesheetElements)
                document.head.appendChild(e);
            }
            copyNewHeadScriptElements() {
              for (const e of this.newHeadScriptElements)
                document.head.appendChild(this.createScriptElement(e));
            }
            removeCurrentHeadProvisionalElements() {
              for (const e of this.currentHeadProvisionalElements)
                document.head.removeChild(e);
            }
            copyNewHeadProvisionalElements() {
              for (const e of this.newHeadProvisionalElements)
                document.head.appendChild(e);
            }
            activateNewBody() {
              document.adoptNode(this.newElement),
                this.activateNewBodyScriptElements();
            }
            activateNewBodyScriptElements() {
              for (const e of this.newBodyScriptElements) {
                const t = this.createScriptElement(e);
                e.replaceWith(t);
              }
            }
            assignNewBody() {
              document.body && this.newElement instanceof HTMLBodyElement
                ? document.body.replaceWith(this.newElement)
                : document.documentElement.appendChild(this.newElement);
            }
            get newHeadStylesheetElements() {
              return this.newHeadSnapshot.getStylesheetElementsNotInSnapshot(
                this.currentHeadSnapshot
              );
            }
            get newHeadScriptElements() {
              return this.newHeadSnapshot.getScriptElementsNotInSnapshot(
                this.currentHeadSnapshot
              );
            }
            get currentHeadProvisionalElements() {
              return this.currentHeadSnapshot.provisionalElements;
            }
            get newHeadProvisionalElements() {
              return this.newHeadSnapshot.provisionalElements;
            }
            get newBodyScriptElements() {
              return this.newElement.querySelectorAll("script");
            }
          }
          class ue {
            constructor(e) {
              (this.keys = []), (this.snapshots = {}), (this.size = e);
            }
            has(e) {
              return M(e) in this.snapshots;
            }
            get(e) {
              if (this.has(e)) {
                const t = this.read(e);
                return this.touch(e), t;
              }
            }
            put(e, t) {
              return this.write(e, t), this.touch(e), t;
            }
            clear() {
              this.snapshots = {};
            }
            read(e) {
              return this.snapshots[M(e)];
            }
            write(e, t) {
              this.snapshots[M(e)] = t;
            }
            touch(e) {
              const t = M(e),
                a = this.keys.indexOf(t);
              a > -1 && this.keys.splice(a, 1), this.keys.unshift(t), this.trim();
            }
            trim() {
              for (const e of this.keys.splice(this.size))
                delete this.snapshots[e];
            }
          }
          class me extends F {
            constructor() {
              super(...arguments),
                (this.snapshotCache = new ue(10)),
                (this.lastRenderedLocation = new URL(location.href));
            }
            renderPage(e, t = !1, a = !0) {
              const n = new ce(this.snapshot, e, t, a);
              return this.render(n);
            }
            renderError(e) {
              const t = new le(this.snapshot, e, !1);
              return this.render(t);
            }
            clearSnapshotCache() {
              this.snapshotCache.clear();
            }
            async cacheSnapshot() {
              if (this.shouldCacheSnapshot) {
                this.delegate.viewWillCacheSnapshot();
                const { snapshot: e, lastRenderedLocation: t } = this;
                await new Promise((e) => setTimeout(() => e(), 0));
                const a = e.clone();
                return this.snapshotCache.put(t, a), a;
              }
            }
            getCachedSnapshotForLocation(e) {
              return this.snapshotCache.get(e);
            }
            get snapshot() {
              return z.fromElement(this.element);
            }
            get shouldCacheSnapshot() {
              return this.snapshot.isCacheable;
            }
          }
          function _e(e) {
            Object.defineProperties(e, he);
          }
          const he = {
              absoluteURL: {
                get() {
                  return this.toString();
                }
              }
            },
            pe = new (class {
              constructor() {
                (this.navigator = new re(this)),
                  (this.history = new ae(this)),
                  (this.view = new me(this, document.documentElement)),
                  (this.adapter = new Z(this)),
                  (this.pageObserver = new se(this)),
                  (this.cacheObserver = new X()),
                  (this.linkClickObserver = new ne(this)),
                  (this.formSubmitObserver = new ee(this)),
                  (this.scrollObserver = new oe(this)),
                  (this.streamObserver = new de(this)),
                  (this.frameRedirector = new te(document.documentElement)),
                  (this.drive = !0),
                  (this.enabled = !0),
                  (this.progressBarDelay = 500),
                  (this.started = !1);
              }
              start() {
                this.started ||
                  (this.pageObserver.start(),
                  this.cacheObserver.start(),
                  this.linkClickObserver.start(),
                  this.formSubmitObserver.start(),
                  this.scrollObserver.start(),
                  this.streamObserver.start(),
                  this.frameRedirector.start(),
                  this.history.start(),
                  (this.started = !0),
                  (this.enabled = !0));
              }
              disable() {
                this.enabled = !1;
              }
              stop() {
                this.started &&
                  (this.pageObserver.stop(),
                  this.cacheObserver.stop(),
                  this.linkClickObserver.stop(),
                  this.formSubmitObserver.stop(),
                  this.scrollObserver.stop(),
                  this.streamObserver.stop(),
                  this.frameRedirector.stop(),
                  this.history.stop(),
                  (this.started = !1));
              }
              registerAdapter(e) {
                this.adapter = e;
              }
              visit(e, t = {}) {
                this.navigator.proposeVisit(_(e), t);
              }
              connectStreamSource(e) {
                this.streamObserver.connectStreamSource(e);
              }
              disconnectStreamSource(e) {
                this.streamObserver.disconnectStreamSource(e);
              }
              renderStreamMessage(e) {
                document.documentElement.appendChild(I.wrap(e).fragment);
              }
              clearCache() {
                this.view.clearSnapshotCache();
              }
              setProgressBarDelay(e) {
                this.progressBarDelay = e;
              }
              get location() {
                return this.history.location;
              }
              get restorationIdentifier() {
                return this.history.restorationIdentifier;
              }
              historyPoppedToLocationWithRestorationIdentifier(e, t) {
                this.enabled
                  ? this.navigator.startVisit(e, t, {
                      action: "restore",
                      historyChanged: !0
                    })
                  : this.adapter.pageInvalidated();
              }
              scrollPositionChanged(e) {
                this.history.updateRestorationData({ scrollPosition: e });
              }
              willFollowLinkToLocation(e, t) {
                return (
                  this.elementDriveEnabled(e) &&
                  v(t, this.snapshot.rootLocation) &&
                  this.applicationAllowsFollowingLinkToLocation(e, t)
                );
              }
              followedLinkToLocation(e, t) {
                const a = this.getActionForLink(e);
                this.convertLinkWithMethodClickToFormSubmission(e) ||
                  this.visit(t.href, { action: a });
              }
              convertLinkWithMethodClickToFormSubmission(e) {
                const t = e.getAttribute("data-turbo-method");
                if (t) {
                  const a = document.createElement("form");
                  (a.method = t),
                    (a.action = e.getAttribute("href") || "undefined"),
                    (a.hidden = !0),
                    e.hasAttribute("data-turbo-confirm") &&
                      a.setAttribute(
                        "data-turbo-confirm",
                        e.getAttribute("data-turbo-confirm")
                      );
                  const n = this.getTargetFrameForLink(e);
                  return (
                    n
                      ? (a.setAttribute("data-turbo-frame", n),
                        a.addEventListener("turbo:submit-start", () =>
                          a.remove()
                        ))
                      : a.addEventListener("submit", () => a.remove()),
                    document.body.appendChild(a),
                    $("submit", { cancelable: !0, target: a })
                  );
                }
                return !1;
              }
              allowsVisitingLocationWithAction(e, t) {
                return (
                  this.locationWithActionIsSamePage(e, t) ||
                  this.applicationAllowsVisitingLocation(e)
                );
              }
              visitProposedToLocation(e, t) {
                _e(e), this.adapter.visitProposedToLocation(e, t);
              }
              visitStarted(e) {
                _e(e.location),
                  e.silent ||
                    this.notifyApplicationAfterVisitingLocation(
                      e.location,
                      e.action
                    );
              }
              visitCompleted(e) {
                this.notifyApplicationAfterPageLoad(e.getTimingMetrics());
              }
              locationWithActionIsSamePage(e, t) {
                return this.navigator.locationWithActionIsSamePage(e, t);
              }
              visitScrolledToSamePageLocation(e, t) {
                this.notifyApplicationAfterVisitingSamePageLocation(e, t);
              }
              willSubmitForm(e, t) {
                const a = p(e, t);
                return (
                  this.elementDriveEnabled(e) &&
                  (!t || this.elementDriveEnabled(t)) &&
                  v(_(a), this.snapshot.rootLocation)
                );
              }
              formSubmitted(e, t) {
                this.navigator.submitForm(e, t);
              }
              pageBecameInteractive() {
                (this.view.lastRenderedLocation = this.location),
                  this.notifyApplicationAfterPageLoad();
              }
              pageLoaded() {
                this.history.assumeControlOfScrollRestoration();
              }
              pageWillUnload() {
                this.history.relinquishControlOfScrollRestoration();
              }
              receivedMessageFromStream(e) {
                this.renderStreamMessage(e);
              }
              viewWillCacheSnapshot() {
                var e;
                (null === (e = this.navigator.currentVisit) || void 0 === e
                  ? void 0
                  : e.silent) || this.notifyApplicationBeforeCachingSnapshot();
              }
              allowsImmediateRender({ element: e }, t) {
                return !this.notifyApplicationBeforeRender(e, t).defaultPrevented;
              }
              viewRenderedSnapshot(e, t) {
                (this.view.lastRenderedLocation = this.history.location),
                  this.notifyApplicationAfterRender();
              }
              viewInvalidated() {
                this.adapter.pageInvalidated();
              }
              frameLoaded(e) {
                this.notifyApplicationAfterFrameLoad(e);
              }
              frameRendered(e, t) {
                this.notifyApplicationAfterFrameRender(e, t);
              }
              applicationAllowsFollowingLinkToLocation(e, t) {
                return !this.notifyApplicationAfterClickingLinkToLocation(e, t)
                  .defaultPrevented;
              }
              applicationAllowsVisitingLocation(e) {
                return !this.notifyApplicationBeforeVisitingLocation(e)
                  .defaultPrevented;
              }
              notifyApplicationAfterClickingLinkToLocation(e, t) {
                return $("turbo:click", {
                  target: e,
                  detail: { url: t.href },
                  cancelable: !0
                });
              }
              notifyApplicationBeforeVisitingLocation(e) {
                return $("turbo:before-visit", {
                  detail: { url: e.href },
                  cancelable: !0
                });
              }
              notifyApplicationAfterVisitingLocation(e, t) {
                return (
                  T(document.documentElement),
                  $("turbo:visit", { detail: { url: e.href, action: t } })
                );
              }
              notifyApplicationBeforeCachingSnapshot() {
                return $("turbo:before-cache");
              }
              notifyApplicationBeforeRender(e, t) {
                return $("turbo:before-render", {
                  detail: { newBody: e, resume: t },
                  cancelable: !0
                });
              }
              notifyApplicationAfterRender() {
                return $("turbo:render");
              }
              notifyApplicationAfterPageLoad(e = {}) {
                return (
                  S(document.documentElement),
                  $("turbo:load", {
                    detail: { url: this.location.href, timing: e }
                  })
                );
              }
              notifyApplicationAfterVisitingSamePageLocation(e, t) {
                dispatchEvent(
                  new HashChangeEvent("hashchange", {
                    oldURL: e.toString(),
                    newURL: t.toString()
                  })
                );
              }
              notifyApplicationAfterFrameLoad(e) {
                return $("turbo:frame-load", { target: e });
              }
              notifyApplicationAfterFrameRender(e, t) {
                return $("turbo:frame-render", {
                  detail: { fetchResponse: e },
                  target: t,
                  cancelable: !0
                });
              }
              elementDriveEnabled(e) {
                const t = null == e ? void 0 : e.closest("[data-turbo]");
                return this.drive
                  ? !t || "false" != t.getAttribute("data-turbo")
                  : !!t && "true" == t.getAttribute("data-turbo");
              }
              getActionForLink(e) {
                const t = e.getAttribute("data-turbo-action");
                return ie(t) ? t : "advance";
              }
              getTargetFrameForLink(e) {
                const t = e.getAttribute("data-turbo-frame");
                if (t) return t;
                {
                  const t = e.closest("turbo-frame");
                  if (t) return t.id;
                }
              }
              get snapshot() {
                return this.view.snapshot;
              }
            })(),
            { navigator: ge } = pe;
          function fe() {
            pe.start();
          }
          function ve(e) {
            pe.registerAdapter(e);
          }
          function ye(e, t) {
            pe.visit(e, t);
          }
          function Me(e) {
            pe.connectStreamSource(e);
          }
          function we(e) {
            pe.disconnectStreamSource(e);
          }
          function $e(e) {
            pe.renderStreamMessage(e);
          }
          function be() {
            pe.clearCache();
          }
          function Le(e) {
            pe.setProgressBarDelay(e);
          }
          function De(e) {
            P.confirmMethod = e;
          }
          var ke = Object.freeze({
            __proto__: null,
            navigator: ge,
            session: pe,
            PageRenderer: ce,
            PageSnapshot: z,
            start: fe,
            registerAdapter: ve,
            visit: ye,
            connectStreamSource: Me,
            disconnectStreamSource: we,
            renderStreamMessage: $e,
            clearCache: be,
            setProgressBarDelay: Le,
            setConfirmMethod: De
          });
          class Ye {
            constructor(e) {
              (this.visitCachedSnapshot = ({ element: e }) => {
                var t;
                const { id: a, clone: n } = this;
                null === (t = e.querySelector("#" + a)) ||
                  void 0 === t ||
                  t.replaceWith(n);
              }),
                (this.clone = e.cloneNode(!0)),
                (this.id = e.id);
            }
          }
          function Te(e) {
            if (null != e) {
              const t = document.getElementById(e);
              if (t instanceof m) return t;
            }
          }
          function Se(e, t) {
            if (e) {
              const n = e.getAttribute("src");
              if (null != n && null != t && ((a = t), _(n).href == _(a).href))
                throw new Error(
                  `Matching <turbo-frame id="${e.id}"> element has a source URL which references itself`
                );
              if (
                (e.ownerDocument !== document && (e = document.importNode(e, !0)),
                e instanceof m)
              )
                return e.connectedCallback(), e.disconnectedCallback(), e;
            }
            var a;
          }
          const xe = {
            after() {
              this.targetElements.forEach((e) => {
                var t;
                return null === (t = e.parentElement) || void 0 === t
                  ? void 0
                  : t.insertBefore(this.templateContent, e.nextSibling);
              });
            },
            append() {
              this.removeDuplicateTargetChildren(),
                this.targetElements.forEach((e) =>
                  e.append(this.templateContent)
                );
            },
            before() {
              this.targetElements.forEach((e) => {
                var t;
                return null === (t = e.parentElement) || void 0 === t
                  ? void 0
                  : t.insertBefore(this.templateContent, e);
              });
            },
            prepend() {
              this.removeDuplicateTargetChildren(),
                this.targetElements.forEach((e) =>
                  e.prepend(this.templateContent)
                );
            },
            remove() {
              this.targetElements.forEach((e) => e.remove());
            },
            replace() {
              this.targetElements.forEach((e) =>
                e.replaceWith(this.templateContent)
              );
            },
            update() {
              this.targetElements.forEach((e) => {
                (e.innerHTML = ""), e.append(this.templateContent);
              });
            }
          };
          class Ce extends HTMLElement {
            async connectedCallback() {
              try {
                await this.render();
              } catch (e) {
                console.error(e);
              } finally {
                this.disconnect();
              }
            }
            async render() {
              var e;
              return null !== (e = this.renderPromise) && void 0 !== e
                ? e
                : (this.renderPromise = (async () => {
                    this.dispatchEvent(this.beforeRenderEvent) &&
                      (await b(), this.performAction());
                  })());
            }
            disconnect() {
              try {
                this.remove();
              } catch (e) {}
            }
            removeDuplicateTargetChildren() {
              this.duplicateChildren.forEach((e) => e.remove());
            }
            get duplicateChildren() {
              var e;
              const t = this.targetElements
                  .flatMap((e) => [...e.children])
                  .filter((e) => !!e.id),
                a = [
                  ...(null === (e = this.templateContent) || void 0 === e
                    ? void 0
                    : e.children)
                ]
                  .filter((e) => !!e.id)
                  .map((e) => e.id);
              return t.filter((e) => a.includes(e.id));
            }
            get performAction() {
              if (this.action) {
                const e = xe[this.action];
                if (e) return e;
                this.raise("unknown action");
              }
              this.raise("action attribute is missing");
            }
            get targetElements() {
              return this.target
                ? this.targetElementsById
                : this.targets
                ? this.targetElementsByQuery
                : void this.raise("target or targets attribute is missing");
            }
            get templateContent() {
              return this.templateElement.content.cloneNode(!0);
            }
            get templateElement() {
              if (this.firstElementChild instanceof HTMLTemplateElement)
                return this.firstElementChild;
              this.raise("first child element must be a <template> element");
            }
            get action() {
              return this.getAttribute("action");
            }
            get target() {
              return this.getAttribute("target");
            }
            get targets() {
              return this.getAttribute("targets");
            }
            raise(e) {
              throw new Error(`${this.description}: ${e}`);
            }
            get description() {
              var e, t;
              return null !==
                (t = (null !== (e = this.outerHTML.match(/<[^>]+>/)) &&
                void 0 !== e
                  ? e
                  : [])[0]) && void 0 !== t
                ? t
                : "<turbo-stream>";
            }
            get beforeRenderEvent() {
              return new CustomEvent("turbo:before-stream-render", {
                bubbles: !0,
                cancelable: !0
              });
            }
            get targetElementsById() {
              var e;
              const t =
                null === (e = this.ownerDocument) || void 0 === e
                  ? void 0
                  : e.getElementById(this.target);
              return null !== t ? [t] : [];
            }
            get targetElementsByQuery() {
              var e;
              const t =
                null === (e = this.ownerDocument) || void 0 === e
                  ? void 0
                  : e.querySelectorAll(this.targets);
              return 0 !== t.length ? Array.prototype.slice.call(t) : [];
            }
          }
          (m.delegateConstructor = class {
            constructor(e) {
              (this.fetchResponseLoaded = (e) => {}),
                (this.currentFetchRequest = null),
                (this.resolveVisitPromise = () => {}),
                (this.connected = !1),
                (this.hasBeenLoaded = !1),
                (this.settingSourceURL = !1),
                (this.element = e),
                (this.view = new O(this, this.element)),
                (this.appearanceObserver = new C(this, this.element)),
                (this.linkInterceptor = new B(this, this.element)),
                (this.formInterceptor = new H(this, this.element));
            }
            connect() {
              this.connected ||
                ((this.connected = !0),
                (this.reloadable = !1),
                this.loadingStyle == s.lazy && this.appearanceObserver.start(),
                this.linkInterceptor.start(),
                this.formInterceptor.start(),
                this.sourceURLChanged());
            }
            disconnect() {
              this.connected &&
                ((this.connected = !1),
                this.appearanceObserver.stop(),
                this.linkInterceptor.stop(),
                this.formInterceptor.stop());
            }
            disabledChanged() {
              this.loadingStyle == s.eager && this.loadSourceURL();
            }
            sourceURLChanged() {
              (this.loadingStyle == s.eager || this.hasBeenLoaded) &&
                this.loadSourceURL();
            }
            loadingStyleChanged() {
              this.loadingStyle == s.lazy
                ? this.appearanceObserver.start()
                : (this.appearanceObserver.stop(), this.loadSourceURL());
            }
            async loadSourceURL() {
              if (
                !this.settingSourceURL &&
                this.enabled &&
                this.isActive &&
                (this.reloadable || this.sourceURL != this.currentURL)
              ) {
                const e = this.currentURL;
                if (((this.currentURL = this.sourceURL), this.sourceURL))
                  try {
                    (this.element.loaded = this.visit(_(this.sourceURL))),
                      this.appearanceObserver.stop(),
                      await this.element.loaded,
                      (this.hasBeenLoaded = !0);
                  } catch (t) {
                    throw ((this.currentURL = e), t);
                  }
              }
            }
            async loadResponse(e) {
              (e.redirected || (e.succeeded && e.isHTML)) &&
                (this.sourceURL = e.response.url);
              try {
                const t = await e.responseHTML;
                if (t) {
                  const { body: a } = L(t),
                    n = new j(await this.extractForeignFrameElement(a)),
                    i = new R(this.view.snapshot, n, !1, !1);
                  this.view.renderPromise && (await this.view.renderPromise),
                    await this.view.render(i),
                    pe.frameRendered(e, this.element),
                    pe.frameLoaded(this.element),
                    this.fetchResponseLoaded(e);
                }
              } catch (e) {
                console.error(e), this.view.invalidate();
              } finally {
                this.fetchResponseLoaded = () => {};
              }
            }
            elementAppearedInViewport(e) {
              this.loadSourceURL();
            }
            shouldInterceptLinkClick(e, t) {
              return (
                !e.hasAttribute("data-turbo-method") &&
                this.shouldInterceptNavigation(e)
              );
            }
            linkClickIntercepted(e, t) {
              (this.reloadable = !0), this.navigateFrame(e, t);
            }
            shouldInterceptFormSubmission(e, t) {
              return this.shouldInterceptNavigation(e, t);
            }
            formSubmissionIntercepted(e, t) {
              this.formSubmission && this.formSubmission.stop(),
                (this.reloadable = !1),
                (this.formSubmission = new P(this, e, t));
              const { fetchRequest: a } = this.formSubmission;
              this.prepareHeadersForRequest(a.headers, a),
                this.formSubmission.start();
            }
            prepareHeadersForRequest(e, t) {
              e["Turbo-Frame"] = this.id;
            }
            requestStarted(e) {
              T(this.element);
            }
            requestPreventedHandlingResponse(e, t) {
              this.resolveVisitPromise();
            }
            async requestSucceededWithResponse(e, t) {
              await this.loadResponse(t), this.resolveVisitPromise();
            }
            requestFailedWithResponse(e, t) {
              console.error(t), this.resolveVisitPromise();
            }
            requestErrored(e, t) {
              console.error(t), this.resolveVisitPromise();
            }
            requestFinished(e) {
              S(this.element);
            }
            formSubmissionStarted({ formElement: e }) {
              T(e, this.findFrameElement(e));
            }
            formSubmissionSucceededWithResponse(e, t) {
              const a = this.findFrameElement(e.formElement, e.submitter);
              this.proposeVisitIfNavigatedWithAction(
                a,
                e.formElement,
                e.submitter
              ),
                a.delegate.loadResponse(t);
            }
            formSubmissionFailedWithResponse(e, t) {
              this.element.delegate.loadResponse(t);
            }
            formSubmissionErrored(e, t) {
              console.error(t);
            }
            formSubmissionFinished({ formElement: e }) {
              S(e, this.findFrameElement(e));
            }
            allowsImmediateRender(e, t) {
              return !0;
            }
            viewRenderedSnapshot(e, t) {}
            viewInvalidated() {}
            async visit(e) {
              var t;
              const a = new x(
                this,
                o.get,
                e,
                new URLSearchParams(),
                this.element
              );
              return (
                null === (t = this.currentFetchRequest) ||
                  void 0 === t ||
                  t.cancel(),
                (this.currentFetchRequest = a),
                new Promise((e) => {
                  (this.resolveVisitPromise = () => {
                    (this.resolveVisitPromise = () => {}),
                      (this.currentFetchRequest = null),
                      e();
                  }),
                    a.perform();
                })
              );
            }
            navigateFrame(e, t, a) {
              const n = this.findFrameElement(e, a);
              this.proposeVisitIfNavigatedWithAction(n, e, a),
                n.setAttribute("reloadable", ""),
                (n.src = t);
            }
            proposeVisitIfNavigatedWithAction(e, t, a) {
              const n = Y("data-turbo-action", a, t, e);
              if (ie(n)) {
                const { visitCachedSnapshot: t } = new Ye(e);
                e.delegate.fetchResponseLoaded = (a) => {
                  if (e.src) {
                    const { statusCode: i, redirected: r } = a,
                      s = {
                        statusCode: i,
                        redirected: r,
                        responseHTML: e.ownerDocument.documentElement.outerHTML
                      };
                    pe.visit(e.src, {
                      action: n,
                      response: s,
                      visitCachedSnapshot: t,
                      willRender: !1
                    });
                  }
                };
              }
            }
            findFrameElement(e, t) {
              var a;
              return null !==
                (a = Te(
                  Y("data-turbo-frame", t, e) ||
                    this.element.getAttribute("target")
                )) && void 0 !== a
                ? a
                : this.element;
            }
            async extractForeignFrameElement(e) {
              let t;
              const a = CSS.escape(this.id);
              try {
                if (
                  (t = Se(e.querySelector(`turbo-frame#${a}`), this.currentURL))
                )
                  return t;
                if (
                  (t = Se(
                    e.querySelector(`turbo-frame[src][recurse~=${a}]`),
                    this.currentURL
                  ))
                )
                  return await t.loaded, await this.extractForeignFrameElement(t);
                console.error(
                  `Response has no matching <turbo-frame id="${a}"> element`
                );
              } catch (e) {
                console.error(e);
              }
              return new m();
            }
            formActionIsVisitable(e, t) {
              return v(_(p(e, t)), this.rootLocation);
            }
            shouldInterceptNavigation(e, t) {
              const a =
                Y("data-turbo-frame", t, e) ||
                this.element.getAttribute("target");
              if (
                e instanceof HTMLFormElement &&
                !this.formActionIsVisitable(e, t)
              )
                return !1;
              if (!this.enabled || "_top" == a) return !1;
              if (a) {
                const e = Te(a);
                if (e) return !e.disabled;
              }
              return (
                !!pe.elementDriveEnabled(e) && !(t && !pe.elementDriveEnabled(t))
              );
            }
            get id() {
              return this.element.id;
            }
            get enabled() {
              return !this.element.disabled;
            }
            get sourceURL() {
              if (this.element.src) return this.element.src;
            }
            get reloadable() {
              return this.findFrameElement(this.element).hasAttribute(
                "reloadable"
              );
            }
            set reloadable(e) {
              const t = this.findFrameElement(this.element);
              e
                ? t.setAttribute("reloadable", "")
                : t.removeAttribute("reloadable");
            }
            set sourceURL(e) {
              (this.settingSourceURL = !0),
                (this.element.src = null != e ? e : null),
                (this.currentURL = this.element.src),
                (this.settingSourceURL = !1);
            }
            get loadingStyle() {
              return this.element.loading;
            }
            get isLoading() {
              return (
                void 0 !== this.formSubmission ||
                void 0 !== this.resolveVisitPromise()
              );
            }
            get isActive() {
              return this.element.isActive && this.connected;
            }
            get rootLocation() {
              var e;
              const t = this.element.ownerDocument.querySelector(
                'meta[name="turbo-root"]'
              );
              return _(
                null !== (e = null == t ? void 0 : t.content) && void 0 !== e
                  ? e
                  : "/"
              );
            }
          }),
            customElements.define("turbo-frame", m),
            customElements.define("turbo-stream", Ce),
            (() => {
              let e = document.currentScript;
              if (e && !e.hasAttribute("data-turbo-suppress-warning"))
                for (; (e = e.parentElement); )
                  if (e == document.body)
                    return console.warn(
                      D`
          You are loading Turbo from a <script> element inside the <body> element. This is probably not what you meant to do!

          Load your applicationâ€™s JavaScript bundle inside the <head> element instead. <script> elements in <body> are evaluated with each page change.

          For more information, see: https://turbo.hotwired.dev/handbook/building#working-with-script-elements

          â€”â€”
          Suppress this warning by adding a "data-turbo-suppress-warning" attribute to: %s
        `,
                      e.outerHTML
                    );
            })(),
            (window.Turbo = ke),
            fe(),
            (window.Turbo = n),
            fe();
        },
        6550: () => {
          document.addEventListener("turbo:load", function () {
            $("#language").select2({
              width: "100%",
              dropdownParent: $("#changeLanguageModal")
            });
          }),
            (window.renderProfileData = function () {
              $.ajax({
                url: $(".profileUrl").val(),
                type: "GET",
                success: function (e) {
                  if (e.success) {
                    var t = e.data;
                    $("#editUserId").val(t.id),
                      $("#firstName").val(t.first_name),
                      $("#lastName").val(t.last_name),
                      $("#email").val(t.email),
                      $("#phone").val(t.phone),
                      $("#editPhoto").css(
                        "background-image",
                        'url("' + t.image_url + '")'
                      ),
                      $("#editProfileModal").modal("show");
                  }
                }
              });
            }),
            (window.displayProfilePhoto = function (e, t) {
              var a = !0;
              if (e.files && e.files[0]) {
                var n = new FileReader();
                (n.onload = function (e) {
                  var n = new Image();
                  (n.src = e.target.result),
                    (n.onload = function () {
                      $(t).attr("src", e.target.result), (a = !0);
                    });
                }),
                  a && (n.readAsDataURL(e.files[0]), $(t).show());
              }
            }),
            listenSubmit("#changePasswordForm", function (e) {
              if (
                (e.preventDefault(),
                !(function () {
                  var e = $("#pfCurrentPassword").val().trim(),
                    t = $("#pfNewPassword").val().trim(),
                    a = $("#pfNewConfirmPassword").val().trim();
                  if ("" == e || "" == t || "" == a)
                    return (
                      $("#editPasswordValidationErrorsBox")
                        .show()
                        .html("Please fill all the required fields."),
                      !1
                    );
                  return !0;
                })())
              )
                return !1;
              var t = jQuery(this).find("#btnPrPasswordEditSave");
              t.button("loading"),
                $.ajax({
                  url: $(".changePasswordUrl").val(),
                  type: "post",
                  data: new FormData($(this)[0]),
                  processData: !1,
                  contentType: !1,
                  success: function (e) {
                    e.success &&
                      ($("#changePasswordModal").modal("hide"),
                      displaySuccessMessage(e.message));
                  },
                  error: function (e) {
                    manageAjaxErrors(e);
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listenSubmit("#editProfileForm", function (e) {
              if ((e.preventDefault(), "" !== $(".error-msg").text()))
                return $(".phoneNumber").focus(), !1;
              var t = jQuery(this).find("#btnPrEditSave");
              t.button("loading"),
                $.ajax({
                  url: $(".profileUpdateUrl").val(),
                  type: "post",
                  data: new FormData($(this)[0]),
                  processData: !1,
                  contentType: !1,
                  success: function (e) {
                    displaySuccessMessage(e.message),
                      $("#editProfileModal").modal("hide"),
                      setTimeout(function () {
                        location.reload();
                      }, 2e3);
                  },
                  error: function (e) {
                    manageAjaxErrors(e, "editProfileValidationErrorsBox");
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listenSubmit("#changeLanguageForm", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#btnLanguageChange");
              t.button("loading"),
                $.ajax({
                  url: $(".updateLanguageURL").val(),
                  type: "post",
                  data: new FormData($(this)[0]),
                  processData: !1,
                  contentType: !1,
                  success: function (e) {
                    displaySuccessMessage(e.message),
                      setTimeout(function () {
                        location.reload();
                      }, 2e3);
                  },
                  error: function (e) {
                    manageAjaxErrors(e, "editProfileValidationErrorsBox");
                  },
                  complete: function () {
                    t.button("reset");
                  }
                });
            }),
            listenHiddenBsModal("#editProfileModal", function () {
              resetModalForm(
                "#editProfileForm",
                "#editProfileValidationErrorsBox"
              ),
                $("#change-btn").show();
            }),
            listenClick(".editProfile", function (e) {
              $(e.currentTarget).attr("data-id");
              renderProfileData();
            }),
            listenChange("#profileImage", function () {
              var e = $(this).val().split(".").pop().toLowerCase();
              -1 == $.inArray(e, ["gif", "png", "jpg", "jpeg"])
                ? ($(this).val(""),
                  displayErrorMessage(
                    "The profile image must be a file of type: jpeg, jpg, png."
                  ))
                : displayProfilePhoto(this, "#editPhoto"),
                $("#change-btn").hide();
            }),
            listenClick(".changeType", function (e) {
              var t = $(this).parent().siblings();
              "password" == t.attr("type")
                ? ($(this).children().addClass("icon-eye"),
                  $(this).children().removeClass("icon-ban"),
                  t.attr("type", "text"))
                : ($(this).children().removeClass("icon-eye"),
                  $(this).children().addClass("icon-ban"),
                  t.attr("type", "password"));
            }),
            listenHiddenBsModal("#changePasswordModal", function () {
              resetModalForm(
                "#changePasswordForm",
                "#editPasswordValidationErrorsBox"
              );
            }),
            listenHiddenBsModal("#changeLanguageModal", function () {
              $("#language")
                .val($(".userCurrentLanguage").val())
                .trigger("change.select2");
            }),
            listenClick(".remove-profile-image", function () {
              defaultImagePreview("#editPhoto", 1);
            });
        },
        1693: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#userDob").length) return;
            $("#userDob").flatpickr({
              maxDate: new Date(),
              locale: $(".userCurrentLanguage").val()
            });
          }),
            listen("submit", "#createUserForm, #editUserForm", function () {
              $("#userBtnSave").attr("disabled", !0);
            }),
            listenKeyup("#userFacebookUrl", function () {
              this.value = this.value.toLowerCase();
            }),
            listenKeyup("#userTwitterUrl", function () {
              this.value = this.value.toLowerCase();
            }),
            listenKeyup("#userInstagramUrl", function () {
              this.value = this.value.toLowerCase();
            }),
            listenKeyup("#userLinkedInUrl", function () {
              this.value = this.value.toLowerCase();
            }),
            listenSubmit("#createUserForm, #editUserForm", function () {
              if ("" !== $(".error-msg").text())
                return $("#userPhoneNumber").focus(), !1;
              var e = $("#userFacebookUrl").val(),
                t = $("#userTwitterUrl").val(),
                a = $("#userInstagramUrl").val(),
                n = $("#userLinkedInUrl").val(),
                i = new RegExp(
                  /^(https?:\/\/)?((m{1}\.)?)?((w{2,3}\.)?)facebook.[a-z]{2,3}\/?.*/i
                ),
                r = new RegExp(
                  /^(https?:\/\/)?((m{1}\.)?)?((w{2,3}\.)?)twitter\.[a-z]{2,3}\/?.*/i
                ),
                s = new RegExp(
                  /^(https?:\/\/)?((w{2,3}\.)?)instagram.[a-z]{2,3}\/?.*/i
                ),
                o = new RegExp(
                  /^(https?:\/\/)?((w{2,3}\.)?)linkedin\.[a-z]{2,3}\/?.*/i
                );
              return "" != e && !e.match(i)
                ? (displayErrorMessage("Please enter a valid Facebook URL"),
                  $("#userBtnSave").attr("disabled", !1),
                  !1)
                : "" != t && !t.match(r)
                ? (displayErrorMessage("Please enter a valid Twitter URL"),
                  $("#userBtnSave").attr("disabled", !1),
                  !1)
                : "" != a && !a.match(s)
                ? (displayErrorMessage("Please enter a valid Instagram URL"),
                  $("#userBtnSave").attr("disabled", !1),
                  !1)
                : "" == n || !!n.match(o)
                ? void 0
                : (displayErrorMessage("Please enter a valid Linkedin URL"),
                  $("#userBtnSave").attr("disabled", !1),
                  !1);
            }),
            listen(
              "keyup keypress",
              "#createUserForm, #editUserForm",
              function (e) {
                if (13 === (e.keyCode || e.which)) return e.preventDefault(), !1;
              }
            ),
            listen("change", "#userProfileImage", function () {
              var e = (function (e, t) {
                var a = $(e).val().split(".").pop().toLowerCase();
                if (
                  -1 == $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"])
                )
                  return !1;
                return (
                  $(t).addClass("d-none"),
                  $("#userBtnSave").attr("disabled", !1),
                  a
                );
              })($(this), "#userValidationErrorsBox");
              isEmpty(e) || 0 == e
                ? ($(this).val(""),
                  $("#userValidationErrorsBox").removeClass("d-none hide"),
                  $("#userValidationErrorsBox")
                    .text("The image must be a file of type: jpg, jpeg, png.")
                    .show(),
                  $("[id=userValidationErrorsBox]").focus(),
                  $("html, body").animate({ scrollTop: "0" }, 500),
                  $(".alert").delay(5e3).slideUp(300))
                : ($("#userValidationErrorsBox").html("").hide(),
                  displayDocument(this, "#userPreviewImage", e));
            }),
            listen("click", ".remove-users-image", function () {
              defaultImagePreview("#userPreviewImage", 1);
            });
        },
        1613: () => {
          listen("click", ".user-delete-btn", function (e) {
            var t = $(e.currentTarget).attr("data-id");
            deleteItem(
              $("#indexUserUrl").val() + "/" + t,
              "",
              Lang.get("messages.user.usrs")
            );
          }),
            listen("change", ".user-status", function (e) {
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url: $("#indexUserUrl").val() + "/" + t + "/active-deactive",
                  method: "post",
                  cache: !1,
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      livewire.emit("refresh"));
                  }
                });
            }),
            listen("click", ".show-user-btn", function (e) {
              e.preventDefault();
              var t,
                a = $(e.currentTarget).attr("data-id");
              (t = a),
                $.ajax({
                  url: $("#usersShowModal").val() + "/" + t,
                  type: "GET",
                  success: function (e) {
                    if (e.success) {
                      var t;
                      $("#showUserFirst_name").text(e.data.first_name),
                        $("#showUserLast_name").text(e.data.last_name),
                        $("#showUserEmail").text(e.data.email),
                        $("#showUserRole").text(e.data.roles[0].name),
                        $("#showUserPhone").text(
                          null !== (t = e.data.phone) && void 0 !== t ? t : "N/A"
                        ),
                        $("#showUserGender").text(e.data.gender_string),
                        $("#showUserDob").text(""),
                        null != e.data.dob &&
                          $("#showUserDob").text(
                            moment(e.data.dob).format("Mo MMM, YYYY")
                          ),
                        $("#showUserStatus").empty();
                      var a = $("#userActive").val(),
                        n = $("#userDeActive").val();
                      1 == e.data.status
                        ? $("#showUserStatus").append(
                            '<span class="badge bg-light-success">' +
                              a +
                              "</span>"
                          )
                        : $("#showUserStatus").append(
                            '<span class="badge bg-light-danger">' + n + "</span>"
                          ),
                        moment.locale($("#userLanguage").val()),
                        $("#showUserCreated_on").text(
                          moment(e.data.created_at).fromNow()
                        ),
                        $("#showUserUpdated_on").text(
                          moment(e.data.updated_at).fromNow()
                        ),
                        $("#showUserProfilePicture").attr(
                          "src",
                          e.data.image_url
                        ),
                        setValueOfEmptySpan(),
                        $("#showUser").appendTo("body").modal("show");
                    }
                  },
                  error: function (e) {
                    displayErrorMessage(e.responseJSON.message);
                  }
                });
            }),
            listen("change", ".is-user-verified", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              $.ajax({
                url: $("#indexUserUrl").val() + "/" + t + "/is-verified",
                method: "post",
                cache: !1,
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message), livewire.emit("refresh"));
                }
              });
            }),
            listenChange("#usersStatusArr", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            }),
            listenChange("#userRoleArr", function () {
              window.livewire.emit(
                "changeRoleFilter",
                "roleFilter",
                $(this).val()
              );
            }),
            listenClick("#userResetFilter", function () {
              $("#userRoleArr").val(0).trigger("change"),
                $("#usersStatusArr").val(0).trigger("change"),
                hideDropdownManually($("#userFilterButton"), $(".dropdown-menu"));
            });
        },
        9113: () => {},
        3851: () => {
          document.addEventListener("turbo:load", function () {
            if (
              !$("#vPatientDoesGivenDate").length &&
              !$("#editVPatientDoesGivenDate").length
            )
              return;
            $("#vPatientDoesGivenDate,#editVPatientDoesGivenDate").flatpickr({
              enableTime: !0,
              defaultDate: new Date(),
              dateFormat: "Y-m-d H:i",
              locale: $(".userCurrentLanguage").val()
            });
            listenShownBsModal("#add_vaccinated_patient_modal", function () {
              $("#vPatientName,#vPatientVaccinationName").select2({
                width: "100%",
                dropdownParent: $("#add_vaccinated_patient_modal")
              });
            }),
              listenShownBsModal("#edit_vaccinated_patient_modal", function () {
                $("#editVPatientName,#editVPatientVaccinationName").select2({
                  width: "100%",
                  dropdownParent: $("#edit_vaccinated_patient_modal")
                });
              });
          }),
            listenShownBsModal("#add_vaccinated_patient_modal", function () {
              $("#vPatientDoesGivenDate").val(
                moment().format("YYYY-MM-DD HH:mm")
              );
            }),
            listenSubmit("#add_vaccinated_patient_form", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#vPatientBtnSave");
              t.button("loading"),
                $.ajax({
                  url: $("#vaccinatedPatientsStore").val(),
                  type: "POST",
                  data: $(this).serialize(),
                  success: function (e) {
                    e.success &&
                      (displaySuccessMessage(e.message),
                      $("#add_vaccinated_patient_modal").modal("hide"),
                      livewire.emit("refresh"),
                      setTimeout(function () {
                        t.button("reset");
                      }, 2500));
                  },
                  error: function (e) {
                    printErrorMessage("#vPatientValidationErrorsBox", e),
                      setTimeout(function () {
                        t.button("reset");
                      }, 2e3);
                  }
                });
            }),
            listenHiddenBsModal("#add_vaccinated_patient_modal", function () {
              $("#vPatientPatientName").val("").trigger("change"),
                $("#vPatientVaccinationName").val("").trigger("change"),
                resetModalForm(
                  "#add_vaccinated_patient_form",
                  "#vPatientValidationErrorsBox"
                );
            }),
            listenClick(".edit-vaccinatedPatient-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t = $(e.currentTarget).attr("data-id");
                renderVaccinatedPatientData(t);
              }
            }),
            (window.renderVaccinatedPatientData = function (e) {
              $.ajax({
                url: $("#vaccinatedPatientsIndex").val() + "/" + e + "/edit",
                type: "GET",
                success: function (e) {
                  if (e.success) {
                    var t = e.data;
                    $("#editVPatientId").val(t.id),
                      $("#editVPatientName")
                        .val(t.patient_id)
                        .trigger("change.select2"),
                      $("#editVPatientVaccinationName")
                        .val(t.vaccination_id)
                        .trigger("change.select2"),
                      $("#editVPatientSerialNo").val(t.vaccination_serial_number),
                      $("#editVPatientDoseNumber").val(t.dose_number),
                      $("#editVPatientDoesGivenDate").val(
                        moment(t.dose_given_date)
                          .utc()
                          .format("YYYY-MM-DD HH:mm:ss")
                      ),
                      $("#editVPatientDescription").val(t.description),
                      $("#edit_vaccinated_patient_modal").modal("show"),
                      ajaxCallCompleted();
                  }
                },
                error: function (e) {
                  manageAjaxErrors(e);
                }
              });
            }),
            listenSubmit("#edit_vaccinated_patient_form", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#editVPatientBtnSave");
              t.button("loading");
              var a = $("#editVPatientId").val();
              $.ajax({
                url: $("#vaccinatedPatientsIndex").val() + "/" + a + "/update",
                type: "post",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_vaccinated_patient_modal").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  manageAjaxErrors(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenClick(".delete-vaccinatedPatient-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#vaccinatedPatientsIndex").val() + "/" + t,
                "",
                $("#vaccinatedPatient").val()
              );
            });
        },
        3219: () => {
          listenSubmit("#add_vaccinations_form", function (e) {
            e.preventDefault();
            var t = jQuery(this).find("#vaccinationBtnSave");
            t.button("loading"),
              $.ajax({
                url: $("#vaccination_createUrl").val(),
                type: "POST",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#add_vaccinations_modal").modal("hide"),
                    livewire.emit("refresh"),
                    setTimeout(function () {
                      t.button("reset");
                    }, 2500));
                },
                error: function (e) {
                  printErrorMessage("#createValidationErrorsBox", e),
                    setTimeout(function () {
                      t.button("reset");
                    }, 2e3);
                }
              });
          }),
            listenHiddenBsModal("#add_vaccinations_modal", function () {
              resetModalForm(
                "#add_vaccinations_form",
                "#createValidationErrorsBox"
              );
            }),
            listenClick(".edit-vaccinations-btn", function (e) {
              if (!$(".ajaxCallIsRunning").val()) {
                ajaxCallInProgress();
                var t,
                  a = $(e.currentTarget).attr("data-id");
                (t = a),
                  $.ajax({
                    url: $("#vaccination_url").val() + "/" + t + "/edit",
                    type: "GET",
                    success: function (e) {
                      if (e.success) {
                        var t = e.data;
                        $("#vaccinationId").val(t.id),
                          $("#editVaccinationName").val(t.name),
                          $("#editVaccinationManufacturedBy").val(
                            t.manufactured_by
                          ),
                          $("#editVaccinationBrand").val(t.brand),
                          $("#edit_vaccinations_modal").modal("show"),
                          ajaxCallCompleted();
                      }
                    },
                    error: function (e) {
                      manageAjaxErrors(e);
                    }
                  });
              }
            }),
            listenSubmit("#edit_vaccinations_form", function (e) {
              e.preventDefault();
              var t = jQuery(this).find("#btnEditVaccinationSave");
              t.button("loading");
              var a = $("#vaccinationId").val();
              $.ajax({
                url: $("#vaccination_url").val() + "/" + a + "/update",
                type: "post",
                data: $(this).serialize(),
                success: function (e) {
                  e.success &&
                    (displaySuccessMessage(e.message),
                    $("#edit_vaccinations_modal").modal("hide"),
                    livewire.emit("refresh"));
                },
                error: function (e) {
                  manageAjaxErrors(e);
                },
                complete: function () {
                  t.button("reset");
                }
              });
            }),
            listenClick(".delete-vaccination-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $("#vaccination_url").val() + "/" + t,
                "",
                $("#Vaccination").val()
              );
            });
        },
        9470: () => {
          document.addEventListener("turbo:load", function () {
            (function () {
              if (!$("#visitorDate").length) return;
              $("#visitorDate").flatpickr({
                format: "YYYY-MM-DD",
                useCurrent: !0,
                sideBySide: !0,
                locale: $(".userCurrentLanguage").val()
              });
            })(),
              (function () {
                if (!$("#visitorOutTime").length) return;
                $("#visitorInTime,#visitorOutTime").flatpickr({
                  enableTime: !0,
                  enableSeconds: !0,
                  noCalendar: !0,
                  dateFormat: "H:i:S",
                  locale: $(".userCurrentLanguage").val()
                }),
                  $("#visitorOutTime").flatpickr({
                    enableTime: !0,
                    enableSeconds: !0,
                    noCalendar: !0,
                    dateFormat: "H:i:S",
                    minTime: moment(new Date()).format("HH:mm:ss"),
                    locale: $(".userCurrentLanguage").val()
                  }),
                  $("#visitorPurpose").select2({ width: "100%" });
              })();
          }),
            listenSubmit("#createVisitorForm, #editVisitorForm", function () {
              if ("" !== $(".error-msg").text())
                return $("#visitorPhoneNumber").focus(), !1;
            }),
            listen(
              "keyup keypress",
              "#createVisitorForm, #editVisitorForm",
              function (e) {
                if (13 === (e.keyCode || e.which)) return e.preventDefault(), !1;
              }
            ),
            $("#visitorInTime").on("dp.change", function (e) {
              $("#visitorOutTime").data("flatpickr").minTime(e.time);
            }),
            listenChange("#visitorAttachment", function () {
              var e = isValidVisitorDocument($(this), "#visitorErrorsBox");
              isEmpty(e) || 0 == e
                ? ($(this).val(""),
                  $("#visitorErrorsBox").removeClass("d-none hide"),
                  $("#visitorErrorsBox")
                    .text("The image must be a file of type: jpg, jpeg, png.")
                    .show(),
                  $("[id=visitorErrorsBox]").focus(),
                  $("html, body").animate({ scrollTop: "0" }, 500),
                  $(".alert").delay(5e3).slideUp(300))
                : ($("#visitorErrorsBox").html("").hide(),
                  displayDocument(this, "#visitorPreviewImage", e),
                  $("#visitorSave").attr("disabled", !1));
            }),
            (window.isValidVisitorDocument = function (e, t) {
              var a = $(e).val().split(".").pop().toLowerCase();
              return (
                -1 !=
                  $.inArray(a, ["png", "jpg", "jpeg", "pdf", "doc", "docx"]) &&
                ($(t).addClass("d-none"), a)
              );
            }),
            listenClick(".visitor-remove-image", function () {
              defaultImagePreview("#visitorPreviewImage");
            });
        },
        1105: () => {
          document.addEventListener("turbo:load", function () {
            if (!$("#purposeArr").length) return;
            $("#purposeArr").select2({ width: "100%" });
          }),
            listenClick(".delete-visitor-btn", function (e) {
              var t = $(e.currentTarget).attr("data-id");
              deleteItem(
                $(".visitorUrl").val() + "/" + t,
                "",
                $("#Visitor").val()
              );
            }),
            listenClick("#visitorResetFilter", function () {
              $("#visitorsHead").val(0).trigger("change"),
                hideDropdownManually(
                  $("#visitorsFilterBtn"),
                  $(".dropdown-menu")
                );
            }),
            listenChange("#visitorsHead", function () {
              window.livewire.emit("changeFilter", "statusFilter", $(this).val());
            });
        },
        169: () => {
          document.addEventListener("turbo:load", function () {
            if (!$(".lightGallery").length) return;
            $(".lightgallery").lightGallery({
              mode: "lg-slide-circular",
              counter: !1
            });
          });
        },
        2743: (e) => {
          !(function (t, a) {
            var n = a.jQuery;
            e.exports = n
              ? t(a, n)
              : function (e) {
                  if (e && !e.fn) throw "Provide jQuery or null";
                  return t(a, e);
                };
          })(function (e, t) {
            "use strict";
            var a = !1 === t;
            t = t && t.fn ? t : e.jQuery;
            var n,
              i,
              r,
              s,
              o,
              d,
              l,
              c,
              u,
              m,
              _,
              h,
              p,
              g,
              f,
              v,
              y,
              M,
              w,
              $,
              b,
              L,
              D = "v1.0.7",
              k = "_ocp",
              Y = /[ \t]*(\r\n|\n|\r)/g,
              T = /\\(['"\\])/g,
              S = /['"\\]/g,
              x = /(?:\x08|^)(onerror:)?(?:(~?)(([\w$.]+):)?([^\x08]+))\x08(,)?([^\x08]+)/gi,
              C = /^if\s/,
              I = /<(\w+)[>\s]/,
              P = /[\x00`><\"'&=]/,
              E = /^on[A-Z]|^convert(Back)?$/,
              j = /^\#\d+_`[\s\S]*\/\d+_`$/,
              H = /[\x00`><"'&=]/g,
              F = /[&<>]/g,
              O = /&(amp|gt|lt);/g,
              B = /\[['"]?|['"]?\]/g,
              A = 0,
              R = {
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                "\0": "&#0;",
                "'": "&#39;",
                '"': "&#34;",
                "`": "&#96;",
                "=": "&#61;"
              },
              U = { amp: "&", gt: ">", lt: "<" },
              q = "html",
              N = "object",
              W = "data-jsv-tmpl",
              z = "jsvTmpl",
              V = "For #index in nested block use #getIndex().",
              J = {},
              G = {},
              Q = e.jsrender,
              K = Q && t && !t.render,
              Z = {
                template: {
                  compile: function e(a, n, i, r) {
                    function o(n) {
                      var s, o;
                      if ("" + n === n || (n.nodeType > 0 && (d = n))) {
                        if (!d)
                          if (/^\.?\/[^\\:*?"<>]*$/.test(n))
                            (o = c[(a = a || n)])
                              ? (n = o)
                              : (d = document.getElementById(n));
                          else if (t.fn && !h.rTmpl.test(n))
                            try {
                              d = t(n, document)[0];
                            } catch (e) {}
                        d &&
                          ("SCRIPT" !== d.tagName &&
                            $e(n + ": Use script block, not " + d.tagName),
                          r
                            ? (n = d.innerHTML)
                            : ((s = d.getAttribute(W)) &&
                                (s !== z
                                  ? ((n = c[s]), delete c[s])
                                  : t.fn && (n = t.data(d).jsvTmpl)),
                              (s && n) ||
                                ((a = a || (t.fn ? z : n)),
                                (n = e(a, d.innerHTML, i, r))),
                              (n.tmplName = a = a || s),
                              a !== z && (c[a] = n),
                              d.setAttribute(W, a),
                              t.fn && t.data(d, z, n))),
                          (d = void 0);
                      } else n.fn || (n = void 0);
                      return n;
                    }
                    var d,
                      l,
                      m = (n = n || "");
                    (h._html = u.html), 0 === r && ((r = void 0), (m = o(m)));
                    ((r =
                      r || (n.markup ? (n.bnds ? re({}, n) : n) : {})).tmplName =
                      r.tmplName || a || "unnamed"),
                      i && (r._parentTmpl = i);
                    !m && n.markup && (m = o(n.markup)) && m.fn && (m = m.markup);
                    if (void 0 !== m)
                      return (
                        m.render || n.render
                          ? m.tmpls && (l = m)
                          : ((n = ge(m, r)), Le(m.replace(S, "\\$&"), n)),
                        l ||
                          (function (e) {
                            var t, a, n;
                            for (t in Z)
                              e[(a = t + "s")] &&
                                ((n = e[a]), (e[a] = {}), s[a](n, e));
                          })(
                            (l = re(function () {
                              return l.render.apply(l, arguments);
                            }, n))
                          ),
                        l
                      );
                  }
                },
                tag: {
                  compile: function (e, t, a) {
                    var n,
                      i,
                      r,
                      s = new h._tg();
                    function o() {
                      var t = this;
                      (t._ = { unlinked: !0 }), (t.inline = !0), (t.tagName = e);
                    }
                    d(t)
                      ? (t = { depends: t.depends, render: t })
                      : "" + t === t && (t = { template: t });
                    if ((i = t.baseTag))
                      for (r in ((t.flow = !!t.flow),
                      (i = "" + i === i ? (a && a.tags[i]) || _[i] : i) ||
                        $e('baseTag: "' + t.baseTag + '" not found'),
                      (s = re(s, i)),
                      t))
                        s[r] = ee(i[r], t[r]);
                    else s = re(s, t);
                    void 0 !== (n = s.template) &&
                      (s.template = "" + n === n ? c[n] || c(n) : n);
                    ((o.prototype = s).constructor = s._ctr = o),
                      a && (s._parentTmpl = a);
                    return s;
                  }
                },
                viewModel: {
                  compile: function (e, a) {
                    var n,
                      i,
                      r,
                      s = this,
                      c = a.getters,
                      u = a.extend,
                      m = a.id,
                      _ = t.extend(
                        { _is: e || "unnamed", unmap: b, merge: $ },
                        u
                      ),
                      h = "",
                      p = "",
                      g = c ? c.length : 0,
                      f = t.observable,
                      v = {};
                    function y(e) {
                      i.apply(this, e);
                    }
                    function M() {
                      return new y(arguments);
                    }
                    function w(e, t) {
                      for (var a, n, i, r, o, d = 0; d < g; d++)
                        (a = void 0),
                          (i = c[d]) + "" !== i &&
                            ((i = (a = i).getter), (o = a.parentRef)),
                          void 0 === (r = e[i]) &&
                            a &&
                            void 0 !== (n = a.defaultVal) &&
                            (r = he(n, e)),
                          t(r, a && s[a.type], i, o);
                    }
                    function $(e, t, a) {
                      e = e + "" === e ? JSON.parse(e) : e;
                      var n,
                        i,
                        r,
                        s,
                        d,
                        c,
                        u,
                        _,
                        h,
                        p,
                        g = 0,
                        y = this;
                      if (l(y)) {
                        for (
                          u = {}, h = [], i = e.length, r = y.length;
                          g < i;
                          g++
                        ) {
                          for (_ = e[g], c = !1, n = 0; n < r && !c; n++)
                            u[n] ||
                              ((d = y[n]),
                              m &&
                                (u[n] = c =
                                  m + "" === m
                                    ? _[m] && (v[m] ? d[m]() : d[m]) === _[m]
                                    : m(d, _)));
                          c
                            ? (d.merge(_), h.push(d))
                            : (h.push((p = M.map(_))), a && pe(p, a, t));
                        }
                        f
                          ? f(y).refresh(h, !0)
                          : y.splice.apply(y, [0, y.length].concat(h));
                      } else
                        for (s in (w(e, function (e, t, a, n) {
                          t ? y[a]().merge(e, y, n) : y[a]() !== e && y[a](e);
                        }),
                        e))
                          s === o || v[s] || (y[s] = e[s]);
                    }
                    function b() {
                      var e,
                        t,
                        a,
                        n,
                        i = 0,
                        r = this;
                      function u(e) {
                        for (var t = [], a = 0, n = e.length; a < n; a++)
                          t.push(e[a].unmap());
                        return t;
                      }
                      if (l(r)) return u(r);
                      for (e = {}; i < g; i++)
                        (a = void 0),
                          (t = c[i]) + "" !== t && (t = (a = t).getter),
                          (n = r[t]()),
                          (e[t] =
                            a && n && s[a.type] ? (l(n) ? u(n) : n.unmap()) : n);
                      for (t in r)
                        !r.hasOwnProperty(t) ||
                          ("_" === t.charAt(0) && v[t.slice(1)]) ||
                          t === o ||
                          d(r[t]) ||
                          (e[t] = r[t]);
                      return e;
                    }
                    for (y.prototype = _, n = 0; n < g; n++)
                      !(function (e) {
                        (e = e.getter || e), (v[e] = n + 1);
                        var t = "_" + e;
                        (h += (h ? "," : "") + e),
                          (p += "this." + t + " = " + e + ";\n"),
                          (_[e] =
                            _[e] ||
                            function (a) {
                              if (!arguments.length) return this[t];
                              f ? f(this).setProperty(e, a) : (this[t] = a);
                            }),
                          f &&
                            (_[e].set =
                              _[e].set ||
                              function (e) {
                                this[t] = e;
                              });
                      })(c[n]);
                    return (
                      (p = new Function(h, p)),
                      ((i = function () {
                        p.apply(this, arguments),
                          (r = arguments[g + 1]) && pe(this, arguments[g], r);
                      }).prototype = _),
                      (_.constructor = i),
                      (M.map = function (t) {
                        t = t + "" === t ? JSON.parse(t) : t;
                        var a,
                          n,
                          i,
                          r,
                          s = 0,
                          d = t,
                          u = [];
                        if (l(t)) {
                          for (a = (t = t || []).length; s < a; s++)
                            u.push(this.map(t[s]));
                          return (u._is = e), (u.unmap = b), (u.merge = $), u;
                        }
                        if (t) {
                          for (
                            w(t, function (e, t) {
                              t && (e = t.map(e)), u.push(e);
                            }),
                              d = this.apply(this, u),
                              s = g;
                            s--;

                          )
                            if (
                              ((i = u[s]), (r = c[s].parentRef) && i && i.unmap)
                            )
                              if (l(i)) for (a = i.length; a--; ) pe(i[a], r, d);
                              else pe(i, r, d);
                          for (n in t) n === o || v[n] || (d[n] = t[n]);
                        }
                        return d;
                      }),
                      (M.getters = c),
                      (M.extend = u),
                      (M.id = m),
                      M
                    );
                  }
                },
                helper: {},
                converter: {}
              };
            function X(e, t) {
              return function () {
                var a,
                  n = this,
                  i = n.base;
                return (n.base = e), (a = t.apply(n, arguments)), (n.base = i), a;
              };
            }
            function ee(e, t) {
              return (
                d(t) &&
                  ((t = X(e ? (e._d ? e : X(ne, e)) : ne, t))._d =
                    ((e && e._d) || 0) + 1),
                t
              );
            }
            function te(e, t) {
              var a,
                n = t.props;
              for (a in n)
                !E.test(a) ||
                  (e[a] && e[a].fix) ||
                  (e[a] =
                    "convert" !== a
                      ? ee(e.constructor.prototype[a], n[a])
                      : n[a]);
            }
            function ae(e) {
              return e;
            }
            function ne() {
              return "";
            }
            function ie(e) {
              (this.name = (t.link ? "JsViews" : "JsRender") + " Error"),
                (this.message = e || this.name);
            }
            function re(e, t) {
              if (e) {
                for (var a in t) e[a] = t[a];
                return e;
              }
            }
            function se() {
              var e = this.get("item");
              return e ? e.index : void 0;
            }
            function oe() {
              return this.index;
            }
            function de(e, t, a, n) {
              var i,
                r,
                s,
                o = 0;
              if ((1 === a && ((n = 1), (a = void 0)), t))
                for (s = (r = t.split(".")).length; e && o < s; o++)
                  (i = e), (e = r[o] ? e[r[o]] : e);
              return (
                a && (a.lt = a.lt || o < s),
                void 0 === e
                  ? n
                    ? ne
                    : ""
                  : n
                  ? function () {
                      return e.apply(i, arguments);
                    }
                  : e
              );
            }
            function le(a, n, i) {
              var r,
                s,
                o,
                l,
                c,
                u,
                _,
                p = this,
                g = !L && arguments.length > 1,
                f = p.ctx;
              if (a) {
                if (
                  (p._ || ((c = p.index), (p = p.tag)),
                  (u = p),
                  (f && f.hasOwnProperty(a)) || (f = m).hasOwnProperty(a))
                ) {
                  if (
                    ((o = f[a]),
                    "tag" === a ||
                      "tagCtx" === a ||
                      "root" === a ||
                      "parentTags" === a)
                  )
                    return o;
                } else f = void 0;
                if (
                  ((!L && p.tagCtx) || p.linked) &&
                  ((o && o._cxp) ||
                    ((p =
                      p.tagCtx || d(o)
                        ? p
                        : (!(p = p.scope || p).isTop && p.ctx.tag) || p),
                    void 0 !== o && p.tagCtx && (p = p.tagCtx.view.scope),
                    (f = p._ocps),
                    ((o = (f && f.hasOwnProperty(a) && f[a]) || o) && o._cxp) ||
                      (!i && !g) ||
                      (((f || (p._ocps = p._ocps || {}))[a] = o = [
                        { _ocp: o, _vw: u, _key: a }
                      ]),
                      (o._cxp = {
                        path: k,
                        ind: 0,
                        updateValue: function (e, a) {
                          return t.observable(o[0]).setProperty(k, e), this;
                        }
                      }))),
                  (l = o && o._cxp))
                ) {
                  if (arguments.length > 2)
                    return (
                      (s = o[1] ? h._ceo(o[1].deps) : [k]).unshift(o[0]),
                      (s._cxp = l),
                      s
                    );
                  if (
                    ((c = l.tagElse),
                    (_ = o[1]
                      ? l.tag && l.tag.cvtArgs
                        ? l.tag.cvtArgs(c, 1)[l.ind]
                        : o[1](o[0].data, o[0], h)
                      : o[0]._ocp),
                    g)
                  )
                    return h._ucp(a, n, p, l), p;
                  o = _;
                }
                return (
                  o &&
                    d(o) &&
                    re(
                      (r = function () {
                        return o.apply(this && this !== e ? this : u, arguments);
                      }),
                      o
                    ),
                  r || o
                );
              }
            }
            function ce(e, t) {
              var a,
                n,
                i,
                r,
                s,
                o,
                d,
                c = this;
              if (c.tagName) {
                if (!(c = ((o = c).tagCtxs || [c])[e || 0])) return;
              } else o = c.tag;
              if (
                ((s = o.bindFrom),
                (r = c.args),
                (d = o.convert) &&
                  "" + d === d &&
                  (d =
                    "true" === d
                      ? void 0
                      : c.view.getRsc("converters", d) ||
                        $e("Unknown converter: '" + d + "'")),
                d && !t && (r = r.slice()),
                s)
              ) {
                for (i = [], a = s.length; a--; ) (n = s[a]), i.unshift(ue(c, n));
                t && (r = i);
              }
              if (d) {
                if (void 0 === (d = d.apply(o, i || r))) return r;
                if (
                  ((a = (s = s || [0]).length),
                  (l(d) && d.length === a) || ((d = [d]), (s = [0]), (a = 1)),
                  t)
                )
                  r = d;
                else for (; a--; ) +(n = s[a]) === n && (r[n] = d[a]);
              }
              return r;
            }
            function ue(e, t) {
              return (e = e[+t === t ? "args" : "props"]) && e[t];
            }
            function me(e) {
              return this.cvtArgs(e, 1);
            }
            function _e(e, t, a, n, i, r, s, o) {
              var d,
                l,
                c,
                u = this,
                m = "array" === t;
              (u.content = o),
                (u.views = m ? [] : {}),
                (u.data = n),
                (u.tmpl = i),
                (c = u._ = {
                  key: 0,
                  useKey: m ? 0 : 1,
                  id: "" + A++,
                  onRender: s,
                  bnds: {}
                }),
                (u.linked = !!s),
                (u.type = t || "top"),
                t && (u.cache = { _ct: p._cchCt }),
                (a && "top" !== a.type) || ((u.ctx = e || {}).root = u.data),
                (u.parent = a)
                  ? ((u.root = a.root || u),
                    (d = a.views),
                    (l = a._),
                    (u.isTop = l.scp),
                    (u.scope =
                      ((!e.tag || e.tag === a.ctx.tag) && !u.isTop && a.scope) ||
                      u),
                    l.useKey
                      ? ((d[(c.key = "_" + l.useKey++)] = u),
                        (u.index = V),
                        (u.getIndex = se))
                      : d.length === (c.key = u.index = r)
                      ? d.push(u)
                      : d.splice(r, 0, u),
                    (u.ctx = e || a.ctx))
                  : t && (u.root = u);
            }
            function he(e, t) {
              return d(e) ? e.call(t) : e;
            }
            function pe(e, t, a) {
              Object.defineProperty(e, t, { value: a, configurable: !0 });
            }
            function ge(e, a) {
              var n,
                i = g._wm || {},
                r = {
                  tmpls: [],
                  links: {},
                  bnds: [],
                  _is: "template",
                  render: Me
                };
              return (
                a && (r = re(r, a)),
                (r.markup = e),
                r.htmlTag ||
                  ((n = I.exec(e)), (r.htmlTag = n ? n[1].toLowerCase() : "")),
                (n = i[r.htmlTag]) &&
                  n !== i.div &&
                  (r.markup = t.trim(r.markup)),
                r
              );
            }
            function fe(e, t) {
              var a = e + "s";
              s[a] = function n(i, r, o) {
                var d,
                  l,
                  c,
                  u = h.onStore[e];
                if (
                  i &&
                  typeof i === N &&
                  !i.nodeType &&
                  !i.markup &&
                  !i.getTgt &&
                  !(("viewModel" === e && i.getters) || i.extend)
                ) {
                  for (l in i) n(l, i[l], r);
                  return r || s;
                }
                return (
                  i && "" + i !== i && ((o = r), (r = i), (i = void 0)),
                  (c = o ? ("viewModel" === e ? o : (o[a] = o[a] || {})) : n),
                  (d = t.compile),
                  void 0 === r && ((r = d ? i : c[i]), (i = void 0)),
                  null === r
                    ? i && delete c[i]
                    : (d && ((r = d.call(c, i, r, o, 0) || {})._is = e),
                      i && (c[i] = r)),
                  u && u(i, r, o, d),
                  r
                );
              };
            }
            function ve(e) {
              f[e] =
                f[e] ||
                function (t) {
                  return arguments.length ? ((p[e] = t), f) : p[e];
                };
            }
            function ye(e) {
              function t(t, a) {
                (this.tgt = e.getTgt(t, a)), (a.map = this);
              }
              return (
                d(e) && (e = { getTgt: e }),
                e.baseMap && (e = re(re({}, e.baseMap), e)),
                (e.map = function (e, a) {
                  return new t(e, a);
                }),
                e
              );
            }
            function Me(e, t, a, n, i, s) {
              var o,
                c,
                u,
                m,
                _,
                p,
                f,
                v,
                y = n,
                M = "";
              if (
                (!0 === t
                  ? ((a = t), (t = void 0))
                  : typeof t !== N && (t = void 0),
                (u = this.tag)
                  ? ((_ = this),
                    (m = (y = y || _.view)._getTmpl(u.template || _.tmpl)),
                    arguments.length ||
                      (e =
                        u.contentCtx && d(u.contentCtx)
                          ? (e = u.contentCtx(e))
                          : y))
                  : (m = this),
                m)
              ) {
                if (
                  (!n && e && "view" === e._is && (y = e),
                  y && e === y && (e = y.data),
                  (p = !y),
                  (L = L || p),
                  p && ((t = t || {}).root = e),
                  !L || g.useViews || m.useViews || (y && y !== r))
                )
                  M = we(m, e, t, a, y, i, s, u);
                else {
                  if (
                    (y
                      ? ((f = y.data), (v = y.index), (y.index = V))
                      : ((f = (y = r).data), (y.data = e), (y.ctx = t)),
                    l(e) && !a)
                  )
                    for (o = 0, c = e.length; o < c; o++)
                      (y.index = o), (y.data = e[o]), (M += m.fn(e[o], y, h));
                  else (y.data = e), (M += m.fn(e, y, h));
                  (y.data = f), (y.index = v);
                }
                p && (L = void 0);
              }
              return M;
            }
            function we(e, t, a, n, i, r, s, o) {
              var d,
                c,
                u,
                m,
                _,
                p,
                g,
                f,
                v,
                y,
                M,
                w,
                $,
                b = "";
              if (
                (o &&
                  ((v = o.tagName),
                  (w = o.tagCtx),
                  (a = a ? Se(a, o.ctx) : o.ctx),
                  e === i.content
                    ? (g = e !== i.ctx._wrp ? i.ctx._wrp : void 0)
                    : e !== w.content
                    ? e === o.template
                      ? ((g = w.tmpl), (a._wrp = w.content))
                      : (g = w.content || i.content)
                    : (g = i.content),
                  !1 === w.props.link && ((a = a || {}).link = !1)),
                i &&
                  ((s = s || i._.onRender),
                  ($ = a && !1 === a.link) && i._.nl && (s = void 0),
                  (a = Se(a, i.ctx)),
                  (w = !o && i.tag ? i.tag.tagCtxs[i.tagElse] : w)),
                (y = w && w.props.itemVar) &&
                  ("~" !== y[0] && be("Use itemVar='~myItem'"), (y = y.slice(1))),
                !0 === r && ((p = !0), (r = 0)),
                s && o && o._.noVws && (s = void 0),
                (f = s),
                !0 === s && ((f = void 0), (s = i._.onRender)),
                (M = a = e.helpers ? Se(e.helpers, a) : a),
                l(t) && !n)
              )
                for (
                  (u = p
                    ? i
                    : (void 0 !== r && i) ||
                      new _e(a, "array", i, t, e, r, s, g))._.nl = $,
                    i &&
                      i._.useKey &&
                      ((u._.bnd = !o || (o._.bnd && o)), (u.tag = o)),
                    d = 0,
                    c = t.length;
                  d < c;
                  d++
                )
                  (m = new _e(M, "item", u, t[d], e, (r || 0) + d, s, u.content)),
                    y && ((m.ctx = re({}, M))[y] = h._cp(t[d], "#data", m)),
                    (_ = e.fn(t[d], m, h)),
                    (b += u._.onRender ? u._.onRender(_, m) : _);
              else
                (u = p ? i : new _e(M, v || "data", i, t, e, r, s, g)),
                  y && ((u.ctx = re({}, M))[y] = h._cp(t, "#data", u)),
                  (u.tag = o),
                  (u._.nl = $),
                  (b += e.fn(t, u, h));
              return (
                o && ((u.tagElse = w.index), (w.contentView = u)), f ? f(b, u) : b
              );
            }
            function $e(e) {
              throw new h.Err(e);
            }
            function be(e) {
              $e("Syntax error\n" + e);
            }
            function Le(e, t, a, n, r) {
              function s(t) {
                (t -= g) && $.push(e.substr(g, t).replace(Y, "\\n"));
              }
              function o(t, a) {
                t &&
                  ((t += "}}"),
                  be(
                    (a
                      ? "{{" + a + "}} block has {{/" + t + " without {{" + t
                      : "Unmatched or missing {{/" + t) +
                      ", in template:\n" +
                      e
                  ));
              }
              var d,
                l,
                c,
                u,
                m,
                _ = p.allowCode || (t && t.allowCode) || !0 === f.allowCode,
                h = [],
                g = 0,
                y = [],
                $ = h,
                b = [, , h];
              if (
                (_ && t._is && (t.allowCode = _),
                a &&
                  (void 0 !== n && (e = e.slice(0, -n.length - 2) + M),
                  (e = v + e + w)),
                o(y[0] && y[0][2].pop()[0]),
                e.replace(i, function (i, d, l, m, h, p, f, v, M, w, L, D) {
                  ((f && d) || (M && !l) || (v && ":" === v.slice(-1)) || w) &&
                    be(i),
                    p && ((h = ":"), (m = q));
                  var k,
                    S,
                    I,
                    P = (d || a) && [[]],
                    j = "",
                    H = "",
                    F = "",
                    O = "",
                    B = "",
                    A = "",
                    R = "",
                    U = "",
                    N = !(M = M || (a && !r)) && !h;
                  (l = l || ((v = v || "#data"), h)),
                    s(D),
                    (g = D + i.length),
                    f
                      ? _ &&
                        $.push([
                          "*",
                          "\n" +
                            v.replace(/^:/, "ret+= ").replace(T, "$1") +
                            ";\n"
                        ])
                      : l
                      ? ("else" === l &&
                          (C.test(v) &&
                            be('For "{{else if expr}}" use "{{else expr}}"'),
                          (P = b[9] && [[]]),
                          (b[10] = e.substring(b[10], D)),
                          (S = b[11] || b[0] || be("Mismatched: " + i)),
                          (b = y.pop()),
                          ($ = b[2]),
                          (N = !0)),
                        v &&
                          Ye(v.replace(Y, " "), P, t, a)
                            .replace(x, function (e, t, a, n, i, r, s, o) {
                              return (
                                "this:" === n && (r = "undefined"),
                                o && (I = I || "@" === o[0]),
                                (n = "'" + i + "':"),
                                s
                                  ? ((H += a + r + ","), (O += "'" + o + "',"))
                                  : a
                                  ? ((F +=
                                      n + "j._cp(" + r + ',"' + o + '",view),'),
                                    (A += n + "'" + o + "',"))
                                  : t
                                  ? (R += r)
                                  : ("trigger" === i && (U += r),
                                    "lateRender" === i && (k = "false" !== o),
                                    (j += n + r + ","),
                                    (B += n + "'" + o + "',"),
                                    (u = u || E.test(i))),
                                ""
                              );
                            })
                            .slice(0, -1),
                        P && P[0] && P.pop(),
                        (c = [
                          l,
                          m || !!n || u || "",
                          N && [],
                          ke(O || (":" === l ? "'#data'," : ""), B, A),
                          ke(H || (":" === l ? "data," : ""), j, F),
                          R,
                          U,
                          k,
                          I,
                          P || 0
                        ]),
                        $.push(c),
                        N && (y.push(b), ((b = c)[10] = g), (b[11] = S)))
                      : L &&
                        (o(L !== b[0] && L !== b[11] && L, b[0]),
                        (b[10] = e.substring(b[10], D)),
                        (b = y.pop())),
                    o(!b && L),
                    ($ = b[2]);
                }),
                s(e.length),
                (g = h[h.length - 1]) &&
                  o("" + g !== g && +g[10] === g[10] && g[0]),
                a)
              ) {
                for (l = Te(h, e, a), m = [], d = h.length; d--; )
                  m.unshift(h[d][9]);
                De(l, m);
              } else l = Te(h, t);
              return l;
            }
            function De(e, t) {
              var a,
                n,
                i = 0,
                r = t.length;
              for (e.deps = [], e.paths = []; i < r; i++)
                for (a in (e.paths.push((n = t[i])), n))
                  "_jsvto" !== a &&
                    n.hasOwnProperty(a) &&
                    n[a].length &&
                    !n[a].skp &&
                    (e.deps = e.deps.concat(n[a]));
            }
            function ke(e, t, a) {
              return [e.slice(0, -1), t.slice(0, -1), a.slice(0, -1)];
            }
            function Ye(e, a, n, i) {
              var r,
                s,
                o,
                d,
                l,
                c = a && a[0],
                u = { bd: c },
                m = { 0: u },
                _ = 0,
                p = 0,
                f = 0,
                v = {},
                y = 0,
                M = {},
                w = {},
                $ = {},
                b = { 0: 0 },
                L = { 0: "" },
                D = 0;
              return (
                "@" === e[0] && (e = e.replace(B, ".")),
                (o = (e + (n ? " " : "")).replace(
                  h.rPrm,
                  function (
                    n,
                    o,
                    k,
                    Y,
                    T,
                    x,
                    C,
                    I,
                    P,
                    E,
                    j,
                    H,
                    F,
                    O,
                    B,
                    A,
                    R,
                    U,
                    q,
                    N,
                    W
                  ) {
                    Y && !I && (T = Y + T),
                      (x = x || ""),
                      (F = F || ""),
                      (k = k || o || F),
                      (T = T || P),
                      E &&
                        (E = !/\)|]/.test(W[N - 1])) &&
                        (T = T.slice(1).split(".").join("^")),
                      (j = j || U || "");
                    var z,
                      V,
                      G,
                      Q,
                      K,
                      Z,
                      X,
                      ee = N;
                    if (!l && !d) {
                      if ((C && be(e), R && c)) {
                        if (((z = $[f - 1]), W.length - 1 > ee - (z || 0))) {
                          if (
                            ((z = t.trim(W.slice(z, ee + n.length))),
                            (V = s || m[f - 1].bd),
                            (G = V[V.length - 1]) && G.prm)
                          ) {
                            for (; G.sb && G.sb.prm; ) G = G.sb;
                            Q = G.sb = { path: G.sb, bnd: G.bnd };
                          } else V.push((Q = { path: V.pop() }));
                          G &&
                            G.sb === Q &&
                            ((L[f] = L[f - 1].slice(G._cpPthSt) + L[f]),
                            (L[f - 1] = L[f - 1].slice(0, G._cpPthSt))),
                            (Q._cpPthSt = b[f - 1]),
                            (Q._cpKey = z),
                            (L[f] += W.slice(D, N)),
                            (D = N),
                            (Q._cpfn = J[z] =
                              J[z] ||
                              new Function(
                                "data,view,j",
                                "//" +
                                  z +
                                  "\nvar v;\nreturn ((v=" +
                                  L[f] +
                                  ("]" === A ? ")]" : A) +
                                  ")!=null?v:null);"
                              )),
                            (L[f - 1] +=
                              w[p] && g.cache
                                ? 'view.getCache("' + z.replace(S, "\\$&") + '"'
                                : L[f]),
                            (Q.prm = u.bd),
                            (Q.bnd =
                              Q.bnd || (Q.path && Q.path.indexOf("^") >= 0));
                        }
                        L[f] = "";
                      }
                      "[" === j && (j = "[j._sq("), "[" === k && (k = "[j._sq(");
                    }
                    return (
                      (X = l
                        ? (l = !O)
                          ? n
                          : F + '"'
                        : d
                        ? (d = !B)
                          ? n
                          : F + '"'
                        : (k
                            ? ((M[++p] = !0),
                              (v[p] = 0),
                              c &&
                                (($[f++] = ee++),
                                (u = m[f] = { bd: [] }),
                                (L[f] = ""),
                                (b[f] = 1)),
                              k)
                            : "") +
                          (q
                            ? p
                              ? ""
                              : ((_ = W.slice(_, ee)),
                                (r ? ((r = s = !1), "\b") : "\b,") +
                                  _ +
                                  ((_ = ee + n.length),
                                  c && a.push((u.bd = [])),
                                  "\b"))
                            : I
                            ? (f && be(e),
                              c && a.pop(),
                              (r = "_" + T),
                              Y,
                              (_ = ee + n.length),
                              c && ((c = u.bd = a[r] = []).skp = !Y),
                              T + ":")
                            : T
                            ? T.split("^")
                                .join(".")
                                .replace(
                                  h.rPath,
                                  function (e, t, n, o, d, l, m, _) {
                                    if (
                                      ((K = "." === n),
                                      n &&
                                        ((T = T.slice(t.length)),
                                        /^\.?constructor$/.test(_ || T) && be(e),
                                        K ||
                                          ((e =
                                            (E
                                              ? (i ? "" : "(ltOb.lt=ltOb.lt||") +
                                                "(ob="
                                              : "") +
                                            (o
                                              ? 'view.ctxPrm("' + o + '")'
                                              : d
                                              ? "view"
                                              : "data") +
                                            (E
                                              ? ")===undefined" +
                                                (i ? "" : ")") +
                                                '?"":view._getOb(ob,"'
                                              : "") +
                                            (_
                                              ? (l
                                                  ? "." + l
                                                  : o || d
                                                  ? ""
                                                  : "." + n) + (m || "")
                                              : ((_ = o ? "" : d ? l || "" : n),
                                                ""))),
                                          (e =
                                            t +
                                            ("view.data" ===
                                            (e += _ ? "." + _ : "").slice(0, 9)
                                              ? e.slice(5)
                                              : e) +
                                            (E
                                              ? (i ? '"' : '",ltOb') +
                                                (j ? ",1)" : ")")
                                              : ""))),
                                        c))
                                    ) {
                                      if (
                                        ((V =
                                          "_linkTo" === r
                                            ? (s = a._jsvto = a._jsvto || [])
                                            : u.bd),
                                        (G = K && V[V.length - 1]))
                                      ) {
                                        if (G._cpfn) {
                                          for (; G.sb; ) G = G.sb;
                                          G.prm &&
                                            (G.bnd && (T = "^" + T.slice(1)),
                                            (G.sb = T),
                                            (G.bnd = G.bnd || "^" === T[0]));
                                        }
                                      } else V.push(T);
                                      j &&
                                        !K &&
                                        (($[f] = ee), (b[f] = L[f].length));
                                    }
                                    return e;
                                  }
                                ) + (j || x)
                            : x ||
                              (A
                                ? "]" === A
                                  ? ")]"
                                  : ")"
                                : H
                                ? (w[p] || be(e), ",")
                                : o
                                ? ""
                                : ((l = O), (d = B), '"')))),
                      l || d || (A && ((w[p] = !1), p--)),
                      c &&
                        (l ||
                          d ||
                          (A &&
                            (M[p + 1] && ((u = m[--f]), (M[p + 1] = !1)),
                            (y = v[p + 1])),
                          j &&
                            ((v[p + 1] = L[f].length + (k ? 1 : 0)),
                            (T || A) &&
                              ((u = m[++f] = { bd: [] }), (M[p + 1] = !0)))),
                        (L[f] = (L[f] || "") + W.slice(D, N)),
                        (D = N + n.length),
                        l ||
                          d ||
                          ((Z = k && M[p + 1]) && ((L[f - 1] += k), b[f - 1]++),
                          "(" === j &&
                            K &&
                            !Q &&
                            ((L[f] = L[f - 1].slice(y) + L[f]),
                            (L[f - 1] = L[f - 1].slice(0, y)))),
                        (L[f] += Z ? X.slice(1) : X)),
                      l || d || !j || (p++, T && "(" === j && (w[p] = !0)),
                      l || d || !U || (c && (L[f] += j), (X += j)),
                      X
                    );
                  }
                )),
                c && (o = L[0]),
                (!p && o) || be(e)
              );
            }
            function Te(e, t, a) {
              var n,
                i,
                r,
                s,
                o,
                d,
                l,
                c,
                u,
                m,
                h,
                f,
                v,
                y,
                M,
                w,
                $,
                b,
                L,
                D,
                k,
                S,
                x,
                C,
                I,
                P,
                E,
                j,
                H,
                F,
                O,
                B,
                A,
                R,
                U = 0,
                N =
                  g.useViews ||
                  t.useViews ||
                  t.tags ||
                  t.templates ||
                  t.helpers ||
                  t.converters,
                W = "",
                z = {},
                V = e.length;
              for (
                "" + t === t
                  ? (($ = a
                      ? 'data-link="' + t.replace(Y, " ").slice(1, -1) + '"'
                      : t),
                    (t = 0))
                  : (($ = t.tmplName || "unnamed"),
                    t.allowCode && (z.allowCode = !0),
                    t.debug && (z.debug = !0),
                    (m = t.bnds),
                    (w = t.tmpls)),
                  n = 0;
                n < V;
                n++
              )
                if ("" + (i = e[n]) === i) W += '+"' + i + '"';
                else if ("*" === (r = i[0])) W += ";\n" + i[1] + "\nret=ret";
                else {
                  if (
                    ((s = i[1]),
                    (D = !a && i[2]),
                    (A = i[3]),
                    (R = f = i[4]),
                    (o =
                      "\n\tparams:{args:[" +
                      A[0] +
                      "],\n\tprops:{" +
                      A[1] +
                      "}" +
                      (A[2] ? ",\n\tctx:{" + A[2] + "}" : "") +
                      "},\n\targs:[" +
                      R[0] +
                      "],\n\tprops:{" +
                      R[1] +
                      "}" +
                      (R[2] ? ",\n\tctx:{" + R[2] + "}" : "")),
                    (H = i[6]),
                    (F = i[7]),
                    i[8]
                      ? ((O = "\nvar ob,ltOb={},ctxs="),
                        (B = ";\nctxs.lt=ltOb.lt;\nreturn ctxs;"))
                      : ((O = "\nreturn "), (B = "")),
                    (k = i[10] && i[10].replace(T, "$1")),
                    (C = "else" === r)
                      ? h && h.push(i[9])
                      : ((E = i[5] || (!1 !== p.debugMode && "undefined")),
                        m && (h = i[9]) && ((h = [h]), (U = m.push(1)))),
                    (N = N || f[1] || f[2] || h || /view.(?!index)/.test(f[0])),
                    (I = ":" === r)
                      ? s && (r = s === q ? ">" : s + r)
                      : (D &&
                          (((b = ge(k, z)).tmplName = $ + "/" + r),
                          (b.useViews = b.useViews || N),
                          Te(D, b),
                          (N = b.useViews),
                          w.push(b)),
                        C ||
                          ((L = r),
                          (N = N || (r && (!_[r] || !_[r].flow))),
                          (x = W),
                          (W = "")),
                        (S = (S = e[n + 1]) && "else" === S[0])),
                    (j = E ? ";\ntry{\nret+=" : "\n+"),
                    (v = ""),
                    (y = ""),
                    I && (h || H || (s && s !== q) || F))
                  ) {
                    if (
                      (((P = new Function(
                        "data,view,j",
                        "// " + $ + " " + ++U + " " + r + O + "{" + o + "};" + B
                      ))._er = E),
                      (P._tag = r),
                      (P._bd = !!h),
                      (P._lr = F),
                      a)
                    )
                      return P;
                    De(P, h),
                      (u = !0),
                      (v = (M = 'c("' + s + '",view,') + U + ","),
                      (y = ")");
                  }
                  if (
                    ((W += I
                      ? (a ? (E ? "try{\n" : "") + "return " : j) +
                        (u
                          ? ((u = void 0),
                            (N = c = !0),
                            M + (P ? ((m[U - 1] = P), U) : "{" + o + "}") + ")")
                          : ">" === r
                          ? ((l = !0), "h(" + f[0] + ")")
                          : (!0,
                            "((v=" + f[0] + ")!=null?v:" + (a ? "null)" : '"")')))
                      : ((d = !0),
                        "\n{view:view,content:false,tmpl:" +
                          (D ? w.length : "false") +
                          "," +
                          o +
                          "},")),
                    L && !S)
                  ) {
                    if (
                      ((W = "[" + W.slice(0, -1) + "]"),
                      (M = 't("' + L + '",view,this,'),
                      a || h)
                    ) {
                      if (
                        (((W = new Function(
                          "data,view,j",
                          " // " + $ + " " + U + " " + L + O + W + B
                        ))._er = E),
                        (W._tag = L),
                        h && De((m[U - 1] = W), h),
                        (W._lr = F),
                        a)
                      )
                        return W;
                      (v = M + U + ",undefined,"), (y = ")");
                    }
                    (W = x + j + M + ((h && U) || W) + ")"), (h = 0), (L = 0);
                  }
                  E &&
                    !S &&
                    ((N = !0),
                    (W +=
                      ";\n}catch(e){ret" +
                      (a ? "urn " : "+=") +
                      v +
                      "j._err(e,view," +
                      E +
                      ")" +
                      y +
                      ";}" +
                      (a ? "" : "\nret=ret")));
                }
              W =
                "// " +
                $ +
                (z.debug ? "\ndebugger;" : "") +
                "\nvar v" +
                (d ? ",t=j._tag" : "") +
                (c ? ",c=j._cnvt" : "") +
                (l ? ",h=j._html" : "") +
                (a ? (i[8] ? ", ob" : "") + ";\n" : ',ret=""') +
                W +
                (a ? "\n" : ";\nreturn ret;");
              try {
                W = new Function("data,view,j", W);
              } catch (e) {
                be(
                  "Compiled template code:\n\n" +
                    W +
                    '\n: "' +
                    (e.message || e) +
                    '"'
                );
              }
              return t && ((t.fn = W), (t.useViews = !!N)), W;
            }
            function Se(e, t) {
              return e && e !== t ? (t ? re(re({}, t), e) : e) : t && re({}, t);
            }
            function xe(e, a) {
              var n,
                i,
                r,
                s = a.tag,
                o = a.props,
                c = a.params.props,
                u = o.filter,
                m = o.sort,
                _ = !0 === m,
                h = parseInt(o.step),
                p = o.reverse ? -1 : 1;
              if (!l(e)) return e;
              if (
                (_ || (m && "" + m === m)
                  ? ((n = e.map(function (e, t) {
                      return {
                        i: t,
                        v: "" + (e = _ ? e : de(e, m)) === e ? e.toLowerCase() : e
                      };
                    })).sort(function (e, t) {
                      return e.v > t.v ? p : e.v < t.v ? -p : 0;
                    }),
                    (e = n.map(function (t) {
                      return e[t.i];
                    })))
                  : (m || p < 0) && !s.dataMap && (e = e.slice()),
                d(m) &&
                  (e = e.sort(function () {
                    return m.apply(a, arguments);
                  })),
                p < 0 && (!m || d(m)) && (e = e.reverse()),
                e.filter &&
                  u &&
                  ((e = e.filter(u, a)), a.tag.onFilter && a.tag.onFilter(a)),
                c.sorted &&
                  ((n = m || p < 0 ? e : e.slice()),
                  s.sorted
                    ? t.observable(s.sorted).refresh(n)
                    : (a.map.sorted = n)),
                (i = o.start),
                (r = o.end),
                ((c.start && void 0 === i) || (c.end && void 0 === r)) &&
                  (i = r = 0),
                (isNaN(i) && isNaN(r)) ||
                  ((i = +i || 0),
                  (r = void 0 === r || r > e.length ? e.length : +r),
                  (e = e.slice(i, r))),
                h > 1)
              ) {
                for (i = 0, r = e.length, n = []; i < r; i += h) n.push(e[i]);
                e = n;
              }
              return c.paged && s.paged && $observable(s.paged).refresh(e), e;
            }
            function Ce(e, a, n) {
              var i = this.jquery && (this[0] || $e("Unknown template")),
                r = i.getAttribute(W);
              return Me.call((r && t.data(i).jsvTmpl) || c(i), e, a, n);
            }
            function Ie(e) {
              return R[e] || (R[e] = "&#" + e.charCodeAt(0) + ";");
            }
            function Pe(e, t) {
              return U[t] || "";
            }
            function Ee(e) {
              return null != e ? (P.test(e) && ("" + e).replace(H, Ie)) || e : "";
            }
            if (
              ((s = {
                jsviews: D,
                sub: {
                  rPath: /^(!*?)(?:null|true|false|\d[\d.]*|([\w$]+|\.|~([\w$]+)|#(view|([\w$]+))?)([\w$.^]*?)(?:[.[^]([\w$]+)\]?)?)$/g,
                  rPrm: /(\()(?=\s*\()|(?:([([])\s*)?(?:(\^?)(~?[\w$.^]+)?\s*((\+\+|--)|\+|-|~(?![\w$])|&&|\|\||===|!==|==|!=|<=|>=|[<>%*:?\/]|(=))\s*|(!*?(@)?[#~]?[\w$.^]+)([([])?)|(,\s*)|(?:(\()\s*)?\\?(?:(')|("))|(?:\s*(([)\]])(?=[.^]|\s*$|[^([])|[)\]])([([]?))|(\s+)/g,
                  View: _e,
                  Err: ie,
                  tmplFn: Le,
                  parse: Ye,
                  extend: re,
                  extendCtx: Se,
                  syntaxErr: be,
                  onStore: {
                    template: function (e, t) {
                      null === t ? delete G[e] : e && (G[e] = t);
                    }
                  },
                  addSetting: ve,
                  settings: { allowCode: !1 },
                  advSet: ne,
                  _thp: te,
                  _gm: ee,
                  _tg: function () {},
                  _cnvt: function (e, t, a, n) {
                    var i,
                      r,
                      s,
                      o,
                      d,
                      l = "number" == typeof a && t.tmpl.bnds[a - 1];
                    void 0 === n && l && l._lr && (n = "");
                    void 0 !== n
                      ? (a = n = { props: {}, args: [n] })
                      : l && (a = l(t.data, t, h));
                    if (((l = l._bd && l), e || l)) {
                      if (((r = t._lc), (i = r && r.tag), (a.view = t), !i)) {
                        if (
                          ((i = re(new h._tg(), {
                            _: { bnd: l, unlinked: !0, lt: a.lt },
                            inline: !r,
                            tagName: ":",
                            convert: e,
                            onArrayChange: !0,
                            flow: !0,
                            tagCtx: a,
                            tagCtxs: [a],
                            _is: "tag"
                          })),
                          (o = a.args.length) > 1)
                        )
                          for (d = i.bindTo = []; o--; ) d.unshift(o);
                        r && ((r.tag = i), (i.linkCtx = r)),
                          (a.ctx = Se(a.ctx, (r ? r.view : t).ctx)),
                          te(i, a);
                      }
                      (i._er = n && s),
                        (i.ctx = a.ctx || i.ctx || {}),
                        (a.ctx = void 0),
                        (s = i.cvtArgs()[0]),
                        (i._er = n && s);
                    } else s = a.args[0];
                    return null !=
                      (s = l && t._.onRender ? t._.onRender(s, t, i) : s)
                      ? s
                      : "";
                  },
                  _tag: function (e, t, a, n, i, s) {
                    function o(e) {
                      var t = d[e];
                      if (void 0 !== t)
                        for (t = l(t) ? t : [t], f = t.length; f--; )
                          (H = t[f]), isNaN(parseInt(H)) || (t[f] = parseInt(H));
                      return t || [0];
                    }
                    var d,
                      c,
                      m,
                      _,
                      p,
                      g,
                      f,
                      v,
                      y,
                      M,
                      w,
                      $,
                      b,
                      L,
                      D,
                      k,
                      Y,
                      T,
                      S,
                      x,
                      C,
                      I,
                      P,
                      E,
                      H,
                      F,
                      O,
                      B,
                      A,
                      R = 0,
                      U = "",
                      N = (t = t || r)._lc || !1,
                      W = t.ctx,
                      z = a || t.tmpl,
                      V = "number" == typeof n && t.tmpl.bnds[n - 1];
                    "tag" === e._is
                      ? ((e = (d = e).tagName), (n = d.tagCtxs), d.template)
                      : ((c =
                          t.getRsc("tags", e) ||
                          $e("Unknown tag: {{" + e + "}} ")),
                        c.template);
                    void 0 === s &&
                      V &&
                      (V._lr = (c.lateRender && !1 !== V._lr) || V._lr) &&
                      (s = "");
                    void 0 !== s
                      ? ((U += s),
                        (n = s = [
                          { props: {}, args: [], params: { props: {} } }
                        ]))
                      : V && (n = V(t.data, t, h));
                    for (g = n.length; R < g; R++)
                      (M = n[R]),
                        (k = M.tmpl),
                        (!N ||
                          !N.tag ||
                          (R && !N.tag.inline) ||
                          d._er ||
                          (k && +k === k)) &&
                          (k && z.tmpls && (M.tmpl = M.content = z.tmpls[k - 1]),
                          (M.index = R),
                          (M.ctxPrm = le),
                          (M.render = Me),
                          (M.cvtArgs = ce),
                          (M.bndArgs = me),
                          (M.view = t),
                          (M.ctx = Se(Se(M.ctx, c && c.ctx), W))),
                        (a = M.props.tmpl) &&
                          ((M.tmpl = t._getTmpl(a)),
                          (M.content = M.content || M.tmpl)),
                        d
                          ? N && N.fn._lr && (Y = !!d.init)
                          : ((d = new c._ctr()),
                            (Y = !!d.init),
                            (d.parent = p = W && W.tag),
                            (d.tagCtxs = n),
                            N && ((d.inline = !1), (N.tag = d)),
                            (d.linkCtx = N),
                            (d._.bnd = V || N.fn)
                              ? ((d._.ths = M.params.props.this),
                                (d._.lt = n.lt),
                                (d._.arrVws = {}))
                              : d.dataBoundOnly &&
                                $e(e + " must be data-bound:\n{^{" + e + "}}")),
                        (P = d.dataMap),
                        (M.tag = d),
                        P && n && (M.map = n[R].map),
                        d.flow ||
                          ((w = M.ctx = M.ctx || {}),
                          (m = d.parents = w.parentTags =
                            (W && Se(w.parentTags, W.parentTags)) || {}),
                          p && (m[p.tagName] = p),
                          (m[d.tagName] = w.tag = d),
                          (w.tagCtx = M));
                    if (!(d._er = s)) {
                      for (
                        te(d, n[0]), d.rendering = { rndr: d.rendering }, R = 0;
                        R < g;
                        R++
                      ) {
                        if (
                          ((M = d.tagCtx = n[R]),
                          (I = M.props),
                          (d.ctx = M.ctx),
                          !R)
                        ) {
                          if (
                            (Y && (d.init(M, N, d.ctx), (Y = void 0)),
                            M.args.length ||
                              !1 === M.argDefault ||
                              !1 === d.argDefault ||
                              ((M.args = x = [M.view.data]),
                              (M.params.args = ["#data"])),
                            (b = o("bindTo")),
                            void 0 !== d.bindTo && (d.bindTo = b),
                            void 0 !== d.bindFrom
                              ? (d.bindFrom = o("bindFrom"))
                              : d.bindTo && (d.bindFrom = d.bindTo = b),
                            (L = d.bindFrom || b),
                            (O = b.length),
                            (F = L.length),
                            d._.bnd &&
                              (B = d.linkedElement) &&
                              ((d.linkedElement = B = l(B) ? B : [B]),
                              O !== B.length &&
                                $e("linkedElement not same length as bindTo")),
                            (B = d.linkedCtxParam) &&
                              ((d.linkedCtxParam = B = l(B) ? B : [B]),
                              F !== B.length &&
                                $e(
                                  "linkedCtxParam not same length as bindFrom/bindTo"
                                )),
                            L)
                          )
                            for (
                              d._.fromIndex = {}, d._.toIndex = {}, v = F;
                              v--;

                            )
                              for (H = L[v], f = O; f--; )
                                H === b[f] &&
                                  ((d._.fromIndex[f] = v), (d._.toIndex[v] = f));
                          N && (N.attr = d.attr = N.attr || d.attr || N._dfAt),
                            (_ = d.attr),
                            (d._.noVws = _ && _ !== q);
                        }
                        if (((x = d.cvtArgs(R)), d.linkedCtxParam))
                          for (
                            C = d.cvtArgs(R, 1),
                              f = F,
                              A = d.constructor.prototype.ctx;
                            f--;

                          )
                            ($ = d.linkedCtxParam[f]) &&
                              ((H = L[f]),
                              (D = C[f]),
                              (M.ctx[$] = h._cp(
                                A && void 0 === D ? A[$] : D,
                                void 0 !== D && ue(M.params, H),
                                M.view,
                                d._.bnd && {
                                  tag: d,
                                  cvt: d.convert,
                                  ind: f,
                                  tagElse: R
                                }
                              )));
                        (T = I.dataMap || P) &&
                          (x.length || I.dataMap) &&
                          (((S = M.map) && S.src === x[0] && !i) ||
                            (S && S.src && S.unmap(),
                            T.map(x[0], M, S, !d._.bnd),
                            (S = M.map)),
                          (x = [S.tgt])),
                          (y = void 0),
                          d.render &&
                            ((y = d.render.apply(d, x)),
                            t.linked &&
                              y &&
                              !j.test(y) &&
                              (((a = { links: [] }).render = a.fn = function () {
                                return y;
                              }),
                              (y = we(
                                a,
                                t.data,
                                void 0,
                                !0,
                                t,
                                void 0,
                                void 0,
                                d
                              )))),
                          x.length || (x = [t]),
                          void 0 === y &&
                            ((E = x[0]),
                            d.contentCtx &&
                              (E = !0 === d.contentCtx ? t : d.contentCtx(E)),
                            (y = M.render(E, !0) || (i ? void 0 : ""))),
                          (U = U
                            ? U + (y || "")
                            : void 0 !== y
                            ? "" + y
                            : void 0);
                      }
                      d.rendering = d.rendering.rndr;
                    }
                    (d.tagCtx = n[0]),
                      (d.ctx = d.tagCtx.ctx),
                      d._.noVws &&
                        d.inline &&
                        (U = "text" === _ ? u.html(U) : "");
                    return V && t._.onRender ? t._.onRender(U, t, d) : U;
                  },
                  _er: $e,
                  _err: function (e, t, a) {
                    var n =
                      void 0 !== a
                        ? d(a)
                          ? a.call(t.data, e, t)
                          : a || ""
                        : "{Error: " + (e.message || e) + "}";
                    p.onError &&
                      void 0 !== (a = p.onError.call(t.data, e, a && n, t)) &&
                      (n = a);
                    return t && !t._lc ? u.html(n) : n;
                  },
                  _cp: ae,
                  _sq: function (e) {
                    return "constructor" === e && be(""), e;
                  }
                },
                settings: {
                  delimiters: function e(t, a, n) {
                    if (!t) return p.delimiters;
                    if (l(t)) return e.apply(s, t);
                    ($ = n ? n[0] : $),
                      /^(\W|_){5}$/.test(t + a + $) || $e("Invalid delimiters");
                    return (
                      (v = t[0]),
                      (y = t[1]),
                      (M = a[0]),
                      (w = a[1]),
                      (p.delimiters = [v + y, M + w, $]),
                      (t = "\\" + v + "(\\" + $ + ")?\\" + y),
                      (a = "\\" + M + "\\" + w),
                      (i =
                        "(?:(\\w+(?=[\\/\\s\\" +
                        M +
                        "]))|(\\w+)?(:)|(>)|(\\*))\\s*((?:[^\\" +
                        M +
                        "]|\\" +
                        M +
                        "(?!\\" +
                        w +
                        "))*?)"),
                      (h.rTag = "(?:" + i + ")"),
                      (i = new RegExp(
                        "(?:" +
                          t +
                          i +
                          "(\\/)?|\\" +
                          v +
                          "(\\" +
                          $ +
                          ")?\\" +
                          y +
                          "(?:(?:\\/(\\w+))\\s*|!--[\\s\\S]*?--))" +
                          a,
                        "g"
                      )),
                      (h.rTmpl = new RegExp(
                        "^\\s|\\s$|<.*>|([^\\\\]|^)[{}]|" + t + ".*" + a
                      )),
                      f
                    );
                  },
                  advanced: function (e) {
                    return e ? (re(g, e), h.advSet(), f) : g;
                  }
                },
                map: ye
              }),
              ((ie.prototype = new Error()).constructor = ie),
              (se.depends = function () {
                return [this.get("item"), "index"];
              }),
              (oe.depends = "index"),
              (_e.prototype = {
                get: function (e, t) {
                  t || !0 === e || ((t = e), (e = void 0));
                  var a,
                    n,
                    i,
                    r,
                    s = this,
                    o = "root" === t;
                  if (e) {
                    if (!(r = t && s.type === t && s))
                      if (((a = s.views), s._.useKey)) {
                        for (n in a) if ((r = t ? a[n].get(e, t) : a[n])) break;
                      } else
                        for (n = 0, i = a.length; !r && n < i; n++)
                          r = t ? a[n].get(e, t) : a[n];
                  } else if (o) r = s.root;
                  else if (t)
                    for (; s && !r; )
                      (r = s.type === t ? s : void 0), (s = s.parent);
                  else r = s.parent;
                  return r || void 0;
                },
                getIndex: oe,
                ctxPrm: le,
                getRsc: function (e, t) {
                  var a,
                    n,
                    i = this;
                  if ("" + t === t) {
                    for (; void 0 === a && i; )
                      (a = (n = i.tmpl && i.tmpl[e]) && n[t]), (i = i.parent);
                    return a || s[e][t];
                  }
                },
                _getTmpl: function (e) {
                  return e && (e.fn ? e : this.getRsc("templates", e) || c(e));
                },
                _getOb: de,
                getCache: function (e) {
                  return (
                    p._cchCt > this.cache._ct && (this.cache = { _ct: p._cchCt }),
                    this.cache[e] || (this.cache[e] = J[e](this.data, this, h))
                  );
                },
                _is: "view"
              }),
              (h = s.sub),
              (f = s.settings),
              !(Q || (t && t.render)))
            ) {
              for (n in Z) fe(n, Z[n]);
              if (
                ((u = s.converters),
                (m = s.helpers),
                (_ = s.tags),
                (h._tg.prototype = {
                  baseApply: function (e) {
                    return this.base.apply(this, e);
                  },
                  cvtArgs: ce,
                  bndArgs: me,
                  ctxPrm: le
                }),
                (r = h.topView = new _e()),
                t)
              ) {
                if (((t.fn.render = Ce), (o = t.expando), t.observable)) {
                  if (D !== (D = t.views.jsviews))
                    throw "jquery.observable.js requires jsrender.js " + D;
                  re(h, t.views.sub), (s.map = t.views.map);
                }
              } else
                (t = {}),
                  a && (e.jsrender = t),
                  (t.renderFile = t.__express = t.compile = function () {
                    throw "Node.js: use npm jsrender, or jsrender-node.js";
                  }),
                  (t.isFunction = function (e) {
                    return "function" == typeof e;
                  }),
                  (t.isArray =
                    Array.isArray ||
                    function (e) {
                      return "[object Array]" === {}.toString.call(e);
                    }),
                  (h._jq = function (e) {
                    e !== t &&
                      (re(e, t),
                      ((t = e).fn.render = Ce),
                      delete t.jsrender,
                      (o = t.expando));
                  }),
                  (t.jsrender = D);
              for (b in (((p = h.settings).allowCode = !1),
              (d = t.isFunction),
              (t.render = G),
              (t.views = s),
              (t.templates = c = s.templates),
              p))
                ve(b);
              (f.debugMode = function (e) {
                return void 0 === e
                  ? p.debugMode
                  : (p._clFns && p._clFns(),
                    (p.debugMode = e),
                    (p.onError =
                      e + "" === e
                        ? function () {
                            return e;
                          }
                        : d(e)
                        ? e
                        : void 0),
                    f);
              })(!1),
                (g = p.advanced = { cache: !0, useViews: !1, _jsv: !1 }),
                _({
                  if: {
                    render: function (e) {
                      var t = this,
                        a = t.tagCtx;
                      return t.rendering.done ||
                        (!e && (a.args.length || !a.index))
                        ? ""
                        : ((t.rendering.done = !0), void (t.selected = a.index));
                    },
                    contentCtx: !0,
                    flow: !0
                  },
                  for: {
                    sortDataMap: ye(xe),
                    init: function (e, t) {
                      this.setDataMap(this.tagCtxs);
                    },
                    render: function (e) {
                      var t,
                        a,
                        n,
                        i,
                        r,
                        s = this,
                        o = s.tagCtx,
                        d = !1 === o.argDefault,
                        c = o.props,
                        u = d || o.args.length,
                        m = "",
                        _ = 0;
                      if (!s.rendering.done) {
                        if (((t = u ? e : o.view.data), d))
                          for (
                            d = c.reverse ? "unshift" : "push",
                              i = +c.end,
                              r = +c.step || 1,
                              t = [],
                              n = +c.start || 0;
                            (i - n) * r > 0;
                            n += r
                          )
                            t[d](n);
                        void 0 !== t &&
                          ((a = l(t)),
                          (m += o.render(t, !u || c.noIteration)),
                          (_ += a ? t.length : 1)),
                          (s.rendering.done = _) && (s.selected = o.index);
                      }
                      return m;
                    },
                    setDataMap: function (e) {
                      for (var t, a, n, i = e.length; i--; )
                        (a = (t = e[i]).props),
                          (n = t.params.props),
                          (t.argDefault = void 0 === a.end || t.args.length > 0),
                          (a.dataMap =
                            !1 !== t.argDefault &&
                            l(t.args[0]) &&
                            (n.sort ||
                              n.start ||
                              n.end ||
                              n.step ||
                              n.filter ||
                              n.reverse ||
                              a.sort ||
                              a.start ||
                              a.end ||
                              a.step ||
                              a.filter ||
                              a.reverse) &&
                            this.sortDataMap);
                    },
                    flow: !0
                  },
                  props: {
                    baseTag: "for",
                    dataMap: ye(function (e, a) {
                      var n,
                        i,
                        r = a.map,
                        s = r && r.propsArr;
                      if (!s) {
                        if (((s = []), typeof e === N || d(e)))
                          for (n in e)
                            (i = e[n]),
                              n === o ||
                                !e.hasOwnProperty(n) ||
                                (a.props.noFunctions && t.isFunction(i)) ||
                                s.push({ key: n, prop: i });
                        r && (r.propsArr = r.options && s);
                      }
                      return xe(s, a);
                    }),
                    init: ne,
                    flow: !0
                  },
                  include: { flow: !0 },
                  "*": { render: ae, flow: !0 },
                  ":*": { render: ae, flow: !0 },
                  dbg: (m.dbg = u.dbg = function (e) {
                    try {
                      throw (
                        (console.log("JsRender dbg breakpoint: " + e),
                        "dbg breakpoint")
                      );
                    } catch (e) {}
                    return this.base ? this.baseApply(arguments) : e;
                  })
                }),
                u({
                  html: Ee,
                  attr: Ee,
                  encode: function (e) {
                    return "" + e === e ? e.replace(F, Ie) : e;
                  },
                  unencode: function (e) {
                    return "" + e === e ? e.replace(O, Pe) : e;
                  },
                  url: function (e) {
                    return null != e ? encodeURI("" + e) : null === e ? e : "";
                  }
                });
            }
            return (
              (p = h.settings),
              (l = (t || Q).isArray),
              f.delimiters("{{", "}}", "^"),
              K && Q.views.sub._jq(t),
              t || Q
            );
          }, window);
        },
        1033: () => {},
        4185: () => {},
        586: () => {},
        5195: () => {},
        6449: () => {},
        3257: () => {},
        5913: () => {},
        1123: () => {},
        2459: () => {},
        2786: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("af", {
              months: "Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember".split(
                "_"
              ),
              monthsShort: "Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des".split(
                "_"
              ),
              weekdays: "Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag".split(
                "_"
              ),
              weekdaysShort: "Son_Maa_Din_Woe_Don_Vry_Sat".split("_"),
              weekdaysMin: "So_Ma_Di_Wo_Do_Vr_Sa".split("_"),
              meridiemParse: /vm|nm/i,
              isPM: function (e) {
                return /^nm$/i.test(e);
              },
              meridiem: function (e, t, a) {
                return e < 12 ? (a ? "vm" : "VM") : a ? "nm" : "NM";
              },
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Vandag om] LT",
                nextDay: "[MÃ´re om] LT",
                nextWeek: "dddd [om] LT",
                lastDay: "[Gister om] LT",
                lastWeek: "[Laas] dddd [om] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "oor %s",
                past: "%s gelede",
                s: "'n paar sekondes",
                ss: "%d sekondes",
                m: "'n minuut",
                mm: "%d minute",
                h: "'n uur",
                hh: "%d ure",
                d: "'n dag",
                dd: "%d dae",
                M: "'n maand",
                MM: "%d maande",
                y: "'n jaar",
                yy: "%d jaar"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
              ordinal: function (e) {
                return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        4130: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = function (e) {
                return 0 === e
                  ? 0
                  : 1 === e
                  ? 1
                  : 2 === e
                  ? 2
                  : e % 100 >= 3 && e % 100 <= 10
                  ? 3
                  : e % 100 >= 11
                  ? 4
                  : 5;
              },
              a = {
                s: [
                  "Ø£Ù‚Ù„ Ù…Ù† Ø«Ø§Ù†ÙŠØ©",
                  "Ø«Ø§Ù†ÙŠØ© ÙˆØ§Ø­Ø¯Ø©",
                  ["Ø«Ø§Ù†ÙŠØªØ§Ù†", "Ø«Ø§Ù†ÙŠØªÙŠÙ†"],
                  "%d Ø«ÙˆØ§Ù†",
                  "%d Ø«Ø§Ù†ÙŠØ©",
                  "%d Ø«Ø§Ù†ÙŠØ©"
                ],
                m: [
                  "Ø£Ù‚Ù„ Ù…Ù† Ø¯Ù‚ÙŠÙ‚Ø©",
                  "Ø¯Ù‚ÙŠÙ‚Ø© ÙˆØ§Ø­Ø¯Ø©",
                  ["Ø¯Ù‚ÙŠÙ‚ØªØ§Ù†", "Ø¯Ù‚ÙŠÙ‚ØªÙŠÙ†"],
                  "%d Ø¯Ù‚Ø§Ø¦Ù‚",
                  "%d Ø¯Ù‚ÙŠÙ‚Ø©",
                  "%d Ø¯Ù‚ÙŠÙ‚Ø©"
                ],
                h: [
                  "Ø£Ù‚Ù„ Ù…Ù† Ø³Ø§Ø¹Ø©",
                  "Ø³Ø§Ø¹Ø© ÙˆØ§Ø­Ø¯Ø©",
                  ["Ø³Ø§Ø¹ØªØ§Ù†", "Ø³Ø§Ø¹ØªÙŠÙ†"],
                  "%d Ø³Ø§Ø¹Ø§Øª",
                  "%d Ø³Ø§Ø¹Ø©",
                  "%d Ø³Ø§Ø¹Ø©"
                ],
                d: [
                  "Ø£Ù‚Ù„ Ù…Ù† ÙŠÙˆÙ…",
                  "ÙŠÙˆÙ… ÙˆØ§Ø­Ø¯",
                  ["ÙŠÙˆÙ…Ø§Ù†", "ÙŠÙˆÙ…ÙŠÙ†"],
                  "%d Ø£ÙŠØ§Ù…",
                  "%d ÙŠÙˆÙ…Ù‹Ø§",
                  "%d ÙŠÙˆÙ…"
                ],
                M: [
                  "Ø£Ù‚Ù„ Ù…Ù† Ø´Ù‡Ø±",
                  "Ø´Ù‡Ø± ÙˆØ§Ø­Ø¯",
                  ["Ø´Ù‡Ø±Ø§Ù†", "Ø´Ù‡Ø±ÙŠÙ†"],
                  "%d Ø£Ø´Ù‡Ø±",
                  "%d Ø´Ù‡Ø±Ø§",
                  "%d Ø´Ù‡Ø±"
                ],
                y: [
                  "Ø£Ù‚Ù„ Ù…Ù† Ø¹Ø§Ù…",
                  "Ø¹Ø§Ù… ÙˆØ§Ø­Ø¯",
                  ["Ø¹Ø§Ù…Ø§Ù†", "Ø¹Ø§Ù…ÙŠÙ†"],
                  "%d Ø£Ø¹ÙˆØ§Ù…",
                  "%d Ø¹Ø§Ù…Ù‹Ø§",
                  "%d Ø¹Ø§Ù…"
                ]
              },
              n = function (e) {
                return function (n, i, r, s) {
                  var o = t(n),
                    d = a[e][t(n)];
                  return 2 === o && (d = d[i ? 0 : 1]), d.replace(/%d/i, n);
                };
              },
              i = [
                "Ø¬Ø§Ù†ÙÙŠ",
                "ÙÙŠÙØ±ÙŠ",
                "Ù…Ø§Ø±Ø³",
                "Ø£ÙØ±ÙŠÙ„",
                "Ù…Ø§ÙŠ",
                "Ø¬ÙˆØ§Ù†",
                "Ø¬ÙˆÙŠÙ„ÙŠØ©",
                "Ø£ÙˆØª",
                "Ø³Ø¨ØªÙ…Ø¨Ø±",
                "Ø£ÙƒØªÙˆØ¨Ø±",
                "Ù†ÙˆÙÙ…Ø¨Ø±",
                "Ø¯ÙŠØ³Ù…Ø¨Ø±"
              ];
            e.defineLocale("ar-dz", {
              months: i,
              monthsShort: i,
              weekdays: "Ø§Ù„Ø£Ø­Ø¯_Ø§Ù„Ø¥Ø«Ù†ÙŠÙ†_Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡_Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø§Ù„Ø®Ù…ÙŠØ³_Ø§Ù„Ø¬Ù…Ø¹Ø©_Ø§Ù„Ø³Ø¨Øª".split(
                "_"
              ),
              weekdaysShort: "Ø£Ø­Ø¯_Ø¥Ø«Ù†ÙŠÙ†_Ø«Ù„Ø§Ø«Ø§Ø¡_Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø®Ù…ÙŠØ³_Ø¬Ù…Ø¹Ø©_Ø³Ø¨Øª".split(
                "_"
              ),
              weekdaysMin: "Ø­_Ù†_Ø«_Ø±_Ø®_Ø¬_Ø³".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "D/â€M/â€YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              meridiemParse: /Øµ|Ù…/,
              isPM: function (e) {
                return "Ù…" === e;
              },
              meridiem: function (e, t, a) {
                return e < 12 ? "Øµ" : "Ù…";
              },
              calendar: {
                sameDay: "[Ø§Ù„ÙŠÙˆÙ… Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                nextDay: "[ØºØ¯Ù‹Ø§ Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                nextWeek: "dddd [Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                lastDay: "[Ø£Ù…Ø³ Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                lastWeek: "dddd [Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "Ø¨Ø¹Ø¯ %s",
                past: "Ù…Ù†Ø° %s",
                s: n("s"),
                ss: n("s"),
                m: n("m"),
                mm: n("m"),
                h: n("h"),
                hh: n("h"),
                d: n("d"),
                dd: n("d"),
                M: n("M"),
                MM: n("M"),
                y: n("y"),
                yy: n("y")
              },
              postformat: function (e) {
                return e.replace(/,/g, "ØŒ");
              },
              week: { dow: 0, doy: 4 }
            });
          })(a(381));
        },
        6135: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("ar-kw", {
              months: "ÙŠÙ†Ø§ÙŠØ±_ÙØ¨Ø±Ø§ÙŠØ±_Ù…Ø§Ø±Ø³_Ø£Ø¨Ø±ÙŠÙ„_Ù…Ø§ÙŠ_ÙŠÙˆÙ†ÙŠÙˆ_ÙŠÙˆÙ„ÙŠÙˆØ²_ØºØ´Øª_Ø´ØªÙ†Ø¨Ø±_Ø£ÙƒØªÙˆØ¨Ø±_Ù†ÙˆÙ†Ø¨Ø±_Ø¯Ø¬Ù†Ø¨Ø±".split(
                "_"
              ),
              monthsShort: "ÙŠÙ†Ø§ÙŠØ±_ÙØ¨Ø±Ø§ÙŠØ±_Ù…Ø§Ø±Ø³_Ø£Ø¨Ø±ÙŠÙ„_Ù…Ø§ÙŠ_ÙŠÙˆÙ†ÙŠÙˆ_ÙŠÙˆÙ„ÙŠÙˆØ²_ØºØ´Øª_Ø´ØªÙ†Ø¨Ø±_Ø£ÙƒØªÙˆØ¨Ø±_Ù†ÙˆÙ†Ø¨Ø±_Ø¯Ø¬Ù†Ø¨Ø±".split(
                "_"
              ),
              weekdays: "Ø§Ù„Ø£Ø­Ø¯_Ø§Ù„Ø¥ØªÙ†ÙŠÙ†_Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡_Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø§Ù„Ø®Ù…ÙŠØ³_Ø§Ù„Ø¬Ù…Ø¹Ø©_Ø§Ù„Ø³Ø¨Øª".split(
                "_"
              ),
              weekdaysShort: "Ø§Ø­Ø¯_Ø§ØªÙ†ÙŠÙ†_Ø«Ù„Ø§Ø«Ø§Ø¡_Ø§Ø±Ø¨Ø¹Ø§Ø¡_Ø®Ù…ÙŠØ³_Ø¬Ù…Ø¹Ø©_Ø³Ø¨Øª".split(
                "_"
              ),
              weekdaysMin: "Ø­_Ù†_Ø«_Ø±_Ø®_Ø¬_Ø³".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Ø§Ù„ÙŠÙˆÙ… Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                nextDay: "[ØºØ¯Ø§ Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                nextWeek: "dddd [Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                lastDay: "[Ø£Ù…Ø³ Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                lastWeek: "dddd [Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "ÙÙŠ %s",
                past: "Ù…Ù†Ø° %s",
                s: "Ø«ÙˆØ§Ù†",
                ss: "%d Ø«Ø§Ù†ÙŠØ©",
                m: "Ø¯Ù‚ÙŠÙ‚Ø©",
                mm: "%d Ø¯Ù‚Ø§Ø¦Ù‚",
                h: "Ø³Ø§Ø¹Ø©",
                hh: "%d Ø³Ø§Ø¹Ø§Øª",
                d: "ÙŠÙˆÙ…",
                dd: "%d Ø£ÙŠØ§Ù…",
                M: "Ø´Ù‡Ø±",
                MM: "%d Ø£Ø´Ù‡Ø±",
                y: "Ø³Ù†Ø©",
                yy: "%d Ø³Ù†ÙˆØ§Øª"
              },
              week: { dow: 0, doy: 12 }
            });
          })(a(381));
        },
        6440: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "1",
                2: "2",
                3: "3",
                4: "4",
                5: "5",
                6: "6",
                7: "7",
                8: "8",
                9: "9",
                0: "0"
              },
              a = function (e) {
                return 0 === e
                  ? 0
                  : 1 === e
                  ? 1
                  : 2 === e
                  ? 2
                  : e % 100 >= 3 && e % 100 <= 10
                  ? 3
                  : e % 100 >= 11
                  ? 4
                  : 5;
              },
              n = {
                s: [
                  "Ø£Ù‚Ù„ Ù…Ù† Ø«Ø§Ù†ÙŠØ©",
                  "Ø«Ø§Ù†ÙŠØ© ÙˆØ§Ø­Ø¯Ø©",
                  ["Ø«Ø§Ù†ÙŠØªØ§Ù†", "Ø«Ø§Ù†ÙŠØªÙŠÙ†"],
                  "%d Ø«ÙˆØ§Ù†",
                  "%d Ø«Ø§Ù†ÙŠØ©",
                  "%d Ø«Ø§Ù†ÙŠØ©"
                ],
                m: [
                  "Ø£Ù‚Ù„ Ù…Ù† Ø¯Ù‚ÙŠÙ‚Ø©",
                  "Ø¯Ù‚ÙŠÙ‚Ø© ÙˆØ§Ø­Ø¯Ø©",
                  ["Ø¯Ù‚ÙŠÙ‚ØªØ§Ù†", "Ø¯Ù‚ÙŠÙ‚ØªÙŠÙ†"],
                  "%d Ø¯Ù‚Ø§Ø¦Ù‚",
                  "%d Ø¯Ù‚ÙŠÙ‚Ø©",
                  "%d Ø¯Ù‚ÙŠÙ‚Ø©"
                ],
                h: [
                  "Ø£Ù‚Ù„ Ù…Ù† Ø³Ø§Ø¹Ø©",
                  "Ø³Ø§Ø¹Ø© ÙˆØ§Ø­Ø¯Ø©",
                  ["Ø³Ø§Ø¹ØªØ§Ù†", "Ø³Ø§Ø¹ØªÙŠÙ†"],
                  "%d Ø³Ø§Ø¹Ø§Øª",
                  "%d Ø³Ø§Ø¹Ø©",
                  "%d Ø³Ø§Ø¹Ø©"
                ],
                d: [
                  "Ø£Ù‚Ù„ Ù…Ù† ÙŠÙˆÙ…",
                  "ÙŠÙˆÙ… ÙˆØ§Ø­Ø¯",
                  ["ÙŠÙˆÙ…Ø§Ù†", "ÙŠÙˆÙ…ÙŠÙ†"],
                  "%d Ø£ÙŠØ§Ù…",
                  "%d ÙŠÙˆÙ…Ù‹Ø§",
                  "%d ÙŠÙˆÙ…"
                ],
                M: [
                  "Ø£Ù‚Ù„ Ù…Ù† Ø´Ù‡Ø±",
                  "Ø´Ù‡Ø± ÙˆØ§Ø­Ø¯",
                  ["Ø´Ù‡Ø±Ø§Ù†", "Ø´Ù‡Ø±ÙŠÙ†"],
                  "%d Ø£Ø´Ù‡Ø±",
                  "%d Ø´Ù‡Ø±Ø§",
                  "%d Ø´Ù‡Ø±"
                ],
                y: [
                  "Ø£Ù‚Ù„ Ù…Ù† Ø¹Ø§Ù…",
                  "Ø¹Ø§Ù… ÙˆØ§Ø­Ø¯",
                  ["Ø¹Ø§Ù…Ø§Ù†", "Ø¹Ø§Ù…ÙŠÙ†"],
                  "%d Ø£Ø¹ÙˆØ§Ù…",
                  "%d Ø¹Ø§Ù…Ù‹Ø§",
                  "%d Ø¹Ø§Ù…"
                ]
              },
              i = function (e) {
                return function (t, i, r, s) {
                  var o = a(t),
                    d = n[e][a(t)];
                  return 2 === o && (d = d[i ? 0 : 1]), d.replace(/%d/i, t);
                };
              },
              r = [
                "ÙŠÙ†Ø§ÙŠØ±",
                "ÙØ¨Ø±Ø§ÙŠØ±",
                "Ù…Ø§Ø±Ø³",
                "Ø£Ø¨Ø±ÙŠÙ„",
                "Ù…Ø§ÙŠÙˆ",
                "ÙŠÙˆÙ†ÙŠÙˆ",
                "ÙŠÙˆÙ„ÙŠÙˆ",
                "Ø£ØºØ³Ø·Ø³",
                "Ø³Ø¨ØªÙ…Ø¨Ø±",
                "Ø£ÙƒØªÙˆØ¨Ø±",
                "Ù†ÙˆÙÙ…Ø¨Ø±",
                "Ø¯ÙŠØ³Ù…Ø¨Ø±"
              ];
            e.defineLocale("ar-ly", {
              months: r,
              monthsShort: r,
              weekdays: "Ø§Ù„Ø£Ø­Ø¯_Ø§Ù„Ø¥Ø«Ù†ÙŠÙ†_Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡_Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø§Ù„Ø®Ù…ÙŠØ³_Ø§Ù„Ø¬Ù…Ø¹Ø©_Ø§Ù„Ø³Ø¨Øª".split(
                "_"
              ),
              weekdaysShort: "Ø£Ø­Ø¯_Ø¥Ø«Ù†ÙŠÙ†_Ø«Ù„Ø§Ø«Ø§Ø¡_Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø®Ù…ÙŠØ³_Ø¬Ù…Ø¹Ø©_Ø³Ø¨Øª".split(
                "_"
              ),
              weekdaysMin: "Ø­_Ù†_Ø«_Ø±_Ø®_Ø¬_Ø³".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "D/â€M/â€YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              meridiemParse: /Øµ|Ù…/,
              isPM: function (e) {
                return "Ù…" === e;
              },
              meridiem: function (e, t, a) {
                return e < 12 ? "Øµ" : "Ù…";
              },
              calendar: {
                sameDay: "[Ø§Ù„ÙŠÙˆÙ… Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                nextDay: "[ØºØ¯Ù‹Ø§ Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                nextWeek: "dddd [Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                lastDay: "[Ø£Ù…Ø³ Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                lastWeek: "dddd [Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "Ø¨Ø¹Ø¯ %s",
                past: "Ù…Ù†Ø° %s",
                s: i("s"),
                ss: i("s"),
                m: i("m"),
                mm: i("m"),
                h: i("h"),
                hh: i("h"),
                d: i("d"),
                dd: i("d"),
                M: i("M"),
                MM: i("M"),
                y: i("y"),
                yy: i("y")
              },
              preparse: function (e) {
                return e.replace(/ØŒ/g, ",");
              },
              postformat: function (e) {
                return e
                  .replace(/\d/g, function (e) {
                    return t[e];
                  })
                  .replace(/,/g, "ØŒ");
              },
              week: { dow: 6, doy: 12 }
            });
          })(a(381));
        },
        7702: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("ar-ma", {
              months: "ÙŠÙ†Ø§ÙŠØ±_ÙØ¨Ø±Ø§ÙŠØ±_Ù…Ø§Ø±Ø³_Ø£Ø¨Ø±ÙŠÙ„_Ù…Ø§ÙŠ_ÙŠÙˆÙ†ÙŠÙˆ_ÙŠÙˆÙ„ÙŠÙˆØ²_ØºØ´Øª_Ø´ØªÙ†Ø¨Ø±_Ø£ÙƒØªÙˆØ¨Ø±_Ù†ÙˆÙ†Ø¨Ø±_Ø¯Ø¬Ù†Ø¨Ø±".split(
                "_"
              ),
              monthsShort: "ÙŠÙ†Ø§ÙŠØ±_ÙØ¨Ø±Ø§ÙŠØ±_Ù…Ø§Ø±Ø³_Ø£Ø¨Ø±ÙŠÙ„_Ù…Ø§ÙŠ_ÙŠÙˆÙ†ÙŠÙˆ_ÙŠÙˆÙ„ÙŠÙˆØ²_ØºØ´Øª_Ø´ØªÙ†Ø¨Ø±_Ø£ÙƒØªÙˆØ¨Ø±_Ù†ÙˆÙ†Ø¨Ø±_Ø¯Ø¬Ù†Ø¨Ø±".split(
                "_"
              ),
              weekdays: "Ø§Ù„Ø£Ø­Ø¯_Ø§Ù„Ø¥Ø«Ù†ÙŠÙ†_Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡_Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø§Ù„Ø®Ù…ÙŠØ³_Ø§Ù„Ø¬Ù…Ø¹Ø©_Ø§Ù„Ø³Ø¨Øª".split(
                "_"
              ),
              weekdaysShort: "Ø§Ø­Ø¯_Ø§Ø«Ù†ÙŠÙ†_Ø«Ù„Ø§Ø«Ø§Ø¡_Ø§Ø±Ø¨Ø¹Ø§Ø¡_Ø®Ù…ÙŠØ³_Ø¬Ù…Ø¹Ø©_Ø³Ø¨Øª".split(
                "_"
              ),
              weekdaysMin: "Ø­_Ù†_Ø«_Ø±_Ø®_Ø¬_Ø³".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Ø§Ù„ÙŠÙˆÙ… Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                nextDay: "[ØºØ¯Ø§ Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                nextWeek: "dddd [Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                lastDay: "[Ø£Ù…Ø³ Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                lastWeek: "dddd [Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "ÙÙŠ %s",
                past: "Ù…Ù†Ø° %s",
                s: "Ø«ÙˆØ§Ù†",
                ss: "%d Ø«Ø§Ù†ÙŠØ©",
                m: "Ø¯Ù‚ÙŠÙ‚Ø©",
                mm: "%d Ø¯Ù‚Ø§Ø¦Ù‚",
                h: "Ø³Ø§Ø¹Ø©",
                hh: "%d Ø³Ø§Ø¹Ø§Øª",
                d: "ÙŠÙˆÙ…",
                dd: "%d Ø£ÙŠØ§Ù…",
                M: "Ø´Ù‡Ø±",
                MM: "%d Ø£Ø´Ù‡Ø±",
                y: "Ø³Ù†Ø©",
                yy: "%d Ø³Ù†ÙˆØ§Øª"
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        6040: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "Ù¡",
                2: "Ù¢",
                3: "Ù£",
                4: "Ù¤",
                5: "Ù¥",
                6: "Ù¦",
                7: "Ù§",
                8: "Ù¨",
                9: "Ù©",
                0: "Ù "
              },
              a = {
                "Ù¡": "1",
                "Ù¢": "2",
                "Ù£": "3",
                "Ù¤": "4",
                "Ù¥": "5",
                "Ù¦": "6",
                "Ù§": "7",
                "Ù¨": "8",
                "Ù©": "9",
                "Ù ": "0"
              };
            e.defineLocale("ar-sa", {
              months: "ÙŠÙ†Ø§ÙŠØ±_ÙØ¨Ø±Ø§ÙŠØ±_Ù…Ø§Ø±Ø³_Ø£Ø¨Ø±ÙŠÙ„_Ù…Ø§ÙŠÙˆ_ÙŠÙˆÙ†ÙŠÙˆ_ÙŠÙˆÙ„ÙŠÙˆ_Ø£ØºØ³Ø·Ø³_Ø³Ø¨ØªÙ…Ø¨Ø±_Ø£ÙƒØªÙˆØ¨Ø±_Ù†ÙˆÙÙ…Ø¨Ø±_Ø¯ÙŠØ³Ù…Ø¨Ø±".split(
                "_"
              ),
              monthsShort: "ÙŠÙ†Ø§ÙŠØ±_ÙØ¨Ø±Ø§ÙŠØ±_Ù…Ø§Ø±Ø³_Ø£Ø¨Ø±ÙŠÙ„_Ù…Ø§ÙŠÙˆ_ÙŠÙˆÙ†ÙŠÙˆ_ÙŠÙˆÙ„ÙŠÙˆ_Ø£ØºØ³Ø·Ø³_Ø³Ø¨ØªÙ…Ø¨Ø±_Ø£ÙƒØªÙˆØ¨Ø±_Ù†ÙˆÙÙ…Ø¨Ø±_Ø¯ÙŠØ³Ù…Ø¨Ø±".split(
                "_"
              ),
              weekdays: "Ø§Ù„Ø£Ø­Ø¯_Ø§Ù„Ø¥Ø«Ù†ÙŠÙ†_Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡_Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø§Ù„Ø®Ù…ÙŠØ³_Ø§Ù„Ø¬Ù…Ø¹Ø©_Ø§Ù„Ø³Ø¨Øª".split(
                "_"
              ),
              weekdaysShort: "Ø£Ø­Ø¯_Ø¥Ø«Ù†ÙŠÙ†_Ø«Ù„Ø§Ø«Ø§Ø¡_Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø®Ù…ÙŠØ³_Ø¬Ù…Ø¹Ø©_Ø³Ø¨Øª".split(
                "_"
              ),
              weekdaysMin: "Ø­_Ù†_Ø«_Ø±_Ø®_Ø¬_Ø³".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              meridiemParse: /Øµ|Ù…/,
              isPM: function (e) {
                return "Ù…" === e;
              },
              meridiem: function (e, t, a) {
                return e < 12 ? "Øµ" : "Ù…";
              },
              calendar: {
                sameDay: "[Ø§Ù„ÙŠÙˆÙ… Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                nextDay: "[ØºØ¯Ø§ Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                nextWeek: "dddd [Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                lastDay: "[Ø£Ù…Ø³ Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                lastWeek: "dddd [Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "ÙÙŠ %s",
                past: "Ù…Ù†Ø° %s",
                s: "Ø«ÙˆØ§Ù†",
                ss: "%d Ø«Ø§Ù†ÙŠØ©",
                m: "Ø¯Ù‚ÙŠÙ‚Ø©",
                mm: "%d Ø¯Ù‚Ø§Ø¦Ù‚",
                h: "Ø³Ø§Ø¹Ø©",
                hh: "%d Ø³Ø§Ø¹Ø§Øª",
                d: "ÙŠÙˆÙ…",
                dd: "%d Ø£ÙŠØ§Ù…",
                M: "Ø´Ù‡Ø±",
                MM: "%d Ø£Ø´Ù‡Ø±",
                y: "Ø³Ù†Ø©",
                yy: "%d Ø³Ù†ÙˆØ§Øª"
              },
              preparse: function (e) {
                return e
                  .replace(/[Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©Ù ]/g, function (e) {
                    return a[e];
                  })
                  .replace(/ØŒ/g, ",");
              },
              postformat: function (e) {
                return e
                  .replace(/\d/g, function (e) {
                    return t[e];
                  })
                  .replace(/,/g, "ØŒ");
              },
              week: { dow: 0, doy: 6 }
            });
          })(a(381));
        },
        7100: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("ar-tn", {
              months: "Ø¬Ø§Ù†ÙÙŠ_ÙÙŠÙØ±ÙŠ_Ù…Ø§Ø±Ø³_Ø£ÙØ±ÙŠÙ„_Ù…Ø§ÙŠ_Ø¬ÙˆØ§Ù†_Ø¬ÙˆÙŠÙ„ÙŠØ©_Ø£ÙˆØª_Ø³Ø¨ØªÙ…Ø¨Ø±_Ø£ÙƒØªÙˆØ¨Ø±_Ù†ÙˆÙÙ…Ø¨Ø±_Ø¯ÙŠØ³Ù…Ø¨Ø±".split(
                "_"
              ),
              monthsShort: "Ø¬Ø§Ù†ÙÙŠ_ÙÙŠÙØ±ÙŠ_Ù…Ø§Ø±Ø³_Ø£ÙØ±ÙŠÙ„_Ù…Ø§ÙŠ_Ø¬ÙˆØ§Ù†_Ø¬ÙˆÙŠÙ„ÙŠØ©_Ø£ÙˆØª_Ø³Ø¨ØªÙ…Ø¨Ø±_Ø£ÙƒØªÙˆØ¨Ø±_Ù†ÙˆÙÙ…Ø¨Ø±_Ø¯ÙŠØ³Ù…Ø¨Ø±".split(
                "_"
              ),
              weekdays: "Ø§Ù„Ø£Ø­Ø¯_Ø§Ù„Ø¥Ø«Ù†ÙŠÙ†_Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡_Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø§Ù„Ø®Ù…ÙŠØ³_Ø§Ù„Ø¬Ù…Ø¹Ø©_Ø§Ù„Ø³Ø¨Øª".split(
                "_"
              ),
              weekdaysShort: "Ø£Ø­Ø¯_Ø¥Ø«Ù†ÙŠÙ†_Ø«Ù„Ø§Ø«Ø§Ø¡_Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø®Ù…ÙŠØ³_Ø¬Ù…Ø¹Ø©_Ø³Ø¨Øª".split(
                "_"
              ),
              weekdaysMin: "Ø­_Ù†_Ø«_Ø±_Ø®_Ø¬_Ø³".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Ø§Ù„ÙŠÙˆÙ… Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                nextDay: "[ØºØ¯Ø§ Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                nextWeek: "dddd [Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                lastDay: "[Ø£Ù…Ø³ Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                lastWeek: "dddd [Ø¹Ù„Ù‰ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "ÙÙŠ %s",
                past: "Ù…Ù†Ø° %s",
                s: "Ø«ÙˆØ§Ù†",
                ss: "%d Ø«Ø§Ù†ÙŠØ©",
                m: "Ø¯Ù‚ÙŠÙ‚Ø©",
                mm: "%d Ø¯Ù‚Ø§Ø¦Ù‚",
                h: "Ø³Ø§Ø¹Ø©",
                hh: "%d Ø³Ø§Ø¹Ø§Øª",
                d: "ÙŠÙˆÙ…",
                dd: "%d Ø£ÙŠØ§Ù…",
                M: "Ø´Ù‡Ø±",
                MM: "%d Ø£Ø´Ù‡Ø±",
                y: "Ø³Ù†Ø©",
                yy: "%d Ø³Ù†ÙˆØ§Øª"
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        867: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "Ù¡",
                2: "Ù¢",
                3: "Ù£",
                4: "Ù¤",
                5: "Ù¥",
                6: "Ù¦",
                7: "Ù§",
                8: "Ù¨",
                9: "Ù©",
                0: "Ù "
              },
              a = {
                "Ù¡": "1",
                "Ù¢": "2",
                "Ù£": "3",
                "Ù¤": "4",
                "Ù¥": "5",
                "Ù¦": "6",
                "Ù§": "7",
                "Ù¨": "8",
                "Ù©": "9",
                "Ù ": "0"
              },
              n = function (e) {
                return 0 === e
                  ? 0
                  : 1 === e
                  ? 1
                  : 2 === e
                  ? 2
                  : e % 100 >= 3 && e % 100 <= 10
                  ? 3
                  : e % 100 >= 11
                  ? 4
                  : 5;
              },
              i = {
                s: [
                  "Ø£Ù‚Ù„ Ù…Ù† Ø«Ø§Ù†ÙŠØ©",
                  "Ø«Ø§Ù†ÙŠØ© ÙˆØ§Ø­Ø¯Ø©",
                  ["Ø«Ø§Ù†ÙŠØªØ§Ù†", "Ø«Ø§Ù†ÙŠØªÙŠÙ†"],
                  "%d Ø«ÙˆØ§Ù†",
                  "%d Ø«Ø§Ù†ÙŠØ©",
                  "%d Ø«Ø§Ù†ÙŠØ©"
                ],
                m: [
                  "Ø£Ù‚Ù„ Ù…Ù† Ø¯Ù‚ÙŠÙ‚Ø©",
                  "Ø¯Ù‚ÙŠÙ‚Ø© ÙˆØ§Ø­Ø¯Ø©",
                  ["Ø¯Ù‚ÙŠÙ‚ØªØ§Ù†", "Ø¯Ù‚ÙŠÙ‚ØªÙŠÙ†"],
                  "%d Ø¯Ù‚Ø§Ø¦Ù‚",
                  "%d Ø¯Ù‚ÙŠÙ‚Ø©",
                  "%d Ø¯Ù‚ÙŠÙ‚Ø©"
                ],
                h: [
                  "Ø£Ù‚Ù„ Ù…Ù† Ø³Ø§Ø¹Ø©",
                  "Ø³Ø§Ø¹Ø© ÙˆØ§Ø­Ø¯Ø©",
                  ["Ø³Ø§Ø¹ØªØ§Ù†", "Ø³Ø§Ø¹ØªÙŠÙ†"],
                  "%d Ø³Ø§Ø¹Ø§Øª",
                  "%d Ø³Ø§Ø¹Ø©",
                  "%d Ø³Ø§Ø¹Ø©"
                ],
                d: [
                  "Ø£Ù‚Ù„ Ù…Ù† ÙŠÙˆÙ…",
                  "ÙŠÙˆÙ… ÙˆØ§Ø­Ø¯",
                  ["ÙŠÙˆÙ…Ø§Ù†", "ÙŠÙˆÙ…ÙŠÙ†"],
                  "%d Ø£ÙŠØ§Ù…",
                  "%d ÙŠÙˆÙ…Ù‹Ø§",
                  "%d ÙŠÙˆÙ…"
                ],
                M: [
                  "Ø£Ù‚Ù„ Ù…Ù† Ø´Ù‡Ø±",
                  "Ø´Ù‡Ø± ÙˆØ§Ø­Ø¯",
                  ["Ø´Ù‡Ø±Ø§Ù†", "Ø´Ù‡Ø±ÙŠÙ†"],
                  "%d Ø£Ø´Ù‡Ø±",
                  "%d Ø´Ù‡Ø±Ø§",
                  "%d Ø´Ù‡Ø±"
                ],
                y: [
                  "Ø£Ù‚Ù„ Ù…Ù† Ø¹Ø§Ù…",
                  "Ø¹Ø§Ù… ÙˆØ§Ø­Ø¯",
                  ["Ø¹Ø§Ù…Ø§Ù†", "Ø¹Ø§Ù…ÙŠÙ†"],
                  "%d Ø£Ø¹ÙˆØ§Ù…",
                  "%d Ø¹Ø§Ù…Ù‹Ø§",
                  "%d Ø¹Ø§Ù…"
                ]
              },
              r = function (e) {
                return function (t, a, r, s) {
                  var o = n(t),
                    d = i[e][n(t)];
                  return 2 === o && (d = d[a ? 0 : 1]), d.replace(/%d/i, t);
                };
              },
              s = [
                "ÙŠÙ†Ø§ÙŠØ±",
                "ÙØ¨Ø±Ø§ÙŠØ±",
                "Ù…Ø§Ø±Ø³",
                "Ø£Ø¨Ø±ÙŠÙ„",
                "Ù…Ø§ÙŠÙˆ",
                "ÙŠÙˆÙ†ÙŠÙˆ",
                "ÙŠÙˆÙ„ÙŠÙˆ",
                "Ø£ØºØ³Ø·Ø³",
                "Ø³Ø¨ØªÙ…Ø¨Ø±",
                "Ø£ÙƒØªÙˆØ¨Ø±",
                "Ù†ÙˆÙÙ…Ø¨Ø±",
                "Ø¯ÙŠØ³Ù…Ø¨Ø±"
              ];
            e.defineLocale("ar", {
              months: s,
              monthsShort: s,
              weekdays: "Ø§Ù„Ø£Ø­Ø¯_Ø§Ù„Ø¥Ø«Ù†ÙŠÙ†_Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡_Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø§Ù„Ø®Ù…ÙŠØ³_Ø§Ù„Ø¬Ù…Ø¹Ø©_Ø§Ù„Ø³Ø¨Øª".split(
                "_"
              ),
              weekdaysShort: "Ø£Ø­Ø¯_Ø¥Ø«Ù†ÙŠÙ†_Ø«Ù„Ø§Ø«Ø§Ø¡_Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø®Ù…ÙŠØ³_Ø¬Ù…Ø¹Ø©_Ø³Ø¨Øª".split(
                "_"
              ),
              weekdaysMin: "Ø­_Ù†_Ø«_Ø±_Ø®_Ø¬_Ø³".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "D/â€M/â€YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              meridiemParse: /Øµ|Ù…/,
              isPM: function (e) {
                return "Ù…" === e;
              },
              meridiem: function (e, t, a) {
                return e < 12 ? "Øµ" : "Ù…";
              },
              calendar: {
                sameDay: "[Ø§Ù„ÙŠÙˆÙ… Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                nextDay: "[ØºØ¯Ù‹Ø§ Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                nextWeek: "dddd [Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                lastDay: "[Ø£Ù…Ø³ Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                lastWeek: "dddd [Ø¹Ù†Ø¯ Ø§Ù„Ø³Ø§Ø¹Ø©] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "Ø¨Ø¹Ø¯ %s",
                past: "Ù…Ù†Ø° %s",
                s: r("s"),
                ss: r("s"),
                m: r("m"),
                mm: r("m"),
                h: r("h"),
                hh: r("h"),
                d: r("d"),
                dd: r("d"),
                M: r("M"),
                MM: r("M"),
                y: r("y"),
                yy: r("y")
              },
              preparse: function (e) {
                return e
                  .replace(/[Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©Ù ]/g, function (e) {
                    return a[e];
                  })
                  .replace(/ØŒ/g, ",");
              },
              postformat: function (e) {
                return e
                  .replace(/\d/g, function (e) {
                    return t[e];
                  })
                  .replace(/,/g, "ØŒ");
              },
              week: { dow: 6, doy: 12 }
            });
          })(a(381));
        },
        1083: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
              1: "-inci",
              5: "-inci",
              8: "-inci",
              70: "-inci",
              80: "-inci",
              2: "-nci",
              7: "-nci",
              20: "-nci",
              50: "-nci",
              3: "-Ã¼ncÃ¼",
              4: "-Ã¼ncÃ¼",
              100: "-Ã¼ncÃ¼",
              6: "-ncÄ±",
              9: "-uncu",
              10: "-uncu",
              30: "-uncu",
              60: "-Ä±ncÄ±",
              90: "-Ä±ncÄ±"
            };
            e.defineLocale("az", {
              months: "yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr".split(
                "_"
              ),
              monthsShort: "yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek".split(
                "_"
              ),
              weekdays: "Bazar_Bazar ertÉ™si_Ã‡É™rÅŸÉ™nbÉ™ axÅŸamÄ±_Ã‡É™rÅŸÉ™nbÉ™_CÃ¼mÉ™ axÅŸamÄ±_CÃ¼mÉ™_ÅžÉ™nbÉ™".split(
                "_"
              ),
              weekdaysShort: "Baz_BzE_Ã‡Ax_Ã‡É™r_CAx_CÃ¼m_ÅžÉ™n".split("_"),
              weekdaysMin: "Bz_BE_Ã‡A_Ã‡É™_CA_CÃ¼_ÅžÉ™".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[bugÃ¼n saat] LT",
                nextDay: "[sabah saat] LT",
                nextWeek: "[gÉ™lÉ™n hÉ™ftÉ™] dddd [saat] LT",
                lastDay: "[dÃ¼nÉ™n] LT",
                lastWeek: "[keÃ§É™n hÉ™ftÉ™] dddd [saat] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s sonra",
                past: "%s É™vvÉ™l",
                s: "bir neÃ§É™ saniyÉ™",
                ss: "%d saniyÉ™",
                m: "bir dÉ™qiqÉ™",
                mm: "%d dÉ™qiqÉ™",
                h: "bir saat",
                hh: "%d saat",
                d: "bir gÃ¼n",
                dd: "%d gÃ¼n",
                M: "bir ay",
                MM: "%d ay",
                y: "bir il",
                yy: "%d il"
              },
              meridiemParse: /gecÉ™|sÉ™hÉ™r|gÃ¼ndÃ¼z|axÅŸam/,
              isPM: function (e) {
                return /^(gÃ¼ndÃ¼z|axÅŸam)$/.test(e);
              },
              meridiem: function (e, t, a) {
                return e < 4
                  ? "gecÉ™"
                  : e < 12
                  ? "sÉ™hÉ™r"
                  : e < 17
                  ? "gÃ¼ndÃ¼z"
                  : "axÅŸam";
              },
              dayOfMonthOrdinalParse: /\d{1,2}-(Ä±ncÄ±|inci|nci|Ã¼ncÃ¼|ncÄ±|uncu)/,
              ordinal: function (e) {
                if (0 === e) return e + "-Ä±ncÄ±";
                var a = e % 10,
                  n = (e % 100) - a,
                  i = e >= 100 ? 100 : null;
                return e + (t[a] || t[n] || t[i]);
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        9808: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t) {
              var a = e.split("_");
              return t % 10 == 1 && t % 100 != 11
                ? a[0]
                : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20)
                ? a[1]
                : a[2];
            }
            function a(e, a, n) {
              return "m" === n
                ? a
                  ? "Ñ…Ð²Ñ–Ð»Ñ–Ð½Ð°"
                  : "Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñƒ"
                : "h" === n
                ? a
                  ? "Ð³Ð°Ð´Ð·Ñ–Ð½Ð°"
                  : "Ð³Ð°Ð´Ð·Ñ–Ð½Ñƒ"
                : e +
                  " " +
                  t(
                    {
                      ss: a
                        ? "ÑÐµÐºÑƒÐ½Ð´Ð°_ÑÐµÐºÑƒÐ½Ð´Ñ‹_ÑÐµÐºÑƒÐ½Ð´"
                        : "ÑÐµÐºÑƒÐ½Ð´Ñƒ_ÑÐµÐºÑƒÐ½Ð´Ñ‹_ÑÐµÐºÑƒÐ½Ð´",
                      mm: a
                        ? "Ñ…Ð²Ñ–Ð»Ñ–Ð½Ð°_Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñ‹_Ñ…Ð²Ñ–Ð»Ñ–Ð½"
                        : "Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñƒ_Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñ‹_Ñ…Ð²Ñ–Ð»Ñ–Ð½",
                      hh: a
                        ? "Ð³Ð°Ð´Ð·Ñ–Ð½Ð°_Ð³Ð°Ð´Ð·Ñ–Ð½Ñ‹_Ð³Ð°Ð´Ð·Ñ–Ð½"
                        : "Ð³Ð°Ð´Ð·Ñ–Ð½Ñƒ_Ð³Ð°Ð´Ð·Ñ–Ð½Ñ‹_Ð³Ð°Ð´Ð·Ñ–Ð½",
                      dd: "Ð´Ð·ÐµÐ½ÑŒ_Ð´Ð½Ñ–_Ð´Ð·Ñ‘Ð½",
                      MM: "Ð¼ÐµÑÑÑ†_Ð¼ÐµÑÑÑ†Ñ‹_Ð¼ÐµÑÑÑ†Ð°Ñž",
                      yy: "Ð³Ð¾Ð´_Ð³Ð°Ð´Ñ‹_Ð³Ð°Ð´Ð¾Ñž"
                    }[n],
                    +e
                  );
            }
            e.defineLocale("be", {
              months: {
                format: "ÑÑ‚ÑƒÐ´Ð·ÐµÐ½Ñ_Ð»ÑŽÑ‚Ð°Ð³Ð°_ÑÐ°ÐºÐ°Ð²Ñ–ÐºÐ°_ÐºÑ€Ð°ÑÐ°Ð²Ñ–ÐºÐ°_Ñ‚Ñ€Ð°ÑžÐ½Ñ_Ñ‡ÑÑ€Ð²ÐµÐ½Ñ_Ð»Ñ–Ð¿ÐµÐ½Ñ_Ð¶Ð½Ñ–ÑžÐ½Ñ_Ð²ÐµÑ€Ð°ÑÐ½Ñ_ÐºÐ°ÑÑ‚Ñ€Ñ‹Ñ‡Ð½Ñ–ÐºÐ°_Ð»Ñ–ÑÑ‚Ð°Ð¿Ð°Ð´Ð°_ÑÐ½ÐµÐ¶Ð½Ñ".split(
                  "_"
                ),
                standalone: "ÑÑ‚ÑƒÐ´Ð·ÐµÐ½ÑŒ_Ð»ÑŽÑ‚Ñ‹_ÑÐ°ÐºÐ°Ð²Ñ–Ðº_ÐºÑ€Ð°ÑÐ°Ð²Ñ–Ðº_Ñ‚Ñ€Ð°Ð²ÐµÐ½ÑŒ_Ñ‡ÑÑ€Ð²ÐµÐ½ÑŒ_Ð»Ñ–Ð¿ÐµÐ½ÑŒ_Ð¶Ð½Ñ–Ð²ÐµÐ½ÑŒ_Ð²ÐµÑ€Ð°ÑÐµÐ½ÑŒ_ÐºÐ°ÑÑ‚Ñ€Ñ‹Ñ‡Ð½Ñ–Ðº_Ð»Ñ–ÑÑ‚Ð°Ð¿Ð°Ð´_ÑÐ½ÐµÐ¶Ð°Ð½ÑŒ".split(
                  "_"
                )
              },
              monthsShort: "ÑÑ‚ÑƒÐ´_Ð»ÑŽÑ‚_ÑÐ°Ðº_ÐºÑ€Ð°Ñ_Ñ‚Ñ€Ð°Ð²_Ñ‡ÑÑ€Ð²_Ð»Ñ–Ð¿_Ð¶Ð½Ñ–Ð²_Ð²ÐµÑ€_ÐºÐ°ÑÑ‚_Ð»Ñ–ÑÑ‚_ÑÐ½ÐµÐ¶".split(
                "_"
              ),
              weekdays: {
                format: "Ð½ÑÐ´Ð·ÐµÐ»ÑŽ_Ð¿Ð°Ð½ÑÐ´Ð·ÐµÐ»Ð°Ðº_Ð°ÑžÑ‚Ð¾Ñ€Ð°Ðº_ÑÐµÑ€Ð°Ð´Ñƒ_Ñ‡Ð°Ñ†Ð²ÐµÑ€_Ð¿ÑÑ‚Ð½Ñ–Ñ†Ñƒ_ÑÑƒÐ±Ð¾Ñ‚Ñƒ".split(
                  "_"
                ),
                standalone: "Ð½ÑÐ´Ð·ÐµÐ»Ñ_Ð¿Ð°Ð½ÑÐ´Ð·ÐµÐ»Ð°Ðº_Ð°ÑžÑ‚Ð¾Ñ€Ð°Ðº_ÑÐµÑ€Ð°Ð´Ð°_Ñ‡Ð°Ñ†Ð²ÐµÑ€_Ð¿ÑÑ‚Ð½Ñ–Ñ†Ð°_ÑÑƒÐ±Ð¾Ñ‚Ð°".split(
                  "_"
                ),
                isFormat: /\[ ?[Ð£ÑƒÑž] ?(?:Ð¼Ñ–Ð½ÑƒÐ»ÑƒÑŽ|Ð½Ð°ÑÑ‚ÑƒÐ¿Ð½ÑƒÑŽ)? ?\] ?dddd/
              },
              weekdaysShort: "Ð½Ð´_Ð¿Ð½_Ð°Ñ‚_ÑÑ€_Ñ‡Ñ†_Ð¿Ñ‚_ÑÐ±".split("_"),
              weekdaysMin: "Ð½Ð´_Ð¿Ð½_Ð°Ñ‚_ÑÑ€_Ñ‡Ñ†_Ð¿Ñ‚_ÑÐ±".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY Ð³.",
                LLL: "D MMMM YYYY Ð³., HH:mm",
                LLLL: "dddd, D MMMM YYYY Ð³., HH:mm"
              },
              calendar: {
                sameDay: "[Ð¡Ñ‘Ð½Ð½Ñ Ñž] LT",
                nextDay: "[Ð—Ð°ÑžÑ‚Ñ€Ð° Ñž] LT",
                lastDay: "[Ð£Ñ‡Ð¾Ñ€Ð° Ñž] LT",
                nextWeek: function () {
                  return "[Ð£] dddd [Ñž] LT";
                },
                lastWeek: function () {
                  switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                      return "[Ð£ Ð¼Ñ–Ð½ÑƒÐ»ÑƒÑŽ] dddd [Ñž] LT";
                    case 1:
                    case 2:
                    case 4:
                      return "[Ð£ Ð¼Ñ–Ð½ÑƒÐ»Ñ‹] dddd [Ñž] LT";
                  }
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "Ð¿Ñ€Ð°Ð· %s",
                past: "%s Ñ‚Ð°Ð¼Ñƒ",
                s: "Ð½ÐµÐºÐ°Ð»ÑŒÐºÑ– ÑÐµÐºÑƒÐ½Ð´",
                m: a,
                mm: a,
                h: a,
                hh: a,
                d: "Ð´Ð·ÐµÐ½ÑŒ",
                dd: a,
                M: "Ð¼ÐµÑÑÑ†",
                MM: a,
                y: "Ð³Ð¾Ð´",
                yy: a
              },
              meridiemParse: /Ð½Ð¾Ñ‡Ñ‹|Ñ€Ð°Ð½Ñ–Ñ†Ñ‹|Ð´Ð½Ñ|Ð²ÐµÑ‡Ð°Ñ€Ð°/,
              isPM: function (e) {
                return /^(Ð´Ð½Ñ|Ð²ÐµÑ‡Ð°Ñ€Ð°)$/.test(e);
              },
              meridiem: function (e, t, a) {
                return e < 4
                  ? "Ð½Ð¾Ñ‡Ñ‹"
                  : e < 12
                  ? "Ñ€Ð°Ð½Ñ–Ñ†Ñ‹"
                  : e < 17
                  ? "Ð´Ð½Ñ"
                  : "Ð²ÐµÑ‡Ð°Ñ€Ð°";
              },
              dayOfMonthOrdinalParse: /\d{1,2}-(Ñ–|Ñ‹|Ð³Ð°)/,
              ordinal: function (e, t) {
                switch (t) {
                  case "M":
                  case "d":
                  case "DDD":
                  case "w":
                  case "W":
                    return (e % 10 != 2 && e % 10 != 3) ||
                      e % 100 == 12 ||
                      e % 100 == 13
                      ? e + "-Ñ‹"
                      : e + "-Ñ–";
                  case "D":
                    return e + "-Ð³Ð°";
                  default:
                    return e;
                }
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        8338: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("bg", {
              months: "ÑÐ½ÑƒÐ°Ñ€Ð¸_Ñ„ÐµÐ²Ñ€ÑƒÐ°Ñ€Ð¸_Ð¼Ð°Ñ€Ñ‚_Ð°Ð¿Ñ€Ð¸Ð»_Ð¼Ð°Ð¹_ÑŽÐ½Ð¸_ÑŽÐ»Ð¸_Ð°Ð²Ð³ÑƒÑÑ‚_ÑÐµÐ¿Ñ‚ÐµÐ¼Ð²Ñ€Ð¸_Ð¾ÐºÑ‚Ð¾Ð¼Ð²Ñ€Ð¸_Ð½Ð¾ÐµÐ¼Ð²Ñ€Ð¸_Ð´ÐµÐºÐµÐ¼Ð²Ñ€Ð¸".split(
                "_"
              ),
              monthsShort: "ÑÐ½Ñƒ_Ñ„ÐµÐ²_Ð¼Ð°Ñ€_Ð°Ð¿Ñ€_Ð¼Ð°Ð¹_ÑŽÐ½Ð¸_ÑŽÐ»Ð¸_Ð°Ð²Ð³_ÑÐµÐ¿_Ð¾ÐºÑ‚_Ð½Ð¾Ðµ_Ð´ÐµÐº".split(
                "_"
              ),
              weekdays: "Ð½ÐµÐ´ÐµÐ»Ñ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»Ð½Ð¸Ðº_Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº_ÑÑ€ÑÐ´Ð°_Ñ‡ÐµÑ‚Ð²ÑŠÑ€Ñ‚ÑŠÐº_Ð¿ÐµÑ‚ÑŠÐº_ÑÑŠÐ±Ð¾Ñ‚Ð°".split(
                "_"
              ),
              weekdaysShort: "Ð½ÐµÐ´_Ð¿Ð¾Ð½_Ð²Ñ‚Ð¾_ÑÑ€Ñ_Ñ‡ÐµÑ‚_Ð¿ÐµÑ‚_ÑÑŠÐ±".split(
                "_"
              ),
              weekdaysMin: "Ð½Ð´_Ð¿Ð½_Ð²Ñ‚_ÑÑ€_Ñ‡Ñ‚_Ð¿Ñ‚_ÑÐ±".split("_"),
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "D.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY H:mm",
                LLLL: "dddd, D MMMM YYYY H:mm"
              },
              calendar: {
                sameDay: "[Ð”Ð½ÐµÑ Ð²] LT",
                nextDay: "[Ð£Ñ‚Ñ€Ðµ Ð²] LT",
                nextWeek: "dddd [Ð²] LT",
                lastDay: "[Ð’Ñ‡ÐµÑ€Ð° Ð²] LT",
                lastWeek: function () {
                  switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                      return "[ÐœÐ¸Ð½Ð°Ð»Ð°Ñ‚Ð°] dddd [Ð²] LT";
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                      return "[ÐœÐ¸Ð½Ð°Ð»Ð¸Ñ] dddd [Ð²] LT";
                  }
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "ÑÐ»ÐµÐ´ %s",
                past: "Ð¿Ñ€ÐµÐ´Ð¸ %s",
                s: "Ð½ÑÐºÐ¾Ð»ÐºÐ¾ ÑÐµÐºÑƒÐ½Ð´Ð¸",
                ss: "%d ÑÐµÐºÑƒÐ½Ð´Ð¸",
                m: "Ð¼Ð¸Ð½ÑƒÑ‚Ð°",
                mm: "%d Ð¼Ð¸Ð½ÑƒÑ‚Ð¸",
                h: "Ñ‡Ð°Ñ",
                hh: "%d Ñ‡Ð°ÑÐ°",
                d: "Ð´ÐµÐ½",
                dd: "%d Ð´ÐµÐ½Ð°",
                w: "ÑÐµÐ´Ð¼Ð¸Ñ†Ð°",
                ww: "%d ÑÐµÐ´Ð¼Ð¸Ñ†Ð¸",
                M: "Ð¼ÐµÑÐµÑ†",
                MM: "%d Ð¼ÐµÑÐµÑ†Ð°",
                y: "Ð³Ð¾Ð´Ð¸Ð½Ð°",
                yy: "%d Ð³Ð¾Ð´Ð¸Ð½Ð¸"
              },
              dayOfMonthOrdinalParse: /\d{1,2}-(ÐµÐ²|ÐµÐ½|Ñ‚Ð¸|Ð²Ð¸|Ñ€Ð¸|Ð¼Ð¸)/,
              ordinal: function (e) {
                var t = e % 10,
                  a = e % 100;
                return 0 === e
                  ? e + "-ÐµÐ²"
                  : 0 === a
                  ? e + "-ÐµÐ½"
                  : a > 10 && a < 20
                  ? e + "-Ñ‚Ð¸"
                  : 1 === t
                  ? e + "-Ð²Ð¸"
                  : 2 === t
                  ? e + "-Ñ€Ð¸"
                  : 7 === t || 8 === t
                  ? e + "-Ð¼Ð¸"
                  : e + "-Ñ‚Ð¸";
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        7438: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("bm", {
              months: "Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_MÉ›kalo_ZuwÉ›nkalo_Zuluyekalo_Utikalo_SÉ›tanburukalo_É”kutÉ”burukalo_Nowanburukalo_Desanburukalo".split(
                "_"
              ),
              monthsShort: "Zan_Few_Mar_Awi_MÉ›_Zuw_Zul_Uti_SÉ›t_É”ku_Now_Des".split(
                "_"
              ),
              weekdays: "Kari_NtÉ›nÉ›n_Tarata_Araba_Alamisa_Juma_Sibiri".split(
                "_"
              ),
              weekdaysShort: "Kar_NtÉ›_Tar_Ara_Ala_Jum_Sib".split("_"),
              weekdaysMin: "Ka_Nt_Ta_Ar_Al_Ju_Si".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "MMMM [tile] D [san] YYYY",
                LLL: "MMMM [tile] D [san] YYYY [lÉ›rÉ›] HH:mm",
                LLLL: "dddd MMMM [tile] D [san] YYYY [lÉ›rÉ›] HH:mm"
              },
              calendar: {
                sameDay: "[Bi lÉ›rÉ›] LT",
                nextDay: "[Sini lÉ›rÉ›] LT",
                nextWeek: "dddd [don lÉ›rÉ›] LT",
                lastDay: "[Kunu lÉ›rÉ›] LT",
                lastWeek: "dddd [tÉ›mÉ›nen lÉ›rÉ›] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s kÉ”nÉ”",
                past: "a bÉ› %s bÉ”",
                s: "sanga dama dama",
                ss: "sekondi %d",
                m: "miniti kelen",
                mm: "miniti %d",
                h: "lÉ›rÉ› kelen",
                hh: "lÉ›rÉ› %d",
                d: "tile kelen",
                dd: "tile %d",
                M: "kalo kelen",
                MM: "kalo %d",
                y: "san kelen",
                yy: "san %d"
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        6225: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "à§§",
                2: "à§¨",
                3: "à§©",
                4: "à§ª",
                5: "à§«",
                6: "à§¬",
                7: "à§­",
                8: "à§®",
                9: "à§¯",
                0: "à§¦"
              },
              a = {
                "à§§": "1",
                "à§¨": "2",
                "à§©": "3",
                "à§ª": "4",
                "à§«": "5",
                "à§¬": "6",
                "à§­": "7",
                "à§®": "8",
                "à§¯": "9",
                "à§¦": "0"
              };
            e.defineLocale("bn-bd", {
              months: "à¦œà¦¾à¦¨à§à§Ÿà¦¾à¦°à¦¿_à¦«à§‡à¦¬à§à¦°à§à§Ÿà¦¾à¦°à¦¿_à¦®à¦¾à¦°à§à¦š_à¦à¦ªà§à¦°à¦¿à¦²_à¦®à§‡_à¦œà§à¦¨_à¦œà§à¦²à¦¾à¦‡_à¦†à¦—à¦¸à§à¦Ÿ_à¦¸à§‡à¦ªà§à¦Ÿà§‡à¦®à§à¦¬à¦°_à¦…à¦•à§à¦Ÿà§‹à¦¬à¦°_à¦¨à¦­à§‡à¦®à§à¦¬à¦°_à¦¡à¦¿à¦¸à§‡à¦®à§à¦¬à¦°".split(
                "_"
              ),
              monthsShort: "à¦œà¦¾à¦¨à§_à¦«à§‡à¦¬à§à¦°à§_à¦®à¦¾à¦°à§à¦š_à¦à¦ªà§à¦°à¦¿à¦²_à¦®à§‡_à¦œà§à¦¨_à¦œà§à¦²à¦¾à¦‡_à¦†à¦—à¦¸à§à¦Ÿ_à¦¸à§‡à¦ªà§à¦Ÿ_à¦…à¦•à§à¦Ÿà§‹_à¦¨à¦­à§‡_à¦¡à¦¿à¦¸à§‡".split(
                "_"
              ),
              weekdays: "à¦°à¦¬à¦¿à¦¬à¦¾à¦°_à¦¸à§‹à¦®à¦¬à¦¾à¦°_à¦®à¦™à§à¦—à¦²à¦¬à¦¾à¦°_à¦¬à§à¦§à¦¬à¦¾à¦°_à¦¬à§ƒà¦¹à¦¸à§à¦ªà¦¤à¦¿à¦¬à¦¾à¦°_à¦¶à§à¦•à§à¦°à¦¬à¦¾à¦°_à¦¶à¦¨à¦¿à¦¬à¦¾à¦°".split(
                "_"
              ),
              weekdaysShort: "à¦°à¦¬à¦¿_à¦¸à§‹à¦®_à¦®à¦™à§à¦—à¦²_à¦¬à§à¦§_à¦¬à§ƒà¦¹à¦¸à§à¦ªà¦¤à¦¿_à¦¶à§à¦•à§à¦°_à¦¶à¦¨à¦¿".split(
                "_"
              ),
              weekdaysMin: "à¦°à¦¬à¦¿_à¦¸à§‹à¦®_à¦®à¦™à§à¦—à¦²_à¦¬à§à¦§_à¦¬à§ƒà¦¹_à¦¶à§à¦•à§à¦°_à¦¶à¦¨à¦¿".split(
                "_"
              ),
              longDateFormat: {
                LT: "A h:mm à¦¸à¦®à§Ÿ",
                LTS: "A h:mm:ss à¦¸à¦®à§Ÿ",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm à¦¸à¦®à§Ÿ",
                LLLL: "dddd, D MMMM YYYY, A h:mm à¦¸à¦®à§Ÿ"
              },
              calendar: {
                sameDay: "[à¦†à¦œ] LT",
                nextDay: "[à¦†à¦—à¦¾à¦®à§€à¦•à¦¾à¦²] LT",
                nextWeek: "dddd, LT",
                lastDay: "[à¦—à¦¤à¦•à¦¾à¦²] LT",
                lastWeek: "[à¦—à¦¤] dddd, LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s à¦ªà¦°à§‡",
                past: "%s à¦†à¦—à§‡",
                s: "à¦•à§Ÿà§‡à¦• à¦¸à§‡à¦•à§‡à¦¨à§à¦¡",
                ss: "%d à¦¸à§‡à¦•à§‡à¦¨à§à¦¡",
                m: "à¦à¦• à¦®à¦¿à¦¨à¦¿à¦Ÿ",
                mm: "%d à¦®à¦¿à¦¨à¦¿à¦Ÿ",
                h: "à¦à¦• à¦˜à¦¨à§à¦Ÿà¦¾",
                hh: "%d à¦˜à¦¨à§à¦Ÿà¦¾",
                d: "à¦à¦• à¦¦à¦¿à¦¨",
                dd: "%d à¦¦à¦¿à¦¨",
                M: "à¦à¦• à¦®à¦¾à¦¸",
                MM: "%d à¦®à¦¾à¦¸",
                y: "à¦à¦• à¦¬à¦›à¦°",
                yy: "%d à¦¬à¦›à¦°"
              },
              preparse: function (e) {
                return e.replace(
                  /[à§§à§¨à§©à§ªà§«à§¬à§­à§®à§¯à§¦]/g,
                  function (e) {
                    return a[e];
                  }
                );
              },
              postformat: function (e) {
                return e.replace(/\d/g, function (e) {
                  return t[e];
                });
              },
              meridiemParse: /à¦°à¦¾à¦¤|à¦­à§‹à¦°|à¦¸à¦•à¦¾à¦²|à¦¦à§à¦ªà§à¦°|à¦¬à¦¿à¦•à¦¾à¦²|à¦¸à¦¨à§à¦§à§à¦¯à¦¾|à¦°à¦¾à¦¤/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "à¦°à¦¾à¦¤" === t
                    ? e < 4
                      ? e
                      : e + 12
                    : "à¦­à§‹à¦°" === t || "à¦¸à¦•à¦¾à¦²" === t
                    ? e
                    : "à¦¦à§à¦ªà§à¦°" === t
                    ? e >= 3
                      ? e
                      : e + 12
                    : "à¦¬à¦¿à¦•à¦¾à¦²" === t || "à¦¸à¦¨à§à¦§à§à¦¯à¦¾" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                return e < 4
                  ? "à¦°à¦¾à¦¤"
                  : e < 6
                  ? "à¦­à§‹à¦°"
                  : e < 12
                  ? "à¦¸à¦•à¦¾à¦²"
                  : e < 15
                  ? "à¦¦à§à¦ªà§à¦°"
                  : e < 18
                  ? "à¦¬à¦¿à¦•à¦¾à¦²"
                  : e < 20
                  ? "à¦¸à¦¨à§à¦§à§à¦¯à¦¾"
                  : "à¦°à¦¾à¦¤";
              },
              week: { dow: 0, doy: 6 }
            });
          })(a(381));
        },
        8905: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "à§§",
                2: "à§¨",
                3: "à§©",
                4: "à§ª",
                5: "à§«",
                6: "à§¬",
                7: "à§­",
                8: "à§®",
                9: "à§¯",
                0: "à§¦"
              },
              a = {
                "à§§": "1",
                "à§¨": "2",
                "à§©": "3",
                "à§ª": "4",
                "à§«": "5",
                "à§¬": "6",
                "à§­": "7",
                "à§®": "8",
                "à§¯": "9",
                "à§¦": "0"
              };
            e.defineLocale("bn", {
              months: "à¦œà¦¾à¦¨à§à§Ÿà¦¾à¦°à¦¿_à¦«à§‡à¦¬à§à¦°à§à§Ÿà¦¾à¦°à¦¿_à¦®à¦¾à¦°à§à¦š_à¦à¦ªà§à¦°à¦¿à¦²_à¦®à§‡_à¦œà§à¦¨_à¦œà§à¦²à¦¾à¦‡_à¦†à¦—à¦¸à§à¦Ÿ_à¦¸à§‡à¦ªà§à¦Ÿà§‡à¦®à§à¦¬à¦°_à¦…à¦•à§à¦Ÿà§‹à¦¬à¦°_à¦¨à¦­à§‡à¦®à§à¦¬à¦°_à¦¡à¦¿à¦¸à§‡à¦®à§à¦¬à¦°".split(
                "_"
              ),
              monthsShort: "à¦œà¦¾à¦¨à§_à¦«à§‡à¦¬à§à¦°à§_à¦®à¦¾à¦°à§à¦š_à¦à¦ªà§à¦°à¦¿à¦²_à¦®à§‡_à¦œà§à¦¨_à¦œà§à¦²à¦¾à¦‡_à¦†à¦—à¦¸à§à¦Ÿ_à¦¸à§‡à¦ªà§à¦Ÿ_à¦…à¦•à§à¦Ÿà§‹_à¦¨à¦­à§‡_à¦¡à¦¿à¦¸à§‡".split(
                "_"
              ),
              weekdays: "à¦°à¦¬à¦¿à¦¬à¦¾à¦°_à¦¸à§‹à¦®à¦¬à¦¾à¦°_à¦®à¦™à§à¦—à¦²à¦¬à¦¾à¦°_à¦¬à§à¦§à¦¬à¦¾à¦°_à¦¬à§ƒà¦¹à¦¸à§à¦ªà¦¤à¦¿à¦¬à¦¾à¦°_à¦¶à§à¦•à§à¦°à¦¬à¦¾à¦°_à¦¶à¦¨à¦¿à¦¬à¦¾à¦°".split(
                "_"
              ),
              weekdaysShort: "à¦°à¦¬à¦¿_à¦¸à§‹à¦®_à¦®à¦™à§à¦—à¦²_à¦¬à§à¦§_à¦¬à§ƒà¦¹à¦¸à§à¦ªà¦¤à¦¿_à¦¶à§à¦•à§à¦°_à¦¶à¦¨à¦¿".split(
                "_"
              ),
              weekdaysMin: "à¦°à¦¬à¦¿_à¦¸à§‹à¦®_à¦®à¦™à§à¦—à¦²_à¦¬à§à¦§_à¦¬à§ƒà¦¹_à¦¶à§à¦•à§à¦°_à¦¶à¦¨à¦¿".split(
                "_"
              ),
              longDateFormat: {
                LT: "A h:mm à¦¸à¦®à§Ÿ",
                LTS: "A h:mm:ss à¦¸à¦®à§Ÿ",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm à¦¸à¦®à§Ÿ",
                LLLL: "dddd, D MMMM YYYY, A h:mm à¦¸à¦®à§Ÿ"
              },
              calendar: {
                sameDay: "[à¦†à¦œ] LT",
                nextDay: "[à¦†à¦—à¦¾à¦®à§€à¦•à¦¾à¦²] LT",
                nextWeek: "dddd, LT",
                lastDay: "[à¦—à¦¤à¦•à¦¾à¦²] LT",
                lastWeek: "[à¦—à¦¤] dddd, LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s à¦ªà¦°à§‡",
                past: "%s à¦†à¦—à§‡",
                s: "à¦•à§Ÿà§‡à¦• à¦¸à§‡à¦•à§‡à¦¨à§à¦¡",
                ss: "%d à¦¸à§‡à¦•à§‡à¦¨à§à¦¡",
                m: "à¦à¦• à¦®à¦¿à¦¨à¦¿à¦Ÿ",
                mm: "%d à¦®à¦¿à¦¨à¦¿à¦Ÿ",
                h: "à¦à¦• à¦˜à¦¨à§à¦Ÿà¦¾",
                hh: "%d à¦˜à¦¨à§à¦Ÿà¦¾",
                d: "à¦à¦• à¦¦à¦¿à¦¨",
                dd: "%d à¦¦à¦¿à¦¨",
                M: "à¦à¦• à¦®à¦¾à¦¸",
                MM: "%d à¦®à¦¾à¦¸",
                y: "à¦à¦• à¦¬à¦›à¦°",
                yy: "%d à¦¬à¦›à¦°"
              },
              preparse: function (e) {
                return e.replace(
                  /[à§§à§¨à§©à§ªà§«à§¬à§­à§®à§¯à§¦]/g,
                  function (e) {
                    return a[e];
                  }
                );
              },
              postformat: function (e) {
                return e.replace(/\d/g, function (e) {
                  return t[e];
                });
              },
              meridiemParse: /à¦°à¦¾à¦¤|à¦¸à¦•à¦¾à¦²|à¦¦à§à¦ªà§à¦°|à¦¬à¦¿à¦•à¦¾à¦²|à¦°à¦¾à¦¤/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  ("à¦°à¦¾à¦¤" === t && e >= 4) ||
                  ("à¦¦à§à¦ªà§à¦°" === t && e < 5) ||
                  "à¦¬à¦¿à¦•à¦¾à¦²" === t
                    ? e + 12
                    : e
                );
              },
              meridiem: function (e, t, a) {
                return e < 4
                  ? "à¦°à¦¾à¦¤"
                  : e < 10
                  ? "à¦¸à¦•à¦¾à¦²"
                  : e < 17
                  ? "à¦¦à§à¦ªà§à¦°"
                  : e < 20
                  ? "à¦¬à¦¿à¦•à¦¾à¦²"
                  : "à¦°à¦¾à¦¤";
              },
              week: { dow: 0, doy: 6 }
            });
          })(a(381));
        },
        1560: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "à¼¡",
                2: "à¼¢",
                3: "à¼£",
                4: "à¼¤",
                5: "à¼¥",
                6: "à¼¦",
                7: "à¼§",
                8: "à¼¨",
                9: "à¼©",
                0: "à¼ "
              },
              a = {
                "à¼¡": "1",
                "à¼¢": "2",
                "à¼£": "3",
                "à¼¤": "4",
                "à¼¥": "5",
                "à¼¦": "6",
                "à¼§": "7",
                "à¼¨": "8",
                "à¼©": "9",
                "à¼ ": "0"
              };
            e.defineLocale("bo", {
              months: "à½Ÿà¾³à¼‹à½–à¼‹à½‘à½„à¼‹à½”à½¼_à½Ÿà¾³à¼‹à½–à¼‹à½‚à½‰à½²à½¦à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½‚à½¦à½´à½˜à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½žà½²à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½£à¾”à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½‘à¾²à½´à½‚à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½‘à½´à½“à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½¢à¾’à¾±à½‘à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½‘à½‚à½´à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½…à½´à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½…à½´à¼‹à½‚à½…à½²à½‚à¼‹à½”_à½Ÿà¾³à¼‹à½–à¼‹à½–à½…à½´à¼‹à½‚à½‰à½²à½¦à¼‹à½”".split(
                "_"
              ),
              monthsShort: "à½Ÿà¾³à¼‹1_à½Ÿà¾³à¼‹2_à½Ÿà¾³à¼‹3_à½Ÿà¾³à¼‹4_à½Ÿà¾³à¼‹5_à½Ÿà¾³à¼‹6_à½Ÿà¾³à¼‹7_à½Ÿà¾³à¼‹8_à½Ÿà¾³à¼‹9_à½Ÿà¾³à¼‹10_à½Ÿà¾³à¼‹11_à½Ÿà¾³à¼‹12".split(
                "_"
              ),
              monthsShortRegex: /^(à½Ÿà¾³à¼‹\d{1,2})/,
              monthsParseExact: !0,
              weekdays: "à½‚à½Ÿà½ à¼‹à½‰à½²à¼‹à½˜à¼‹_à½‚à½Ÿà½ à¼‹à½Ÿà¾³à¼‹à½–à¼‹_à½‚à½Ÿà½ à¼‹à½˜à½²à½‚à¼‹à½‘à½˜à½¢à¼‹_à½‚à½Ÿà½ à¼‹à½£à¾·à½‚à¼‹à½”à¼‹_à½‚à½Ÿà½ à¼‹à½•à½´à½¢à¼‹à½–à½´_à½‚à½Ÿà½ à¼‹à½”à¼‹à½¦à½„à½¦à¼‹_à½‚à½Ÿà½ à¼‹à½¦à¾¤à½ºà½“à¼‹à½”à¼‹".split(
                "_"
              ),
              weekdaysShort: "à½‰à½²à¼‹à½˜à¼‹_à½Ÿà¾³à¼‹à½–à¼‹_à½˜à½²à½‚à¼‹à½‘à½˜à½¢à¼‹_à½£à¾·à½‚à¼‹à½”à¼‹_à½•à½´à½¢à¼‹à½–à½´_à½”à¼‹à½¦à½„à½¦à¼‹_à½¦à¾¤à½ºà½“à¼‹à½”à¼‹".split(
                "_"
              ),
              weekdaysMin: "à½‰à½²_à½Ÿà¾³_à½˜à½²à½‚_à½£à¾·à½‚_à½•à½´à½¢_à½¦à½„à½¦_à½¦à¾¤à½ºà½“".split(
                "_"
              ),
              longDateFormat: {
                LT: "A h:mm",
                LTS: "A h:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm",
                LLLL: "dddd, D MMMM YYYY, A h:mm"
              },
              calendar: {
                sameDay: "[à½‘à½²à¼‹à½¢à½²à½„] LT",
                nextDay: "[à½¦à½„à¼‹à½‰à½²à½“] LT",
                nextWeek: "[à½–à½‘à½´à½“à¼‹à½•à¾²à½‚à¼‹à½¢à¾—à½ºà½¦à¼‹à½˜], LT",
                lastDay: "[à½à¼‹à½¦à½„] LT",
                lastWeek: "[à½–à½‘à½´à½“à¼‹à½•à¾²à½‚à¼‹à½˜à½à½ à¼‹à½˜] dddd, LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s à½£à¼‹",
                past: "%s à½¦à¾”à½“à¼‹à½£",
                s: "à½£à½˜à¼‹à½¦à½„",
                ss: "%d à½¦à¾à½¢à¼‹à½†à¼",
                m: "à½¦à¾à½¢à¼‹à½˜à¼‹à½‚à½…à½²à½‚",
                mm: "%d à½¦à¾à½¢à¼‹à½˜",
                h: "à½†à½´à¼‹à½šà½¼à½‘à¼‹à½‚à½…à½²à½‚",
                hh: "%d à½†à½´à¼‹à½šà½¼à½‘",
                d: "à½‰à½²à½“à¼‹à½‚à½…à½²à½‚",
                dd: "%d à½‰à½²à½“à¼‹",
                M: "à½Ÿà¾³à¼‹à½–à¼‹à½‚à½…à½²à½‚",
                MM: "%d à½Ÿà¾³à¼‹à½–",
                y: "à½£à½¼à¼‹à½‚à½…à½²à½‚",
                yy: "%d à½£à½¼"
              },
              preparse: function (e) {
                return e.replace(
                  /[à¼¡à¼¢à¼£à¼¤à¼¥à¼¦à¼§à¼¨à¼©à¼ ]/g,
                  function (e) {
                    return a[e];
                  }
                );
              },
              postformat: function (e) {
                return e.replace(/\d/g, function (e) {
                  return t[e];
                });
              },
              meridiemParse: /à½˜à½šà½“à¼‹à½˜à½¼|à½žà½¼à½‚à½¦à¼‹à½€à½¦|à½‰à½²à½“à¼‹à½‚à½´à½„|à½‘à½‚à½¼à½„à¼‹à½‘à½‚|à½˜à½šà½“à¼‹à½˜à½¼/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  ("à½˜à½šà½“à¼‹à½˜à½¼" === t && e >= 4) ||
                  ("à½‰à½²à½“à¼‹à½‚à½´à½„" === t && e < 5) ||
                  "à½‘à½‚à½¼à½„à¼‹à½‘à½‚" === t
                    ? e + 12
                    : e
                );
              },
              meridiem: function (e, t, a) {
                return e < 4
                  ? "à½˜à½šà½“à¼‹à½˜à½¼"
                  : e < 10
                  ? "à½žà½¼à½‚à½¦à¼‹à½€à½¦"
                  : e < 17
                  ? "à½‰à½²à½“à¼‹à½‚à½´à½„"
                  : e < 20
                  ? "à½‘à½‚à½¼à½„à¼‹à½‘à½‚"
                  : "à½˜à½šà½“à¼‹à½˜à½¼";
              },
              week: { dow: 0, doy: 6 }
            });
          })(a(381));
        },
        1278: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t, a) {
              return (
                e + " " + i({ mm: "munutenn", MM: "miz", dd: "devezh" }[a], e)
              );
            }
            function a(e) {
              switch (n(e)) {
                case 1:
                case 3:
                case 4:
                case 5:
                case 9:
                  return e + " bloaz";
                default:
                  return e + " vloaz";
              }
            }
            function n(e) {
              return e > 9 ? n(e % 10) : e;
            }
            function i(e, t) {
              return 2 === t ? r(e) : e;
            }
            function r(e) {
              var t = { m: "v", b: "v", d: "z" };
              return void 0 === t[e.charAt(0)]
                ? e
                : t[e.charAt(0)] + e.substring(1);
            }
            var s = [
                /^gen/i,
                /^c[Ê¼\']hwe/i,
                /^meu/i,
                /^ebr/i,
                /^mae/i,
                /^(mez|eve)/i,
                /^gou/i,
                /^eos/i,
                /^gwe/i,
                /^her/i,
                /^du/i,
                /^ker/i
              ],
              o = /^(genver|c[Ê¼\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[Ê¼\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
              d = /^(genver|c[Ê¼\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i,
              l = /^(gen|c[Ê¼\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
              c = [
                /^sul/i,
                /^lun/i,
                /^meurzh/i,
                /^merc[Ê¼\']her/i,
                /^yaou/i,
                /^gwener/i,
                /^sadorn/i
              ],
              u = [/^Sul/i, /^Lun/i, /^Meu/i, /^Mer/i, /^Yao/i, /^Gwe/i, /^Sad/i],
              m = [
                /^Su/i,
                /^Lu/i,
                /^Me([^r]|$)/i,
                /^Mer/i,
                /^Ya/i,
                /^Gw/i,
                /^Sa/i
              ];
            e.defineLocale("br", {
              months: "Genver_CÊ¼hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu".split(
                "_"
              ),
              monthsShort: "Gen_CÊ¼hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker".split(
                "_"
              ),
              weekdays: "Sul_Lun_Meurzh_MercÊ¼her_Yaou_Gwener_Sadorn".split("_"),
              weekdaysShort: "Sul_Lun_Meu_Mer_Yao_Gwe_Sad".split("_"),
              weekdaysMin: "Su_Lu_Me_Mer_Ya_Gw_Sa".split("_"),
              weekdaysParse: m,
              fullWeekdaysParse: c,
              shortWeekdaysParse: u,
              minWeekdaysParse: m,
              monthsRegex: o,
              monthsShortRegex: o,
              monthsStrictRegex: d,
              monthsShortStrictRegex: l,
              monthsParse: s,
              longMonthsParse: s,
              shortMonthsParse: s,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D [a viz] MMMM YYYY",
                LLL: "D [a viz] MMMM YYYY HH:mm",
                LLLL: "dddd, D [a viz] MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Hiziv da] LT",
                nextDay: "[WarcÊ¼hoazh da] LT",
                nextWeek: "dddd [da] LT",
                lastDay: "[DecÊ¼h da] LT",
                lastWeek: "dddd [paset da] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "a-benn %s",
                past: "%s Ê¼zo",
                s: "un nebeud segondennoÃ¹",
                ss: "%d eilenn",
                m: "ur vunutenn",
                mm: t,
                h: "un eur",
                hh: "%d eur",
                d: "un devezh",
                dd: t,
                M: "ur miz",
                MM: t,
                y: "ur bloaz",
                yy: a
              },
              dayOfMonthOrdinalParse: /\d{1,2}(aÃ±|vet)/,
              ordinal: function (e) {
                return e + (1 === e ? "aÃ±" : "vet");
              },
              week: { dow: 1, doy: 4 },
              meridiemParse: /a.m.|g.m./,
              isPM: function (e) {
                return "g.m." === e;
              },
              meridiem: function (e, t, a) {
                return e < 12 ? "a.m." : "g.m.";
              }
            });
          })(a(381));
        },
        622: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t, a) {
              var n = e + " ";
              switch (a) {
                case "ss":
                  return (n +=
                    1 === e
                      ? "sekunda"
                      : 2 === e || 3 === e || 4 === e
                      ? "sekunde"
                      : "sekundi");
                case "m":
                  return t ? "jedna minuta" : "jedne minute";
                case "mm":
                  return (n +=
                    1 === e
                      ? "minuta"
                      : 2 === e || 3 === e || 4 === e
                      ? "minute"
                      : "minuta");
                case "h":
                  return t ? "jedan sat" : "jednog sata";
                case "hh":
                  return (n +=
                    1 === e
                      ? "sat"
                      : 2 === e || 3 === e || 4 === e
                      ? "sata"
                      : "sati");
                case "dd":
                  return (n += 1 === e ? "dan" : "dana");
                case "MM":
                  return (n +=
                    1 === e
                      ? "mjesec"
                      : 2 === e || 3 === e || 4 === e
                      ? "mjeseca"
                      : "mjeseci");
                case "yy":
                  return (n +=
                    1 === e
                      ? "godina"
                      : 2 === e || 3 === e || 4 === e
                      ? "godine"
                      : "godina");
              }
            }
            e.defineLocale("bs", {
              months: "januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar".split(
                "_"
              ),
              monthsShort: "jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "nedjelja_ponedjeljak_utorak_srijeda_Äetvrtak_petak_subota".split(
                "_"
              ),
              weekdaysShort: "ned._pon._uto._sri._Äet._pet._sub.".split("_"),
              weekdaysMin: "ne_po_ut_sr_Äe_pe_su".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
              },
              calendar: {
                sameDay: "[danas u] LT",
                nextDay: "[sutra u] LT",
                nextWeek: function () {
                  switch (this.day()) {
                    case 0:
                      return "[u] [nedjelju] [u] LT";
                    case 3:
                      return "[u] [srijedu] [u] LT";
                    case 6:
                      return "[u] [subotu] [u] LT";
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                      return "[u] dddd [u] LT";
                  }
                },
                lastDay: "[juÄer u] LT",
                lastWeek: function () {
                  switch (this.day()) {
                    case 0:
                    case 3:
                      return "[proÅ¡lu] dddd [u] LT";
                    case 6:
                      return "[proÅ¡le] [subote] [u] LT";
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                      return "[proÅ¡li] dddd [u] LT";
                  }
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "za %s",
                past: "prije %s",
                s: "par sekundi",
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: "dan",
                dd: t,
                M: "mjesec",
                MM: t,
                y: "godinu",
                yy: t
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        2468: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("ca", {
              months: {
                standalone: "gener_febrer_marÃ§_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre".split(
                  "_"
                ),
                format: "de gener_de febrer_de marÃ§_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split(
                  "_"
                ),
                isFormat: /D[oD]?(\s)+MMMM/
              },
              monthsShort: "gen._febr._marÃ§_abr._maig_juny_jul._ag._set._oct._nov._des.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte".split(
                "_"
              ),
              weekdaysShort: "dg._dl._dt._dc._dj._dv._ds.".split("_"),
              weekdaysMin: "dg_dl_dt_dc_dj_dv_ds".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM [de] YYYY",
                ll: "D MMM YYYY",
                LLL: "D MMMM [de] YYYY [a les] H:mm",
                lll: "D MMM YYYY, H:mm",
                LLLL: "dddd D MMMM [de] YYYY [a les] H:mm",
                llll: "ddd D MMM YYYY, H:mm"
              },
              calendar: {
                sameDay: function () {
                  return (
                    "[avui a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                  );
                },
                nextDay: function () {
                  return (
                    "[demÃ  a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                  );
                },
                nextWeek: function () {
                  return (
                    "dddd [a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                  );
                },
                lastDay: function () {
                  return (
                    "[ahir a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                  );
                },
                lastWeek: function () {
                  return (
                    "[el] dddd [passat a " +
                    (1 !== this.hours() ? "les" : "la") +
                    "] LT"
                  );
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "d'aquÃ­ %s",
                past: "fa %s",
                s: "uns segons",
                ss: "%d segons",
                m: "un minut",
                mm: "%d minuts",
                h: "una hora",
                hh: "%d hores",
                d: "un dia",
                dd: "%d dies",
                M: "un mes",
                MM: "%d mesos",
                y: "un any",
                yy: "%d anys"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|Ã¨|a)/,
              ordinal: function (e, t) {
                var a =
                  1 === e
                    ? "r"
                    : 2 === e
                    ? "n"
                    : 3 === e
                    ? "r"
                    : 4 === e
                    ? "t"
                    : "Ã¨";
                return ("w" !== t && "W" !== t) || (a = "a"), e + a;
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        5822: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = "leden_Ãºnor_bÅ™ezen_duben_kvÄ›ten_Äerven_Äervenec_srpen_zÃ¡Å™Ã­_Å™Ã­jen_listopad_prosinec".split(
                "_"
              ),
              a = "led_Ãºno_bÅ™e_dub_kvÄ›_Ävn_Ävc_srp_zÃ¡Å™_Å™Ã­j_lis_pro".split(
                "_"
              ),
              n = [
                /^led/i,
                /^Ãºno/i,
                /^bÅ™e/i,
                /^dub/i,
                /^kvÄ›/i,
                /^(Ävn|Äerven$|Äervna)/i,
                /^(Ävc|Äervenec|Äervence)/i,
                /^srp/i,
                /^zÃ¡Å™/i,
                /^Å™Ã­j/i,
                /^lis/i,
                /^pro/i
              ],
              i = /^(leden|Ãºnor|bÅ™ezen|duben|kvÄ›ten|Äervenec|Äervence|Äerven|Äervna|srpen|zÃ¡Å™Ã­|Å™Ã­jen|listopad|prosinec|led|Ãºno|bÅ™e|dub|kvÄ›|Ävn|Ävc|srp|zÃ¡Å™|Å™Ã­j|lis|pro)/i;
            function r(e) {
              return e > 1 && e < 5 && 1 != ~~(e / 10);
            }
            function s(e, t, a, n) {
              var i = e + " ";
              switch (a) {
                case "s":
                  return t || n ? "pÃ¡r sekund" : "pÃ¡r sekundami";
                case "ss":
                  return t || n
                    ? i + (r(e) ? "sekundy" : "sekund")
                    : i + "sekundami";
                case "m":
                  return t ? "minuta" : n ? "minutu" : "minutou";
                case "mm":
                  return t || n
                    ? i + (r(e) ? "minuty" : "minut")
                    : i + "minutami";
                case "h":
                  return t ? "hodina" : n ? "hodinu" : "hodinou";
                case "hh":
                  return t || n
                    ? i + (r(e) ? "hodiny" : "hodin")
                    : i + "hodinami";
                case "d":
                  return t || n ? "den" : "dnem";
                case "dd":
                  return t || n ? i + (r(e) ? "dny" : "dnÃ­") : i + "dny";
                case "M":
                  return t || n ? "mÄ›sÃ­c" : "mÄ›sÃ­cem";
                case "MM":
                  return t || n
                    ? i + (r(e) ? "mÄ›sÃ­ce" : "mÄ›sÃ­cÅ¯")
                    : i + "mÄ›sÃ­ci";
                case "y":
                  return t || n ? "rok" : "rokem";
                case "yy":
                  return t || n ? i + (r(e) ? "roky" : "let") : i + "lety";
              }
            }
            e.defineLocale("cs", {
              months: t,
              monthsShort: a,
              monthsRegex: i,
              monthsShortRegex: i,
              monthsStrictRegex: /^(leden|ledna|Ãºnora|Ãºnor|bÅ™ezen|bÅ™ezna|duben|dubna|kvÄ›ten|kvÄ›tna|Äervenec|Äervence|Äerven|Äervna|srpen|srpna|zÃ¡Å™Ã­|Å™Ã­jen|Å™Ã­jna|listopadu|listopad|prosinec|prosince)/i,
              monthsShortStrictRegex: /^(led|Ãºno|bÅ™e|dub|kvÄ›|Ävn|Ävc|srp|zÃ¡Å™|Å™Ã­j|lis|pro)/i,
              monthsParse: n,
              longMonthsParse: n,
              shortMonthsParse: n,
              weekdays: "nedÄ›le_pondÄ›lÃ­_ÃºterÃ½_stÅ™eda_Ätvrtek_pÃ¡tek_sobota".split(
                "_"
              ),
              weekdaysShort: "ne_po_Ãºt_st_Ät_pÃ¡_so".split("_"),
              weekdaysMin: "ne_po_Ãºt_st_Ät_pÃ¡_so".split("_"),
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd D. MMMM YYYY H:mm",
                l: "D. M. YYYY"
              },
              calendar: {
                sameDay: "[dnes v] LT",
                nextDay: "[zÃ­tra v] LT",
                nextWeek: function () {
                  switch (this.day()) {
                    case 0:
                      return "[v nedÄ›li v] LT";
                    case 1:
                    case 2:
                      return "[v] dddd [v] LT";
                    case 3:
                      return "[ve stÅ™edu v] LT";
                    case 4:
                      return "[ve Ätvrtek v] LT";
                    case 5:
                      return "[v pÃ¡tek v] LT";
                    case 6:
                      return "[v sobotu v] LT";
                  }
                },
                lastDay: "[vÄera v] LT",
                lastWeek: function () {
                  switch (this.day()) {
                    case 0:
                      return "[minulou nedÄ›li v] LT";
                    case 1:
                    case 2:
                      return "[minulÃ©] dddd [v] LT";
                    case 3:
                      return "[minulou stÅ™edu v] LT";
                    case 4:
                    case 5:
                      return "[minulÃ½] dddd [v] LT";
                    case 6:
                      return "[minulou sobotu v] LT";
                  }
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "za %s",
                past: "pÅ™ed %s",
                s,
                ss: s,
                m: s,
                mm: s,
                h: s,
                hh: s,
                d: s,
                dd: s,
                M: s,
                MM: s,
                y: s,
                yy: s
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        9794: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("cv", {
              months: "ÐºÓ‘Ñ€Ð»Ð°Ñ‡_Ð½Ð°Ñ€Ó‘Ñ_Ð¿ÑƒÑˆ_Ð°ÐºÐ°_Ð¼Ð°Ð¹_Ò«Ó—Ñ€Ñ‚Ð¼Ðµ_ÑƒÑ‚Ó‘_Ò«ÑƒÑ€Ð»Ð°_Ð°Ð²Ó‘Ð½_ÑŽÐ¿Ð°_Ñ‡Ó³Ðº_Ñ€Ð°ÑˆÑ‚Ð°Ð²".split(
                "_"
              ),
              monthsShort: "ÐºÓ‘Ñ€_Ð½Ð°Ñ€_Ð¿ÑƒÑˆ_Ð°ÐºÐ°_Ð¼Ð°Ð¹_Ò«Ó—Ñ€_ÑƒÑ‚Ó‘_Ò«ÑƒÑ€_Ð°Ð²Ð½_ÑŽÐ¿Ð°_Ñ‡Ó³Ðº_Ñ€Ð°Ñˆ".split(
                "_"
              ),
              weekdays: "Ð²Ñ‹Ñ€ÑÐ°Ñ€Ð½Ð¸ÐºÑƒÐ½_Ñ‚ÑƒÐ½Ñ‚Ð¸ÐºÑƒÐ½_Ñ‹Ñ‚Ð»Ð°Ñ€Ð¸ÐºÑƒÐ½_ÑŽÐ½ÐºÑƒÐ½_ÐºÓ—Ò«Ð½ÐµÑ€Ð½Ð¸ÐºÑƒÐ½_ÑÑ€Ð½ÐµÐºÑƒÐ½_ÑˆÓ‘Ð¼Ð°Ñ‚ÐºÑƒÐ½".split(
                "_"
              ),
              weekdaysShort: "Ð²Ñ‹Ñ€_Ñ‚ÑƒÐ½_Ñ‹Ñ‚Ð»_ÑŽÐ½_ÐºÓ—Ò«_ÑÑ€Ð½_ÑˆÓ‘Ð¼".split(
                "_"
              ),
              weekdaysMin: "Ð²Ñ€_Ñ‚Ð½_Ñ‹Ñ‚_ÑŽÐ½_ÐºÒ«_ÑÑ€_ÑˆÐ¼".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD-MM-YYYY",
                LL: "YYYY [Ò«ÑƒÐ»Ñ…Ð¸] MMMM [ÑƒÐ¹Ó‘Ñ…Ó—Ð½] D[-Ð¼Ó—ÑˆÓ—]",
                LLL: "YYYY [Ò«ÑƒÐ»Ñ…Ð¸] MMMM [ÑƒÐ¹Ó‘Ñ…Ó—Ð½] D[-Ð¼Ó—ÑˆÓ—], HH:mm",
                LLLL:
                  "dddd, YYYY [Ò«ÑƒÐ»Ñ…Ð¸] MMMM [ÑƒÐ¹Ó‘Ñ…Ó—Ð½] D[-Ð¼Ó—ÑˆÓ—], HH:mm"
              },
              calendar: {
                sameDay: "[ÐŸÐ°ÑÐ½] LT [ÑÐµÑ…ÐµÑ‚Ñ€Ðµ]",
                nextDay: "[Ð«Ñ€Ð°Ð½] LT [ÑÐµÑ…ÐµÑ‚Ñ€Ðµ]",
                lastDay: "[Ó–Ð½ÐµÑ€] LT [ÑÐµÑ…ÐµÑ‚Ñ€Ðµ]",
                nextWeek: "[ÒªÐ¸Ñ‚ÐµÑ] dddd LT [ÑÐµÑ…ÐµÑ‚Ñ€Ðµ]",
                lastWeek: "[Ð˜Ñ€Ñ‚Ð½Ó—] dddd LT [ÑÐµÑ…ÐµÑ‚Ñ€Ðµ]",
                sameElse: "L"
              },
              relativeTime: {
                future: function (e) {
                  return (
                    e +
                    (/ÑÐµÑ…ÐµÑ‚$/i.exec(e)
                      ? "Ñ€ÐµÐ½"
                      : /Ò«ÑƒÐ»$/i.exec(e)
                      ? "Ñ‚Ð°Ð½"
                      : "Ñ€Ð°Ð½")
                  );
                },
                past: "%s ÐºÐ°ÑÐ»Ð»Ð°",
                s: "Ð¿Ó—Ñ€-Ð¸Ðº Ò«ÐµÐºÐºÑƒÐ½Ñ‚",
                ss: "%d Ò«ÐµÐºÐºÑƒÐ½Ñ‚",
                m: "Ð¿Ó—Ñ€ Ð¼Ð¸Ð½ÑƒÑ‚",
                mm: "%d Ð¼Ð¸Ð½ÑƒÑ‚",
                h: "Ð¿Ó—Ñ€ ÑÐµÑ…ÐµÑ‚",
                hh: "%d ÑÐµÑ…ÐµÑ‚",
                d: "Ð¿Ó—Ñ€ ÐºÑƒÐ½",
                dd: "%d ÐºÑƒÐ½",
                M: "Ð¿Ó—Ñ€ ÑƒÐ¹Ó‘Ñ…",
                MM: "%d ÑƒÐ¹Ó‘Ñ…",
                y: "Ð¿Ó—Ñ€ Ò«ÑƒÐ»",
                yy: "%d Ò«ÑƒÐ»"
              },
              dayOfMonthOrdinalParse: /\d{1,2}-Ð¼Ó—Ñˆ/,
              ordinal: "%d-Ð¼Ó—Ñˆ",
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        7373: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("cy", {
              months: "Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr".split(
                "_"
              ),
              monthsShort: "Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag".split(
                "_"
              ),
              weekdays: "Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn".split(
                "_"
              ),
              weekdaysShort: "Sul_Llun_Maw_Mer_Iau_Gwe_Sad".split("_"),
              weekdaysMin: "Su_Ll_Ma_Me_Ia_Gw_Sa".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Heddiw am] LT",
                nextDay: "[Yfory am] LT",
                nextWeek: "dddd [am] LT",
                lastDay: "[Ddoe am] LT",
                lastWeek: "dddd [diwethaf am] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "mewn %s",
                past: "%s yn Ã´l",
                s: "ychydig eiliadau",
                ss: "%d eiliad",
                m: "munud",
                mm: "%d munud",
                h: "awr",
                hh: "%d awr",
                d: "diwrnod",
                dd: "%d diwrnod",
                M: "mis",
                MM: "%d mis",
                y: "blwyddyn",
                yy: "%d flynedd"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
              ordinal: function (e) {
                var t = "";
                return (
                  e > 20
                    ? (t =
                        40 === e || 50 === e || 60 === e || 80 === e || 100 === e
                          ? "fed"
                          : "ain")
                    : e > 0 &&
                      (t = [
                        "",
                        "af",
                        "il",
                        "ydd",
                        "ydd",
                        "ed",
                        "ed",
                        "ed",
                        "fed",
                        "fed",
                        "fed",
                        "eg",
                        "fed",
                        "eg",
                        "eg",
                        "fed",
                        "eg",
                        "eg",
                        "fed",
                        "eg",
                        "fed"
                      ][e]),
                  e + t
                );
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        4780: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("da", {
              months: "januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december".split(
                "_"
              ),
              monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split(
                "_"
              ),
              weekdays: "sÃ¸ndag_mandag_tirsdag_onsdag_torsdag_fredag_lÃ¸rdag".split(
                "_"
              ),
              weekdaysShort: "sÃ¸n_man_tir_ons_tor_fre_lÃ¸r".split("_"),
              weekdaysMin: "sÃ¸_ma_ti_on_to_fr_lÃ¸".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY HH:mm",
                LLLL: "dddd [d.] D. MMMM YYYY [kl.] HH:mm"
              },
              calendar: {
                sameDay: "[i dag kl.] LT",
                nextDay: "[i morgen kl.] LT",
                nextWeek: "pÃ¥ dddd [kl.] LT",
                lastDay: "[i gÃ¥r kl.] LT",
                lastWeek: "[i] dddd[s kl.] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "om %s",
                past: "%s siden",
                s: "fÃ¥ sekunder",
                ss: "%d sekunder",
                m: "et minut",
                mm: "%d minutter",
                h: "en time",
                hh: "%d timer",
                d: "en dag",
                dd: "%d dage",
                M: "en mÃ¥ned",
                MM: "%d mÃ¥neder",
                y: "et Ã¥r",
                yy: "%d Ã¥r"
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        4001: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t, a, n) {
              var i = {
                m: ["eine Minute", "einer Minute"],
                h: ["eine Stunde", "einer Stunde"],
                d: ["ein Tag", "einem Tag"],
                dd: [e + " Tage", e + " Tagen"],
                w: ["eine Woche", "einer Woche"],
                M: ["ein Monat", "einem Monat"],
                MM: [e + " Monate", e + " Monaten"],
                y: ["ein Jahr", "einem Jahr"],
                yy: [e + " Jahre", e + " Jahren"]
              };
              return t ? i[a][0] : i[a][1];
            }
            e.defineLocale("de-at", {
              months: "JÃ¤nner_Februar_MÃ¤rz_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split(
                "_"
              ),
              monthsShort: "JÃ¤n._Feb._MÃ¤rz_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split(
                "_"
              ),
              weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
              weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY HH:mm",
                LLLL: "dddd, D. MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[heute um] LT [Uhr]",
                sameElse: "L",
                nextDay: "[morgen um] LT [Uhr]",
                nextWeek: "dddd [um] LT [Uhr]",
                lastDay: "[gestern um] LT [Uhr]",
                lastWeek: "[letzten] dddd [um] LT [Uhr]"
              },
              relativeTime: {
                future: "in %s",
                past: "vor %s",
                s: "ein paar Sekunden",
                ss: "%d Sekunden",
                m: t,
                mm: "%d Minuten",
                h: t,
                hh: "%d Stunden",
                d: t,
                dd: t,
                w: t,
                ww: "%d Wochen",
                M: t,
                MM: t,
                y: t,
                yy: t
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        894: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t, a, n) {
              var i = {
                m: ["eine Minute", "einer Minute"],
                h: ["eine Stunde", "einer Stunde"],
                d: ["ein Tag", "einem Tag"],
                dd: [e + " Tage", e + " Tagen"],
                w: ["eine Woche", "einer Woche"],
                M: ["ein Monat", "einem Monat"],
                MM: [e + " Monate", e + " Monaten"],
                y: ["ein Jahr", "einem Jahr"],
                yy: [e + " Jahre", e + " Jahren"]
              };
              return t ? i[a][0] : i[a][1];
            }
            e.defineLocale("de-ch", {
              months: "Januar_Februar_MÃ¤rz_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split(
                "_"
              ),
              monthsShort: "Jan._Feb._MÃ¤rz_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split(
                "_"
              ),
              weekdaysShort: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
              weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY HH:mm",
                LLLL: "dddd, D. MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[heute um] LT [Uhr]",
                sameElse: "L",
                nextDay: "[morgen um] LT [Uhr]",
                nextWeek: "dddd [um] LT [Uhr]",
                lastDay: "[gestern um] LT [Uhr]",
                lastWeek: "[letzten] dddd [um] LT [Uhr]"
              },
              relativeTime: {
                future: "in %s",
                past: "vor %s",
                s: "ein paar Sekunden",
                ss: "%d Sekunden",
                m: t,
                mm: "%d Minuten",
                h: t,
                hh: "%d Stunden",
                d: t,
                dd: t,
                w: t,
                ww: "%d Wochen",
                M: t,
                MM: t,
                y: t,
                yy: t
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        9740: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t, a, n) {
              var i = {
                m: ["eine Minute", "einer Minute"],
                h: ["eine Stunde", "einer Stunde"],
                d: ["ein Tag", "einem Tag"],
                dd: [e + " Tage", e + " Tagen"],
                w: ["eine Woche", "einer Woche"],
                M: ["ein Monat", "einem Monat"],
                MM: [e + " Monate", e + " Monaten"],
                y: ["ein Jahr", "einem Jahr"],
                yy: [e + " Jahre", e + " Jahren"]
              };
              return t ? i[a][0] : i[a][1];
            }
            e.defineLocale("de", {
              months: "Januar_Februar_MÃ¤rz_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split(
                "_"
              ),
              monthsShort: "Jan._Feb._MÃ¤rz_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split(
                "_"
              ),
              weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
              weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY HH:mm",
                LLLL: "dddd, D. MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[heute um] LT [Uhr]",
                sameElse: "L",
                nextDay: "[morgen um] LT [Uhr]",
                nextWeek: "dddd [um] LT [Uhr]",
                lastDay: "[gestern um] LT [Uhr]",
                lastWeek: "[letzten] dddd [um] LT [Uhr]"
              },
              relativeTime: {
                future: "in %s",
                past: "vor %s",
                s: "ein paar Sekunden",
                ss: "%d Sekunden",
                m: t,
                mm: "%d Minuten",
                h: t,
                hh: "%d Stunden",
                d: t,
                dd: t,
                w: t,
                ww: "%d Wochen",
                M: t,
                MM: t,
                y: t,
                yy: t
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        5300: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = [
                "Þ–Þ¬Þ‚ÞªÞ‡Þ¦ÞƒÞ©",
                "ÞŠÞ¬Þ„Þ°ÞƒÞªÞ‡Þ¦ÞƒÞ©",
                "Þ‰Þ§ÞƒÞ¨Þ—Þª",
                "Þ‡Þ­Þ•Þ°ÞƒÞ©ÞÞª",
                "Þ‰Þ­",
                "Þ–Þ«Þ‚Þ°",
                "Þ–ÞªÞÞ¦Þ‡Þ¨",
                "Þ‡Þ¯ÞŽÞ¦ÞÞ°Þ“Þª",
                "ÞÞ¬Þ•Þ°Þ“Þ¬Þ‰Þ°Þ„Þ¦ÞƒÞª",
                "Þ‡Þ®Þ†Þ°Þ“Þ¯Þ„Þ¦ÞƒÞª",
                "Þ‚Þ®ÞˆÞ¬Þ‰Þ°Þ„Þ¦ÞƒÞª",
                "Þ‘Þ¨ÞÞ¬Þ‰Þ°Þ„Þ¦ÞƒÞª"
              ],
              a = [
                "Þ‡Þ§Þ‹Þ¨Þ‡Þ°ÞŒÞ¦",
                "Þ€Þ¯Þ‰Þ¦",
                "Þ‡Þ¦Þ‚Þ°ÞŽÞ§ÞƒÞ¦",
                "Þ„ÞªÞ‹Þ¦",
                "Þ„ÞªÞƒÞ§ÞÞ°ÞŠÞ¦ÞŒÞ¨",
                "Þ€ÞªÞ†ÞªÞƒÞª",
                "Þ€Þ®Þ‚Þ¨Þ€Þ¨ÞƒÞª"
              ];
            e.defineLocale("dv", {
              months: t,
              monthsShort: t,
              weekdays: a,
              weekdaysShort: a,
              weekdaysMin: "Þ‡Þ§Þ‹Þ¨_Þ€Þ¯Þ‰Þ¦_Þ‡Þ¦Þ‚Þ°_Þ„ÞªÞ‹Þ¦_Þ„ÞªÞƒÞ§_Þ€ÞªÞ†Þª_Þ€Þ®Þ‚Þ¨".split(
                "_"
              ),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "D/M/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              meridiemParse: /Þ‰Þ†|Þ‰ÞŠ/,
              isPM: function (e) {
                return "Þ‰ÞŠ" === e;
              },
              meridiem: function (e, t, a) {
                return e < 12 ? "Þ‰Þ†" : "Þ‰ÞŠ";
              },
              calendar: {
                sameDay: "[Þ‰Þ¨Þ‡Þ¦Þ‹Þª] LT",
                nextDay: "[Þ‰Þ§Þ‹Þ¦Þ‰Þ§] LT",
                nextWeek: "dddd LT",
                lastDay: "[Þ‡Þ¨Þ‡Þ°Þ”Þ¬] LT",
                lastWeek: "[ÞŠÞ§Þ‡Þ¨ÞŒÞªÞˆÞ¨] dddd LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "ÞŒÞ¬ÞƒÞ­ÞŽÞ¦Þ‡Þ¨ %s",
                past: "Þ†ÞªÞƒÞ¨Þ‚Þ° %s",
                s: "ÞÞ¨Þ†ÞªÞ‚Þ°ÞŒÞªÞ†Þ®Þ…Þ¬Þ‡Þ°",
                ss: "d% ÞÞ¨Þ†ÞªÞ‚Þ°ÞŒÞª",
                m: "Þ‰Þ¨Þ‚Þ¨Þ“Þ¬Þ‡Þ°",
                mm: "Þ‰Þ¨Þ‚Þ¨Þ“Þª %d",
                h: "ÞŽÞ¦Þ‘Þ¨Þ‡Þ¨ÞƒÞ¬Þ‡Þ°",
                hh: "ÞŽÞ¦Þ‘Þ¨Þ‡Þ¨ÞƒÞª %d",
                d: "Þ‹ÞªÞˆÞ¦Þ€Þ¬Þ‡Þ°",
                dd: "Þ‹ÞªÞˆÞ¦ÞÞ° %d",
                M: "Þ‰Þ¦Þ€Þ¬Þ‡Þ°",
                MM: "Þ‰Þ¦ÞÞ° %d",
                y: "Þ‡Þ¦Þ€Þ¦ÞƒÞ¬Þ‡Þ°",
                yy: "Þ‡Þ¦Þ€Þ¦ÞƒÞª %d"
              },
              preparse: function (e) {
                return e.replace(/ØŒ/g, ",");
              },
              postformat: function (e) {
                return e.replace(/,/g, "ØŒ");
              },
              week: { dow: 7, doy: 12 }
            });
          })(a(381));
        },
        837: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e) {
              return (
                ("undefined" != typeof Function && e instanceof Function) ||
                "[object Function]" === Object.prototype.toString.call(e)
              );
            }
            e.defineLocale("el", {
              monthsNominativeEl: "Î™Î±Î½Î¿Ï…Î¬ÏÎ¹Î¿Ï‚_Î¦ÎµÎ²ÏÎ¿Ï…Î¬ÏÎ¹Î¿Ï‚_ÎœÎ¬ÏÏ„Î¹Î¿Ï‚_Î‘Ï€ÏÎ¯Î»Î¹Î¿Ï‚_ÎœÎ¬Î¹Î¿Ï‚_Î™Î¿ÏÎ½Î¹Î¿Ï‚_Î™Î¿ÏÎ»Î¹Î¿Ï‚_Î‘ÏÎ³Î¿Ï…ÏƒÏ„Î¿Ï‚_Î£ÎµÏ€Ï„Î­Î¼Î²ÏÎ¹Î¿Ï‚_ÎŸÎºÏ„ÏŽÎ²ÏÎ¹Î¿Ï‚_ÎÎ¿Î­Î¼Î²ÏÎ¹Î¿Ï‚_Î”ÎµÎºÎ­Î¼Î²ÏÎ¹Î¿Ï‚".split(
                "_"
              ),
              monthsGenitiveEl: "Î™Î±Î½Î¿Ï…Î±ÏÎ¯Î¿Ï…_Î¦ÎµÎ²ÏÎ¿Ï…Î±ÏÎ¯Î¿Ï…_ÎœÎ±ÏÏ„Î¯Î¿Ï…_Î‘Ï€ÏÎ¹Î»Î¯Î¿Ï…_ÎœÎ±ÎÎ¿Ï…_Î™Î¿Ï…Î½Î¯Î¿Ï…_Î™Î¿Ï…Î»Î¯Î¿Ï…_Î‘Ï…Î³Î¿ÏÏƒÏ„Î¿Ï…_Î£ÎµÏ€Ï„ÎµÎ¼Î²ÏÎ¯Î¿Ï…_ÎŸÎºÏ„Ï‰Î²ÏÎ¯Î¿Ï…_ÎÎ¿ÎµÎ¼Î²ÏÎ¯Î¿Ï…_Î”ÎµÎºÎµÎ¼Î²ÏÎ¯Î¿Ï…".split(
                "_"
              ),
              months: function (e, t) {
                return e
                  ? "string" == typeof t &&
                    /D/.test(t.substring(0, t.indexOf("MMMM")))
                    ? this._monthsGenitiveEl[e.month()]
                    : this._monthsNominativeEl[e.month()]
                  : this._monthsNominativeEl;
              },
              monthsShort: "Î™Î±Î½_Î¦ÎµÎ²_ÎœÎ±Ï_Î‘Ï€Ï_ÎœÎ±ÏŠ_Î™Î¿Ï…Î½_Î™Î¿Ï…Î»_Î‘Ï…Î³_Î£ÎµÏ€_ÎŸÎºÏ„_ÎÎ¿Îµ_Î”ÎµÎº".split(
                "_"
              ),
              weekdays: "ÎšÏ…ÏÎ¹Î±ÎºÎ®_Î”ÎµÏ…Ï„Î­ÏÎ±_Î¤ÏÎ¯Ï„Î·_Î¤ÎµÏ„Î¬ÏÏ„Î·_Î Î­Î¼Ï€Ï„Î·_Î Î±ÏÎ±ÏƒÎºÎµÏ…Î®_Î£Î¬Î²Î²Î±Ï„Î¿".split(
                "_"
              ),
              weekdaysShort: "ÎšÏ…Ï_Î”ÎµÏ…_Î¤ÏÎ¹_Î¤ÎµÏ„_Î ÎµÎ¼_Î Î±Ï_Î£Î±Î²".split(
                "_"
              ),
              weekdaysMin: "ÎšÏ…_Î”Îµ_Î¤Ï_Î¤Îµ_Î Îµ_Î Î±_Î£Î±".split("_"),
              meridiem: function (e, t, a) {
                return e > 11 ? (a ? "Î¼Î¼" : "ÎœÎœ") : a ? "Ï€Î¼" : "Î Îœ";
              },
              isPM: function (e) {
                return "Î¼" === (e + "").toLowerCase()[0];
              },
              meridiemParse: /[Î Îœ]\.?Îœ?\.?/i,
              longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY h:mm A",
                LLLL: "dddd, D MMMM YYYY h:mm A"
              },
              calendarEl: {
                sameDay: "[Î£Î®Î¼ÎµÏÎ± {}] LT",
                nextDay: "[Î‘ÏÏÎ¹Î¿ {}] LT",
                nextWeek: "dddd [{}] LT",
                lastDay: "[Î§Î¸ÎµÏ‚ {}] LT",
                lastWeek: function () {
                  switch (this.day()) {
                    case 6:
                      return "[Ï„Î¿ Ï€ÏÎ¿Î·Î³Î¿ÏÎ¼ÎµÎ½Î¿] dddd [{}] LT";
                    default:
                      return "[Ï„Î·Î½ Ï€ÏÎ¿Î·Î³Î¿ÏÎ¼ÎµÎ½Î·] dddd [{}] LT";
                  }
                },
                sameElse: "L"
              },
              calendar: function (e, a) {
                var n = this._calendarEl[e],
                  i = a && a.hours();
                return (
                  t(n) && (n = n.apply(a)),
                  n.replace("{}", i % 12 == 1 ? "ÏƒÏ„Î·" : "ÏƒÏ„Î¹Ï‚")
                );
              },
              relativeTime: {
                future: "ÏƒÎµ %s",
                past: "%s Ï€ÏÎ¹Î½",
                s: "Î»Î¯Î³Î± Î´ÎµÏ…Ï„ÎµÏÏŒÎ»ÎµÏ€Ï„Î±",
                ss: "%d Î´ÎµÏ…Ï„ÎµÏÏŒÎ»ÎµÏ€Ï„Î±",
                m: "Î­Î½Î± Î»ÎµÏ€Ï„ÏŒ",
                mm: "%d Î»ÎµÏ€Ï„Î¬",
                h: "Î¼Î¯Î± ÏŽÏÎ±",
                hh: "%d ÏŽÏÎµÏ‚",
                d: "Î¼Î¯Î± Î¼Î­ÏÎ±",
                dd: "%d Î¼Î­ÏÎµÏ‚",
                M: "Î­Î½Î±Ï‚ Î¼Î®Î½Î±Ï‚",
                MM: "%d Î¼Î®Î½ÎµÏ‚",
                y: "Î­Î½Î±Ï‚ Ï‡ÏÏŒÎ½Î¿Ï‚",
                yy: "%d Ï‡ÏÏŒÎ½Î¹Î±"
              },
              dayOfMonthOrdinalParse: /\d{1,2}Î·/,
              ordinal: "%dÎ·",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        8348: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("en-au", {
              months: "January_February_March_April_May_June_July_August_September_October_November_December".split(
                "_"
              ),
              monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
                "_"
              ),
              weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
                "_"
              ),
              weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
              weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
              longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY h:mm A",
                LLLL: "dddd, D MMMM YYYY h:mm A"
              },
              calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                ss: "%d seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
              ordinal: function (e) {
                var t = e % 10;
                return (
                  e +
                  (1 == ~~((e % 100) / 10)
                    ? "th"
                    : 1 === t
                    ? "st"
                    : 2 === t
                    ? "nd"
                    : 3 === t
                    ? "rd"
                    : "th")
                );
              },
              week: { dow: 0, doy: 4 }
            });
          })(a(381));
        },
        7925: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("en-ca", {
              months: "January_February_March_April_May_June_July_August_September_October_November_December".split(
                "_"
              ),
              monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
                "_"
              ),
              weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
                "_"
              ),
              weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
              weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
              longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "YYYY-MM-DD",
                LL: "MMMM D, YYYY",
                LLL: "MMMM D, YYYY h:mm A",
                LLLL: "dddd, MMMM D, YYYY h:mm A"
              },
              calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                ss: "%d seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
              ordinal: function (e) {
                var t = e % 10;
                return (
                  e +
                  (1 == ~~((e % 100) / 10)
                    ? "th"
                    : 1 === t
                    ? "st"
                    : 2 === t
                    ? "nd"
                    : 3 === t
                    ? "rd"
                    : "th")
                );
              }
            });
          })(a(381));
        },
        2243: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("en-gb", {
              months: "January_February_March_April_May_June_July_August_September_October_November_December".split(
                "_"
              ),
              monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
                "_"
              ),
              weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
                "_"
              ),
              weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
              weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                ss: "%d seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
              ordinal: function (e) {
                var t = e % 10;
                return (
                  e +
                  (1 == ~~((e % 100) / 10)
                    ? "th"
                    : 1 === t
                    ? "st"
                    : 2 === t
                    ? "nd"
                    : 3 === t
                    ? "rd"
                    : "th")
                );
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        6436: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("en-ie", {
              months: "January_February_March_April_May_June_July_August_September_October_November_December".split(
                "_"
              ),
              monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
                "_"
              ),
              weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
                "_"
              ),
              weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
              weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                ss: "%d seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
              ordinal: function (e) {
                var t = e % 10;
                return (
                  e +
                  (1 == ~~((e % 100) / 10)
                    ? "th"
                    : 1 === t
                    ? "st"
                    : 2 === t
                    ? "nd"
                    : 3 === t
                    ? "rd"
                    : "th")
                );
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        7207: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("en-il", {
              months: "January_February_March_April_May_June_July_August_September_October_November_December".split(
                "_"
              ),
              monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
                "_"
              ),
              weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
                "_"
              ),
              weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
              weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                ss: "%d seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
              ordinal: function (e) {
                var t = e % 10;
                return (
                  e +
                  (1 == ~~((e % 100) / 10)
                    ? "th"
                    : 1 === t
                    ? "st"
                    : 2 === t
                    ? "nd"
                    : 3 === t
                    ? "rd"
                    : "th")
                );
              }
            });
          })(a(381));
        },
        4175: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("en-in", {
              months: "January_February_March_April_May_June_July_August_September_October_November_December".split(
                "_"
              ),
              monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
                "_"
              ),
              weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
                "_"
              ),
              weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
              weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
              longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY h:mm A",
                LLLL: "dddd, D MMMM YYYY h:mm A"
              },
              calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                ss: "%d seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
              ordinal: function (e) {
                var t = e % 10;
                return (
                  e +
                  (1 == ~~((e % 100) / 10)
                    ? "th"
                    : 1 === t
                    ? "st"
                    : 2 === t
                    ? "nd"
                    : 3 === t
                    ? "rd"
                    : "th")
                );
              },
              week: { dow: 0, doy: 6 }
            });
          })(a(381));
        },
        6319: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("en-nz", {
              months: "January_February_March_April_May_June_July_August_September_October_November_December".split(
                "_"
              ),
              monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
                "_"
              ),
              weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
                "_"
              ),
              weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
              weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
              longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY h:mm A",
                LLLL: "dddd, D MMMM YYYY h:mm A"
              },
              calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                ss: "%d seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
              ordinal: function (e) {
                var t = e % 10;
                return (
                  e +
                  (1 == ~~((e % 100) / 10)
                    ? "th"
                    : 1 === t
                    ? "st"
                    : 2 === t
                    ? "nd"
                    : 3 === t
                    ? "rd"
                    : "th")
                );
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        1662: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("en-sg", {
              months: "January_February_March_April_May_June_July_August_September_October_November_December".split(
                "_"
              ),
              monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split(
                "_"
              ),
              weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
                "_"
              ),
              weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
              weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                ss: "%d seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
              ordinal: function (e) {
                var t = e % 10;
                return (
                  e +
                  (1 == ~~((e % 100) / 10)
                    ? "th"
                    : 1 === t
                    ? "st"
                    : 2 === t
                    ? "nd"
                    : 3 === t
                    ? "rd"
                    : "th")
                );
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        2915: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("eo", {
              months: "januaro_februaro_marto_aprilo_majo_junio_julio_aÅ­gusto_septembro_oktobro_novembro_decembro".split(
                "_"
              ),
              monthsShort: "jan_feb_mart_apr_maj_jun_jul_aÅ­g_sept_okt_nov_dec".split(
                "_"
              ),
              weekdays: "dimanÄ‰o_lundo_mardo_merkredo_ÄµaÅ­do_vendredo_sabato".split(
                "_"
              ),
              weekdaysShort: "dim_lun_mard_merk_ÄµaÅ­_ven_sab".split("_"),
              weekdaysMin: "di_lu_ma_me_Äµa_ve_sa".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "[la] D[-an de] MMMM, YYYY",
                LLL: "[la] D[-an de] MMMM, YYYY HH:mm",
                LLLL: "dddd[n], [la] D[-an de] MMMM, YYYY HH:mm",
                llll: "ddd, [la] D[-an de] MMM, YYYY HH:mm"
              },
              meridiemParse: /[ap]\.t\.m/i,
              isPM: function (e) {
                return "p" === e.charAt(0).toLowerCase();
              },
              meridiem: function (e, t, a) {
                return e > 11
                  ? a
                    ? "p.t.m."
                    : "P.T.M."
                  : a
                  ? "a.t.m."
                  : "A.T.M.";
              },
              calendar: {
                sameDay: "[HodiaÅ­ je] LT",
                nextDay: "[MorgaÅ­ je] LT",
                nextWeek: "dddd[n je] LT",
                lastDay: "[HieraÅ­ je] LT",
                lastWeek: "[pasintan] dddd[n je] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "post %s",
                past: "antaÅ­ %s",
                s: "kelkaj sekundoj",
                ss: "%d sekundoj",
                m: "unu minuto",
                mm: "%d minutoj",
                h: "unu horo",
                hh: "%d horoj",
                d: "unu tago",
                dd: "%d tagoj",
                M: "unu monato",
                MM: "%d monatoj",
                y: "unu jaro",
                yy: "%d jaroj"
              },
              dayOfMonthOrdinalParse: /\d{1,2}a/,
              ordinal: "%da",
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        5251: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split(
                "_"
              ),
              a = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),
              n = [
                /^ene/i,
                /^feb/i,
                /^mar/i,
                /^abr/i,
                /^may/i,
                /^jun/i,
                /^jul/i,
                /^ago/i,
                /^sep/i,
                /^oct/i,
                /^nov/i,
                /^dic/i
              ],
              i = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
            e.defineLocale("es-do", {
              months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split(
                "_"
              ),
              monthsShort: function (e, n) {
                return e ? (/-MMM-/.test(n) ? a[e.month()] : t[e.month()]) : t;
              },
              monthsRegex: i,
              monthsShortRegex: i,
              monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
              monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
              monthsParse: n,
              longMonthsParse: n,
              shortMonthsParse: n,
              weekdays: "domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado".split(
                "_"
              ),
              weekdaysShort: "dom._lun._mar._miÃ©._jue._vie._sÃ¡b.".split("_"),
              weekdaysMin: "do_lu_ma_mi_ju_vi_sÃ¡".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D [de] MMMM [de] YYYY",
                LLL: "D [de] MMMM [de] YYYY h:mm A",
                LLLL: "dddd, D [de] MMMM [de] YYYY h:mm A"
              },
              calendar: {
                sameDay: function () {
                  return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                nextDay: function () {
                  return (
                    "[maÃ±ana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                  );
                },
                nextWeek: function () {
                  return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                lastDay: function () {
                  return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                lastWeek: function () {
                  return (
                    "[el] dddd [pasado a la" +
                    (1 !== this.hours() ? "s" : "") +
                    "] LT"
                  );
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "en %s",
                past: "hace %s",
                s: "unos segundos",
                ss: "%d segundos",
                m: "un minuto",
                mm: "%d minutos",
                h: "una hora",
                hh: "%d horas",
                d: "un dÃ­a",
                dd: "%d dÃ­as",
                w: "una semana",
                ww: "%d semanas",
                M: "un mes",
                MM: "%d meses",
                y: "un aÃ±o",
                yy: "%d aÃ±os"
              },
              dayOfMonthOrdinalParse: /\d{1,2}Âº/,
              ordinal: "%dÂº",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        6112: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split(
                "_"
              ),
              a = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),
              n = [
                /^ene/i,
                /^feb/i,
                /^mar/i,
                /^abr/i,
                /^may/i,
                /^jun/i,
                /^jul/i,
                /^ago/i,
                /^sep/i,
                /^oct/i,
                /^nov/i,
                /^dic/i
              ],
              i = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
            e.defineLocale("es-mx", {
              months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split(
                "_"
              ),
              monthsShort: function (e, n) {
                return e ? (/-MMM-/.test(n) ? a[e.month()] : t[e.month()]) : t;
              },
              monthsRegex: i,
              monthsShortRegex: i,
              monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
              monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
              monthsParse: n,
              longMonthsParse: n,
              shortMonthsParse: n,
              weekdays: "domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado".split(
                "_"
              ),
              weekdaysShort: "dom._lun._mar._miÃ©._jue._vie._sÃ¡b.".split("_"),
              weekdaysMin: "do_lu_ma_mi_ju_vi_sÃ¡".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D [de] MMMM [de] YYYY",
                LLL: "D [de] MMMM [de] YYYY H:mm",
                LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
              },
              calendar: {
                sameDay: function () {
                  return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                nextDay: function () {
                  return (
                    "[maÃ±ana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                  );
                },
                nextWeek: function () {
                  return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                lastDay: function () {
                  return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                lastWeek: function () {
                  return (
                    "[el] dddd [pasado a la" +
                    (1 !== this.hours() ? "s" : "") +
                    "] LT"
                  );
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "en %s",
                past: "hace %s",
                s: "unos segundos",
                ss: "%d segundos",
                m: "un minuto",
                mm: "%d minutos",
                h: "una hora",
                hh: "%d horas",
                d: "un dÃ­a",
                dd: "%d dÃ­as",
                w: "una semana",
                ww: "%d semanas",
                M: "un mes",
                MM: "%d meses",
                y: "un aÃ±o",
                yy: "%d aÃ±os"
              },
              dayOfMonthOrdinalParse: /\d{1,2}Âº/,
              ordinal: "%dÂº",
              week: { dow: 0, doy: 4 },
              invalidDate: "Fecha invÃ¡lida"
            });
          })(a(381));
        },
        1146: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split(
                "_"
              ),
              a = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),
              n = [
                /^ene/i,
                /^feb/i,
                /^mar/i,
                /^abr/i,
                /^may/i,
                /^jun/i,
                /^jul/i,
                /^ago/i,
                /^sep/i,
                /^oct/i,
                /^nov/i,
                /^dic/i
              ],
              i = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
            e.defineLocale("es-us", {
              months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split(
                "_"
              ),
              monthsShort: function (e, n) {
                return e ? (/-MMM-/.test(n) ? a[e.month()] : t[e.month()]) : t;
              },
              monthsRegex: i,
              monthsShortRegex: i,
              monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
              monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
              monthsParse: n,
              longMonthsParse: n,
              shortMonthsParse: n,
              weekdays: "domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado".split(
                "_"
              ),
              weekdaysShort: "dom._lun._mar._miÃ©._jue._vie._sÃ¡b.".split("_"),
              weekdaysMin: "do_lu_ma_mi_ju_vi_sÃ¡".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "MM/DD/YYYY",
                LL: "D [de] MMMM [de] YYYY",
                LLL: "D [de] MMMM [de] YYYY h:mm A",
                LLLL: "dddd, D [de] MMMM [de] YYYY h:mm A"
              },
              calendar: {
                sameDay: function () {
                  return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                nextDay: function () {
                  return (
                    "[maÃ±ana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                  );
                },
                nextWeek: function () {
                  return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                lastDay: function () {
                  return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                lastWeek: function () {
                  return (
                    "[el] dddd [pasado a la" +
                    (1 !== this.hours() ? "s" : "") +
                    "] LT"
                  );
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "en %s",
                past: "hace %s",
                s: "unos segundos",
                ss: "%d segundos",
                m: "un minuto",
                mm: "%d minutos",
                h: "una hora",
                hh: "%d horas",
                d: "un dÃ­a",
                dd: "%d dÃ­as",
                w: "una semana",
                ww: "%d semanas",
                M: "un mes",
                MM: "%d meses",
                y: "un aÃ±o",
                yy: "%d aÃ±os"
              },
              dayOfMonthOrdinalParse: /\d{1,2}Âº/,
              ordinal: "%dÂº",
              week: { dow: 0, doy: 6 }
            });
          })(a(381));
        },
        5655: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split(
                "_"
              ),
              a = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"),
              n = [
                /^ene/i,
                /^feb/i,
                /^mar/i,
                /^abr/i,
                /^may/i,
                /^jun/i,
                /^jul/i,
                /^ago/i,
                /^sep/i,
                /^oct/i,
                /^nov/i,
                /^dic/i
              ],
              i = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
            e.defineLocale("es", {
              months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split(
                "_"
              ),
              monthsShort: function (e, n) {
                return e ? (/-MMM-/.test(n) ? a[e.month()] : t[e.month()]) : t;
              },
              monthsRegex: i,
              monthsShortRegex: i,
              monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
              monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
              monthsParse: n,
              longMonthsParse: n,
              shortMonthsParse: n,
              weekdays: "domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado".split(
                "_"
              ),
              weekdaysShort: "dom._lun._mar._miÃ©._jue._vie._sÃ¡b.".split("_"),
              weekdaysMin: "do_lu_ma_mi_ju_vi_sÃ¡".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D [de] MMMM [de] YYYY",
                LLL: "D [de] MMMM [de] YYYY H:mm",
                LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
              },
              calendar: {
                sameDay: function () {
                  return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                nextDay: function () {
                  return (
                    "[maÃ±ana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                  );
                },
                nextWeek: function () {
                  return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                lastDay: function () {
                  return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                lastWeek: function () {
                  return (
                    "[el] dddd [pasado a la" +
                    (1 !== this.hours() ? "s" : "") +
                    "] LT"
                  );
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "en %s",
                past: "hace %s",
                s: "unos segundos",
                ss: "%d segundos",
                m: "un minuto",
                mm: "%d minutos",
                h: "una hora",
                hh: "%d horas",
                d: "un dÃ­a",
                dd: "%d dÃ­as",
                w: "una semana",
                ww: "%d semanas",
                M: "un mes",
                MM: "%d meses",
                y: "un aÃ±o",
                yy: "%d aÃ±os"
              },
              dayOfMonthOrdinalParse: /\d{1,2}Âº/,
              ordinal: "%dÂº",
              week: { dow: 1, doy: 4 },
              invalidDate: "Fecha invÃ¡lida"
            });
          })(a(381));
        },
        5603: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t, a, n) {
              var i = {
                s: ["mÃµne sekundi", "mÃµni sekund", "paar sekundit"],
                ss: [e + "sekundi", e + "sekundit"],
                m: ["Ã¼he minuti", "Ã¼ks minut"],
                mm: [e + " minuti", e + " minutit"],
                h: ["Ã¼he tunni", "tund aega", "Ã¼ks tund"],
                hh: [e + " tunni", e + " tundi"],
                d: ["Ã¼he pÃ¤eva", "Ã¼ks pÃ¤ev"],
                M: ["kuu aja", "kuu aega", "Ã¼ks kuu"],
                MM: [e + " kuu", e + " kuud"],
                y: ["Ã¼he aasta", "aasta", "Ã¼ks aasta"],
                yy: [e + " aasta", e + " aastat"]
              };
              return t ? (i[a][2] ? i[a][2] : i[a][1]) : n ? i[a][0] : i[a][1];
            }
            e.defineLocale("et", {
              months: "jaanuar_veebruar_mÃ¤rts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember".split(
                "_"
              ),
              monthsShort: "jaan_veebr_mÃ¤rts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets".split(
                "_"
              ),
              weekdays: "pÃ¼hapÃ¤ev_esmaspÃ¤ev_teisipÃ¤ev_kolmapÃ¤ev_neljapÃ¤ev_reede_laupÃ¤ev".split(
                "_"
              ),
              weekdaysShort: "P_E_T_K_N_R_L".split("_"),
              weekdaysMin: "P_E_T_K_N_R_L".split("_"),
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
              },
              calendar: {
                sameDay: "[TÃ¤na,] LT",
                nextDay: "[Homme,] LT",
                nextWeek: "[JÃ¤rgmine] dddd LT",
                lastDay: "[Eile,] LT",
                lastWeek: "[Eelmine] dddd LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s pÃ¤rast",
                past: "%s tagasi",
                s: t,
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: "%d pÃ¤eva",
                M: t,
                MM: t,
                y: t,
                yy: t
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        7763: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("eu", {
              months: "urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua".split(
                "_"
              ),
              monthsShort: "urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata".split(
                "_"
              ),
              weekdaysShort: "ig._al._ar._az._og._ol._lr.".split("_"),
              weekdaysMin: "ig_al_ar_az_og_ol_lr".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "YYYY[ko] MMMM[ren] D[a]",
                LLL: "YYYY[ko] MMMM[ren] D[a] HH:mm",
                LLLL: "dddd, YYYY[ko] MMMM[ren] D[a] HH:mm",
                l: "YYYY-M-D",
                ll: "YYYY[ko] MMM D[a]",
                lll: "YYYY[ko] MMM D[a] HH:mm",
                llll: "ddd, YYYY[ko] MMM D[a] HH:mm"
              },
              calendar: {
                sameDay: "[gaur] LT[etan]",
                nextDay: "[bihar] LT[etan]",
                nextWeek: "dddd LT[etan]",
                lastDay: "[atzo] LT[etan]",
                lastWeek: "[aurreko] dddd LT[etan]",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s barru",
                past: "duela %s",
                s: "segundo batzuk",
                ss: "%d segundo",
                m: "minutu bat",
                mm: "%d minutu",
                h: "ordu bat",
                hh: "%d ordu",
                d: "egun bat",
                dd: "%d egun",
                M: "hilabete bat",
                MM: "%d hilabete",
                y: "urte bat",
                yy: "%d urte"
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        6959: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "Û±",
                2: "Û²",
                3: "Û³",
                4: "Û´",
                5: "Ûµ",
                6: "Û¶",
                7: "Û·",
                8: "Û¸",
                9: "Û¹",
                0: "Û°"
              },
              a = {
                "Û±": "1",
                "Û²": "2",
                "Û³": "3",
                "Û´": "4",
                Ûµ: "5",
                "Û¶": "6",
                "Û·": "7",
                "Û¸": "8",
                "Û¹": "9",
                "Û°": "0"
              };
            e.defineLocale("fa", {
              months: "Ú˜Ø§Ù†ÙˆÛŒÙ‡_ÙÙˆØ±ÛŒÙ‡_Ù…Ø§Ø±Ø³_Ø¢ÙˆØ±ÛŒÙ„_Ù…Ù‡_Ú˜ÙˆØ¦Ù†_Ú˜ÙˆØ¦ÛŒÙ‡_Ø§ÙˆØª_Ø³Ù¾ØªØ§Ù…Ø¨Ø±_Ø§Ú©ØªØ¨Ø±_Ù†ÙˆØ§Ù…Ø¨Ø±_Ø¯Ø³Ø§Ù…Ø¨Ø±".split(
                "_"
              ),
              monthsShort: "Ú˜Ø§Ù†ÙˆÛŒÙ‡_ÙÙˆØ±ÛŒÙ‡_Ù…Ø§Ø±Ø³_Ø¢ÙˆØ±ÛŒÙ„_Ù…Ù‡_Ú˜ÙˆØ¦Ù†_Ú˜ÙˆØ¦ÛŒÙ‡_Ø§ÙˆØª_Ø³Ù¾ØªØ§Ù…Ø¨Ø±_Ø§Ú©ØªØ¨Ø±_Ù†ÙˆØ§Ù…Ø¨Ø±_Ø¯Ø³Ø§Ù…Ø¨Ø±".split(
                "_"
              ),
              weekdays: "ÛŒÚ©â€ŒØ´Ù†Ø¨Ù‡_Ø¯ÙˆØ´Ù†Ø¨Ù‡_Ø³Ù‡â€ŒØ´Ù†Ø¨Ù‡_Ú†Ù‡Ø§Ø±Ø´Ù†Ø¨Ù‡_Ù¾Ù†Ø¬â€ŒØ´Ù†Ø¨Ù‡_Ø¬Ù…Ø¹Ù‡_Ø´Ù†Ø¨Ù‡".split(
                "_"
              ),
              weekdaysShort: "ÛŒÚ©â€ŒØ´Ù†Ø¨Ù‡_Ø¯ÙˆØ´Ù†Ø¨Ù‡_Ø³Ù‡â€ŒØ´Ù†Ø¨Ù‡_Ú†Ù‡Ø§Ø±Ø´Ù†Ø¨Ù‡_Ù¾Ù†Ø¬â€ŒØ´Ù†Ø¨Ù‡_Ø¬Ù…Ø¹Ù‡_Ø´Ù†Ø¨Ù‡".split(
                "_"
              ),
              weekdaysMin: "ÛŒ_Ø¯_Ø³_Ú†_Ù¾_Ø¬_Ø´".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              meridiemParse: /Ù‚Ø¨Ù„ Ø§Ø² Ø¸Ù‡Ø±|Ø¨Ø¹Ø¯ Ø§Ø² Ø¸Ù‡Ø±/,
              isPM: function (e) {
                return /Ø¨Ø¹Ø¯ Ø§Ø² Ø¸Ù‡Ø±/.test(e);
              },
              meridiem: function (e, t, a) {
                return e < 12 ? "Ù‚Ø¨Ù„ Ø§Ø² Ø¸Ù‡Ø±" : "Ø¨Ø¹Ø¯ Ø§Ø² Ø¸Ù‡Ø±";
              },
              calendar: {
                sameDay: "[Ø§Ù…Ø±ÙˆØ² Ø³Ø§Ø¹Øª] LT",
                nextDay: "[ÙØ±Ø¯Ø§ Ø³Ø§Ø¹Øª] LT",
                nextWeek: "dddd [Ø³Ø§Ø¹Øª] LT",
                lastDay: "[Ø¯ÛŒØ±ÙˆØ² Ø³Ø§Ø¹Øª] LT",
                lastWeek: "dddd [Ù¾ÛŒØ´] [Ø³Ø§Ø¹Øª] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "Ø¯Ø± %s",
                past: "%s Ù¾ÛŒØ´",
                s: "Ú†Ù†Ø¯ Ø«Ø§Ù†ÛŒÙ‡",
                ss: "%d Ø«Ø§Ù†ÛŒÙ‡",
                m: "ÛŒÚ© Ø¯Ù‚ÛŒÙ‚Ù‡",
                mm: "%d Ø¯Ù‚ÛŒÙ‚Ù‡",
                h: "ÛŒÚ© Ø³Ø§Ø¹Øª",
                hh: "%d Ø³Ø§Ø¹Øª",
                d: "ÛŒÚ© Ø±ÙˆØ²",
                dd: "%d Ø±ÙˆØ²",
                M: "ÛŒÚ© Ù…Ø§Ù‡",
                MM: "%d Ù…Ø§Ù‡",
                y: "ÛŒÚ© Ø³Ø§Ù„",
                yy: "%d Ø³Ø§Ù„"
              },
              preparse: function (e) {
                return e
                  .replace(/[Û°-Û¹]/g, function (e) {
                    return a[e];
                  })
                  .replace(/ØŒ/g, ",");
              },
              postformat: function (e) {
                return e
                  .replace(/\d/g, function (e) {
                    return t[e];
                  })
                  .replace(/,/g, "ØŒ");
              },
              dayOfMonthOrdinalParse: /\d{1,2}Ù…/,
              ordinal: "%dÙ…",
              week: { dow: 6, doy: 12 }
            });
          })(a(381));
        },
        1897: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = "nolla yksi kaksi kolme neljÃ¤ viisi kuusi seitsemÃ¤n kahdeksan yhdeksÃ¤n".split(
                " "
              ),
              a = [
                "nolla",
                "yhden",
                "kahden",
                "kolmen",
                "neljÃ¤n",
                "viiden",
                "kuuden",
                t[7],
                t[8],
                t[9]
              ];
            function n(e, t, a, n) {
              var r = "";
              switch (a) {
                case "s":
                  return n ? "muutaman sekunnin" : "muutama sekunti";
                case "ss":
                  r = n ? "sekunnin" : "sekuntia";
                  break;
                case "m":
                  return n ? "minuutin" : "minuutti";
                case "mm":
                  r = n ? "minuutin" : "minuuttia";
                  break;
                case "h":
                  return n ? "tunnin" : "tunti";
                case "hh":
                  r = n ? "tunnin" : "tuntia";
                  break;
                case "d":
                  return n ? "pÃ¤ivÃ¤n" : "pÃ¤ivÃ¤";
                case "dd":
                  r = n ? "pÃ¤ivÃ¤n" : "pÃ¤ivÃ¤Ã¤";
                  break;
                case "M":
                  return n ? "kuukauden" : "kuukausi";
                case "MM":
                  r = n ? "kuukauden" : "kuukautta";
                  break;
                case "y":
                  return n ? "vuoden" : "vuosi";
                case "yy":
                  r = n ? "vuoden" : "vuotta";
              }
              return (r = i(e, n) + " " + r);
            }
            function i(e, n) {
              return e < 10 ? (n ? a[e] : t[e]) : e;
            }
            e.defineLocale("fi", {
              months: "tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesÃ¤kuu_heinÃ¤kuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu".split(
                "_"
              ),
              monthsShort: "tammi_helmi_maalis_huhti_touko_kesÃ¤_heinÃ¤_elo_syys_loka_marras_joulu".split(
                "_"
              ),
              weekdays: "sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai".split(
                "_"
              ),
              weekdaysShort: "su_ma_ti_ke_to_pe_la".split("_"),
              weekdaysMin: "su_ma_ti_ke_to_pe_la".split("_"),
              longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD.MM.YYYY",
                LL: "Do MMMM[ta] YYYY",
                LLL: "Do MMMM[ta] YYYY, [klo] HH.mm",
                LLLL: "dddd, Do MMMM[ta] YYYY, [klo] HH.mm",
                l: "D.M.YYYY",
                ll: "Do MMM YYYY",
                lll: "Do MMM YYYY, [klo] HH.mm",
                llll: "ddd, Do MMM YYYY, [klo] HH.mm"
              },
              calendar: {
                sameDay: "[tÃ¤nÃ¤Ã¤n] [klo] LT",
                nextDay: "[huomenna] [klo] LT",
                nextWeek: "dddd [klo] LT",
                lastDay: "[eilen] [klo] LT",
                lastWeek: "[viime] dddd[na] [klo] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s pÃ¤Ã¤stÃ¤",
                past: "%s sitten",
                s: n,
                ss: n,
                m: n,
                mm: n,
                h: n,
                hh: n,
                d: n,
                dd: n,
                M: n,
                MM: n,
                y: n,
                yy: n
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        2549: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("fil", {
              months: "Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split(
                "_"
              ),
              monthsShort: "Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split(
                "_"
              ),
              weekdays: "Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split(
                "_"
              ),
              weekdaysShort: "Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),
              weekdaysMin: "Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "MM/D/YYYY",
                LL: "MMMM D, YYYY",
                LLL: "MMMM D, YYYY HH:mm",
                LLLL: "dddd, MMMM DD, YYYY HH:mm"
              },
              calendar: {
                sameDay: "LT [ngayong araw]",
                nextDay: "[Bukas ng] LT",
                nextWeek: "LT [sa susunod na] dddd",
                lastDay: "LT [kahapon]",
                lastWeek: "LT [noong nakaraang] dddd",
                sameElse: "L"
              },
              relativeTime: {
                future: "sa loob ng %s",
                past: "%s ang nakalipas",
                s: "ilang segundo",
                ss: "%d segundo",
                m: "isang minuto",
                mm: "%d minuto",
                h: "isang oras",
                hh: "%d oras",
                d: "isang araw",
                dd: "%d araw",
                M: "isang buwan",
                MM: "%d buwan",
                y: "isang taon",
                yy: "%d taon"
              },
              dayOfMonthOrdinalParse: /\d{1,2}/,
              ordinal: function (e) {
                return e;
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        4694: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("fo", {
              months: "januar_februar_mars_aprÃ­l_mai_juni_juli_august_september_oktober_november_desember".split(
                "_"
              ),
              monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split(
                "_"
              ),
              weekdays: "sunnudagur_mÃ¡nadagur_tÃ½sdagur_mikudagur_hÃ³sdagur_frÃ­ggjadagur_leygardagur".split(
                "_"
              ),
              weekdaysShort: "sun_mÃ¡n_tÃ½s_mik_hÃ³s_frÃ­_ley".split("_"),
              weekdaysMin: "su_mÃ¡_tÃ½_mi_hÃ³_fr_le".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D. MMMM, YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Ã dag kl.] LT",
                nextDay: "[Ã morgin kl.] LT",
                nextWeek: "dddd [kl.] LT",
                lastDay: "[Ã gjÃ¡r kl.] LT",
                lastWeek: "[sÃ­Ã°stu] dddd [kl] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "um %s",
                past: "%s sÃ­Ã°ani",
                s: "fÃ¡ sekund",
                ss: "%d sekundir",
                m: "ein minuttur",
                mm: "%d minuttir",
                h: "ein tÃ­mi",
                hh: "%d tÃ­mar",
                d: "ein dagur",
                dd: "%d dagar",
                M: "ein mÃ¡naÃ°ur",
                MM: "%d mÃ¡naÃ°ir",
                y: "eitt Ã¡r",
                yy: "%d Ã¡r"
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        3049: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("fr-ca", {
              months: "janvier_fÃ©vrier_mars_avril_mai_juin_juillet_aoÃ»t_septembre_octobre_novembre_dÃ©cembre".split(
                "_"
              ),
              monthsShort: "janv._fÃ©vr._mars_avr._mai_juin_juil._aoÃ»t_sept._oct._nov._dÃ©c.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split(
                "_"
              ),
              weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
              weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Aujourdâ€™hui Ã ] LT",
                nextDay: "[Demain Ã ] LT",
                nextWeek: "dddd [Ã ] LT",
                lastDay: "[Hier Ã ] LT",
                lastWeek: "dddd [dernier Ã ] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "dans %s",
                past: "il y a %s",
                s: "quelques secondes",
                ss: "%d secondes",
                m: "une minute",
                mm: "%d minutes",
                h: "une heure",
                hh: "%d heures",
                d: "un jour",
                dd: "%d jours",
                M: "un mois",
                MM: "%d mois",
                y: "un an",
                yy: "%d ans"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
              ordinal: function (e, t) {
                switch (t) {
                  default:
                  case "M":
                  case "Q":
                  case "D":
                  case "DDD":
                  case "d":
                    return e + (1 === e ? "er" : "e");
                  case "w":
                  case "W":
                    return e + (1 === e ? "re" : "e");
                }
              }
            });
          })(a(381));
        },
        2330: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("fr-ch", {
              months: "janvier_fÃ©vrier_mars_avril_mai_juin_juillet_aoÃ»t_septembre_octobre_novembre_dÃ©cembre".split(
                "_"
              ),
              monthsShort: "janv._fÃ©vr._mars_avr._mai_juin_juil._aoÃ»t_sept._oct._nov._dÃ©c.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split(
                "_"
              ),
              weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
              weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Aujourdâ€™hui Ã ] LT",
                nextDay: "[Demain Ã ] LT",
                nextWeek: "dddd [Ã ] LT",
                lastDay: "[Hier Ã ] LT",
                lastWeek: "dddd [dernier Ã ] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "dans %s",
                past: "il y a %s",
                s: "quelques secondes",
                ss: "%d secondes",
                m: "une minute",
                mm: "%d minutes",
                h: "une heure",
                hh: "%d heures",
                d: "un jour",
                dd: "%d jours",
                M: "un mois",
                MM: "%d mois",
                y: "un an",
                yy: "%d ans"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
              ordinal: function (e, t) {
                switch (t) {
                  default:
                  case "M":
                  case "Q":
                  case "D":
                  case "DDD":
                  case "d":
                    return e + (1 === e ? "er" : "e");
                  case "w":
                  case "W":
                    return e + (1 === e ? "re" : "e");
                }
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        4470: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = /^(janvier|fÃ©vrier|mars|avril|mai|juin|juillet|aoÃ»t|septembre|octobre|novembre|dÃ©cembre)/i,
              a = /(janv\.?|fÃ©vr\.?|mars|avr\.?|mai|juin|juil\.?|aoÃ»t|sept\.?|oct\.?|nov\.?|dÃ©c\.?)/i,
              n = /(janv\.?|fÃ©vr\.?|mars|avr\.?|mai|juin|juil\.?|aoÃ»t|sept\.?|oct\.?|nov\.?|dÃ©c\.?|janvier|fÃ©vrier|mars|avril|mai|juin|juillet|aoÃ»t|septembre|octobre|novembre|dÃ©cembre)/i,
              i = [
                /^janv/i,
                /^fÃ©vr/i,
                /^mars/i,
                /^avr/i,
                /^mai/i,
                /^juin/i,
                /^juil/i,
                /^aoÃ»t/i,
                /^sept/i,
                /^oct/i,
                /^nov/i,
                /^dÃ©c/i
              ];
            e.defineLocale("fr", {
              months: "janvier_fÃ©vrier_mars_avril_mai_juin_juillet_aoÃ»t_septembre_octobre_novembre_dÃ©cembre".split(
                "_"
              ),
              monthsShort: "janv._fÃ©vr._mars_avr._mai_juin_juil._aoÃ»t_sept._oct._nov._dÃ©c.".split(
                "_"
              ),
              monthsRegex: n,
              monthsShortRegex: n,
              monthsStrictRegex: t,
              monthsShortStrictRegex: a,
              monthsParse: i,
              longMonthsParse: i,
              shortMonthsParse: i,
              weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split(
                "_"
              ),
              weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
              weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Aujourdâ€™hui Ã ] LT",
                nextDay: "[Demain Ã ] LT",
                nextWeek: "dddd [Ã ] LT",
                lastDay: "[Hier Ã ] LT",
                lastWeek: "dddd [dernier Ã ] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "dans %s",
                past: "il y a %s",
                s: "quelques secondes",
                ss: "%d secondes",
                m: "une minute",
                mm: "%d minutes",
                h: "une heure",
                hh: "%d heures",
                d: "un jour",
                dd: "%d jours",
                w: "une semaine",
                ww: "%d semaines",
                M: "un mois",
                MM: "%d mois",
                y: "un an",
                yy: "%d ans"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
              ordinal: function (e, t) {
                switch (t) {
                  case "D":
                    return e + (1 === e ? "er" : "");
                  default:
                  case "M":
                  case "Q":
                  case "DDD":
                  case "d":
                    return e + (1 === e ? "er" : "e");
                  case "w":
                  case "W":
                    return e + (1 === e ? "re" : "e");
                }
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        5044: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = "jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.".split(
                "_"
              ),
              a = "jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_");
            e.defineLocale("fy", {
              months: "jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber".split(
                "_"
              ),
              monthsShort: function (e, n) {
                return e ? (/-MMM-/.test(n) ? a[e.month()] : t[e.month()]) : t;
              },
              monthsParseExact: !0,
              weekdays: "snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon".split(
                "_"
              ),
              weekdaysShort: "si._mo._ti._wo._to._fr._so.".split("_"),
              weekdaysMin: "Si_Mo_Ti_Wo_To_Fr_So".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD-MM-YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[hjoed om] LT",
                nextDay: "[moarn om] LT",
                nextWeek: "dddd [om] LT",
                lastDay: "[juster om] LT",
                lastWeek: "[Ã´frÃ»ne] dddd [om] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "oer %s",
                past: "%s lyn",
                s: "in pear sekonden",
                ss: "%d sekonden",
                m: "ien minÃºt",
                mm: "%d minuten",
                h: "ien oere",
                hh: "%d oeren",
                d: "ien dei",
                dd: "%d dagen",
                M: "ien moanne",
                MM: "%d moannen",
                y: "ien jier",
                yy: "%d jierren"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
              ordinal: function (e) {
                return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        9295: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = [
                "EanÃ¡ir",
                "Feabhra",
                "MÃ¡rta",
                "AibreÃ¡n",
                "Bealtaine",
                "Meitheamh",
                "IÃºil",
                "LÃºnasa",
                "MeÃ¡n FÃ³mhair",
                "Deireadh FÃ³mhair",
                "Samhain",
                "Nollaig"
              ],
              a = [
                "Ean",
                "Feabh",
                "MÃ¡rt",
                "Aib",
                "Beal",
                "Meith",
                "IÃºil",
                "LÃºn",
                "M.F.",
                "D.F.",
                "Samh",
                "Noll"
              ],
              n = [
                "DÃ© Domhnaigh",
                "DÃ© Luain",
                "DÃ© MÃ¡irt",
                "DÃ© CÃ©adaoin",
                "DÃ©ardaoin",
                "DÃ© hAoine",
                "DÃ© Sathairn"
              ],
              i = ["Domh", "Luan", "MÃ¡irt", "CÃ©ad", "DÃ©ar", "Aoine", "Sath"],
              r = ["Do", "Lu", "MÃ¡", "CÃ©", "DÃ©", "A", "Sa"];
            e.defineLocale("ga", {
              months: t,
              monthsShort: a,
              monthsParseExact: !0,
              weekdays: n,
              weekdaysShort: i,
              weekdaysMin: r,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Inniu ag] LT",
                nextDay: "[AmÃ¡rach ag] LT",
                nextWeek: "dddd [ag] LT",
                lastDay: "[InnÃ© ag] LT",
                lastWeek: "dddd [seo caite] [ag] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "i %s",
                past: "%s Ã³ shin",
                s: "cÃºpla soicind",
                ss: "%d soicind",
                m: "nÃ³imÃ©ad",
                mm: "%d nÃ³imÃ©ad",
                h: "uair an chloig",
                hh: "%d uair an chloig",
                d: "lÃ¡",
                dd: "%d lÃ¡",
                M: "mÃ­",
                MM: "%d mÃ­onna",
                y: "bliain",
                yy: "%d bliain"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
              ordinal: function (e) {
                return e + (1 === e ? "d" : e % 10 == 2 ? "na" : "mh");
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        2101: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = [
                "Am Faoilleach",
                "An Gearran",
                "Am MÃ rt",
                "An Giblean",
                "An CÃ¨itean",
                "An t-Ã’gmhios",
                "An t-Iuchar",
                "An LÃ¹nastal",
                "An t-Sultain",
                "An DÃ mhair",
                "An t-Samhain",
                "An DÃ¹bhlachd"
              ],
              a = [
                "Faoi",
                "Gear",
                "MÃ rt",
                "Gibl",
                "CÃ¨it",
                "Ã’gmh",
                "Iuch",
                "LÃ¹n",
                "Sult",
                "DÃ mh",
                "Samh",
                "DÃ¹bh"
              ],
              n = [
                "DidÃ²mhnaich",
                "Diluain",
                "DimÃ irt",
                "Diciadain",
                "Diardaoin",
                "Dihaoine",
                "Disathairne"
              ],
              i = ["Did", "Dil", "Dim", "Dic", "Dia", "Dih", "Dis"],
              r = ["DÃ²", "Lu", "MÃ ", "Ci", "Ar", "Ha", "Sa"];
            e.defineLocale("gd", {
              months: t,
              monthsShort: a,
              monthsParseExact: !0,
              weekdays: n,
              weekdaysShort: i,
              weekdaysMin: r,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[An-diugh aig] LT",
                nextDay: "[A-mÃ ireach aig] LT",
                nextWeek: "dddd [aig] LT",
                lastDay: "[An-dÃ¨ aig] LT",
                lastWeek: "dddd [seo chaidh] [aig] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "ann an %s",
                past: "bho chionn %s",
                s: "beagan diogan",
                ss: "%d diogan",
                m: "mionaid",
                mm: "%d mionaidean",
                h: "uair",
                hh: "%d uairean",
                d: "latha",
                dd: "%d latha",
                M: "mÃ¬os",
                MM: "%d mÃ¬osan",
                y: "bliadhna",
                yy: "%d bliadhna"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
              ordinal: function (e) {
                return e + (1 === e ? "d" : e % 10 == 2 ? "na" : "mh");
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        8794: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("gl", {
              months: "xaneiro_febreiro_marzo_abril_maio_xuÃ±o_xullo_agosto_setembro_outubro_novembro_decembro".split(
                "_"
              ),
              monthsShort: "xan._feb._mar._abr._mai._xuÃ±._xul._ago._set._out._nov._dec.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "domingo_luns_martes_mÃ©rcores_xoves_venres_sÃ¡bado".split(
                "_"
              ),
              weekdaysShort: "dom._lun._mar._mÃ©r._xov._ven._sÃ¡b.".split("_"),
              weekdaysMin: "do_lu_ma_mÃ©_xo_ve_sÃ¡".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D [de] MMMM [de] YYYY",
                LLL: "D [de] MMMM [de] YYYY H:mm",
                LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
              },
              calendar: {
                sameDay: function () {
                  return "[hoxe " + (1 !== this.hours() ? "Ã¡s" : "Ã¡") + "] LT";
                },
                nextDay: function () {
                  return (
                    "[maÃ±Ã¡ " + (1 !== this.hours() ? "Ã¡s" : "Ã¡") + "] LT"
                  );
                },
                nextWeek: function () {
                  return "dddd [" + (1 !== this.hours() ? "Ã¡s" : "a") + "] LT";
                },
                lastDay: function () {
                  return "[onte " + (1 !== this.hours() ? "Ã¡" : "a") + "] LT";
                },
                lastWeek: function () {
                  return (
                    "[o] dddd [pasado " +
                    (1 !== this.hours() ? "Ã¡s" : "a") +
                    "] LT"
                  );
                },
                sameElse: "L"
              },
              relativeTime: {
                future: function (e) {
                  return 0 === e.indexOf("un") ? "n" + e : "en " + e;
                },
                past: "hai %s",
                s: "uns segundos",
                ss: "%d segundos",
                m: "un minuto",
                mm: "%d minutos",
                h: "unha hora",
                hh: "%d horas",
                d: "un dÃ­a",
                dd: "%d dÃ­as",
                M: "un mes",
                MM: "%d meses",
                y: "un ano",
                yy: "%d anos"
              },
              dayOfMonthOrdinalParse: /\d{1,2}Âº/,
              ordinal: "%dÂº",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        7884: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t, a, n) {
              var i = {
                s: [
                  "à¤¥à¥‹à¤¡à¤¯à¤¾ à¤¸à¥…à¤•à¤‚à¤¡à¤¾à¤‚à¤¨à¥€",
                  "à¤¥à¥‹à¤¡à¥‡ à¤¸à¥…à¤•à¤‚à¤¡"
                ],
                ss: [e + " à¤¸à¥…à¤•à¤‚à¤¡à¤¾à¤‚à¤¨à¥€", e + " à¤¸à¥…à¤•à¤‚à¤¡"],
                m: ["à¤à¤•à¤¾ à¤®à¤¿à¤£à¤Ÿà¤¾à¤¨", "à¤à¤• à¤®à¤¿à¤¨à¥‚à¤Ÿ"],
                mm: [e + " à¤®à¤¿à¤£à¤Ÿà¤¾à¤‚à¤¨à¥€", e + " à¤®à¤¿à¤£à¤Ÿà¤¾à¤‚"],
                h: ["à¤à¤•à¤¾ à¤µà¤°à¤¾à¤¨", "à¤à¤• à¤µà¤°"],
                hh: [e + " à¤µà¤°à¤¾à¤‚à¤¨à¥€", e + " à¤µà¤°à¤¾à¤‚"],
                d: ["à¤à¤•à¤¾ à¤¦à¤¿à¤¸à¤¾à¤¨", "à¤à¤• à¤¦à¥€à¤¸"],
                dd: [e + " à¤¦à¤¿à¤¸à¤¾à¤‚à¤¨à¥€", e + " à¤¦à¥€à¤¸"],
                M: [
                  "à¤à¤•à¤¾ à¤®à¥à¤¹à¤¯à¤¨à¥à¤¯à¤¾à¤¨",
                  "à¤à¤• à¤®à¥à¤¹à¤¯à¤¨à¥‹"
                ],
                MM: [
                  e + " à¤®à¥à¤¹à¤¯à¤¨à¥à¤¯à¤¾à¤¨à¥€",
                  e + " à¤®à¥à¤¹à¤¯à¤¨à¥‡"
                ],
                y: ["à¤à¤•à¤¾ à¤µà¤°à¥à¤¸à¤¾à¤¨", "à¤à¤• à¤µà¤°à¥à¤¸"],
                yy: [e + " à¤µà¤°à¥à¤¸à¤¾à¤‚à¤¨à¥€", e + " à¤µà¤°à¥à¤¸à¤¾à¤‚"]
              };
              return n ? i[a][0] : i[a][1];
            }
            e.defineLocale("gom-deva", {
              months: {
                standalone: "à¤œà¤¾à¤¨à¥‡à¤µà¤¾à¤°à¥€_à¤«à¥‡à¤¬à¥à¤°à¥à¤µà¤¾à¤°à¥€_à¤®à¤¾à¤°à¥à¤š_à¤à¤ªà¥à¤°à¥€à¤²_à¤®à¥‡_à¤œà¥‚à¤¨_à¤œà¥à¤²à¤¯_à¤‘à¤—à¤¸à¥à¤Ÿ_à¤¸à¤ªà¥à¤Ÿà¥‡à¤‚à¤¬à¤°_à¤‘à¤•à¥à¤Ÿà¥‹à¤¬à¤°_à¤¨à¥‹à¤µà¥à¤¹à¥‡à¤‚à¤¬à¤°_à¤¡à¤¿à¤¸à¥‡à¤‚à¤¬à¤°".split(
                  "_"
                ),
                format: "à¤œà¤¾à¤¨à¥‡à¤µà¤¾à¤°à¥€à¤šà¥à¤¯à¤¾_à¤«à¥‡à¤¬à¥à¤°à¥à¤µà¤¾à¤°à¥€à¤šà¥à¤¯à¤¾_à¤®à¤¾à¤°à¥à¤šà¤¾à¤šà¥à¤¯à¤¾_à¤à¤ªà¥à¤°à¥€à¤²à¤¾à¤šà¥à¤¯à¤¾_à¤®à¥‡à¤¯à¤¾à¤šà¥à¤¯à¤¾_à¤œà¥‚à¤¨à¤¾à¤šà¥à¤¯à¤¾_à¤œà¥à¤²à¤¯à¤¾à¤šà¥à¤¯à¤¾_à¤‘à¤—à¤¸à¥à¤Ÿà¤¾à¤šà¥à¤¯à¤¾_à¤¸à¤ªà¥à¤Ÿà¥‡à¤‚à¤¬à¤°à¤¾à¤šà¥à¤¯à¤¾_à¤‘à¤•à¥à¤Ÿà¥‹à¤¬à¤°à¤¾à¤šà¥à¤¯à¤¾_à¤¨à¥‹à¤µà¥à¤¹à¥‡à¤‚à¤¬à¤°à¤¾à¤šà¥à¤¯à¤¾_à¤¡à¤¿à¤¸à¥‡à¤‚à¤¬à¤°à¤¾à¤šà¥à¤¯à¤¾".split(
                  "_"
                ),
                isFormat: /MMMM(\s)+D[oD]?/
              },
              monthsShort: "à¤œà¤¾à¤¨à¥‡._à¤«à¥‡à¤¬à¥à¤°à¥._à¤®à¤¾à¤°à¥à¤š_à¤à¤ªà¥à¤°à¥€._à¤®à¥‡_à¤œà¥‚à¤¨_à¤œà¥à¤²._à¤‘à¤—._à¤¸à¤ªà¥à¤Ÿà¥‡à¤‚._à¤‘à¤•à¥à¤Ÿà¥‹._à¤¨à¥‹à¤µà¥à¤¹à¥‡à¤‚._à¤¡à¤¿à¤¸à¥‡à¤‚.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "à¤†à¤¯à¤¤à¤¾à¤°_à¤¸à¥‹à¤®à¤¾à¤°_à¤®à¤‚à¤—à¤³à¤¾à¤°_à¤¬à¥à¤§à¤µà¤¾à¤°_à¤¬à¤¿à¤°à¥‡à¤¸à¥à¤¤à¤¾à¤°_à¤¸à¥à¤•à¥à¤°à¤¾à¤°_à¤¶à¥‡à¤¨à¤µà¤¾à¤°".split(
                "_"
              ),
              weekdaysShort: "à¤†à¤¯à¤¤._à¤¸à¥‹à¤®._à¤®à¤‚à¤—à¤³._à¤¬à¥à¤§._à¤¬à¥à¤°à¥‡à¤¸à¥à¤¤._à¤¸à¥à¤•à¥à¤°._à¤¶à¥‡à¤¨.".split(
                "_"
              ),
              weekdaysMin: "à¤†_à¤¸à¥‹_à¤®à¤‚_à¤¬à¥_à¤¬à¥à¤°à¥‡_à¤¸à¥_à¤¶à¥‡".split(
                "_"
              ),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "A h:mm [à¤µà¤¾à¤œà¤¤à¤¾à¤‚]",
                LTS: "A h:mm:ss [à¤µà¤¾à¤œà¤¤à¤¾à¤‚]",
                L: "DD-MM-YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY A h:mm [à¤µà¤¾à¤œà¤¤à¤¾à¤‚]",
                LLLL: "dddd, MMMM Do, YYYY, A h:mm [à¤µà¤¾à¤œà¤¤à¤¾à¤‚]",
                llll: "ddd, D MMM YYYY, A h:mm [à¤µà¤¾à¤œà¤¤à¤¾à¤‚]"
              },
              calendar: {
                sameDay: "[à¤†à¤¯à¤œ] LT",
                nextDay: "[à¤«à¤¾à¤²à¥à¤¯à¤¾à¤‚] LT",
                nextWeek: "[à¤«à¥à¤¡à¤²à¥‹] dddd[,] LT",
                lastDay: "[à¤•à¤¾à¤²] LT",
                lastWeek: "[à¤«à¤¾à¤Ÿà¤²à¥‹] dddd[,] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s",
                past: "%s à¤†à¤¦à¥€à¤‚",
                s: t,
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
              },
              dayOfMonthOrdinalParse: /\d{1,2}(à¤µà¥‡à¤°)/,
              ordinal: function (e, t) {
                switch (t) {
                  case "D":
                    return e + "à¤µà¥‡à¤°";
                  default:
                  case "M":
                  case "Q":
                  case "DDD":
                  case "d":
                  case "w":
                  case "W":
                    return e;
                }
              },
              week: { dow: 0, doy: 3 },
              meridiemParse: /à¤°à¤¾à¤¤à¥€|à¤¸à¤•à¤¾à¤³à¥€à¤‚|à¤¦à¤¨à¤ªà¤¾à¤°à¤¾à¤‚|à¤¸à¤¾à¤‚à¤œà¥‡/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "à¤°à¤¾à¤¤à¥€" === t
                    ? e < 4
                      ? e
                      : e + 12
                    : "à¤¸à¤•à¤¾à¤³à¥€à¤‚" === t
                    ? e
                    : "à¤¦à¤¨à¤ªà¤¾à¤°à¤¾à¤‚" === t
                    ? e > 12
                      ? e
                      : e + 12
                    : "à¤¸à¤¾à¤‚à¤œà¥‡" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                return e < 4
                  ? "à¤°à¤¾à¤¤à¥€"
                  : e < 12
                  ? "à¤¸à¤•à¤¾à¤³à¥€à¤‚"
                  : e < 16
                  ? "à¤¦à¤¨à¤ªà¤¾à¤°à¤¾à¤‚"
                  : e < 20
                  ? "à¤¸à¤¾à¤‚à¤œà¥‡"
                  : "à¤°à¤¾à¤¤à¥€";
              }
            });
          })(a(381));
        },
        3168: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t, a, n) {
              var i = {
                s: ["thoddea sekondamni", "thodde sekond"],
                ss: [e + " sekondamni", e + " sekond"],
                m: ["eka mintan", "ek minut"],
                mm: [e + " mintamni", e + " mintam"],
                h: ["eka voran", "ek vor"],
                hh: [e + " voramni", e + " voram"],
                d: ["eka disan", "ek dis"],
                dd: [e + " disamni", e + " dis"],
                M: ["eka mhoinean", "ek mhoino"],
                MM: [e + " mhoineamni", e + " mhoine"],
                y: ["eka vorsan", "ek voros"],
                yy: [e + " vorsamni", e + " vorsam"]
              };
              return n ? i[a][0] : i[a][1];
            }
            e.defineLocale("gom-latn", {
              months: {
                standalone: "Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr".split(
                  "_"
                ),
                format: "Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea".split(
                  "_"
                ),
                isFormat: /MMMM(\s)+D[oD]?/
              },
              monthsShort: "Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var".split(
                "_"
              ),
              weekdaysShort: "Ait._Som._Mon._Bud._Bre._Suk._Son.".split("_"),
              weekdaysMin: "Ai_Sm_Mo_Bu_Br_Su_Sn".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "A h:mm [vazta]",
                LTS: "A h:mm:ss [vazta]",
                L: "DD-MM-YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY A h:mm [vazta]",
                LLLL: "dddd, MMMM Do, YYYY, A h:mm [vazta]",
                llll: "ddd, D MMM YYYY, A h:mm [vazta]"
              },
              calendar: {
                sameDay: "[Aiz] LT",
                nextDay: "[Faleam] LT",
                nextWeek: "[Fuddlo] dddd[,] LT",
                lastDay: "[Kal] LT",
                lastWeek: "[Fattlo] dddd[,] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s",
                past: "%s adim",
                s: t,
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
              },
              dayOfMonthOrdinalParse: /\d{1,2}(er)/,
              ordinal: function (e, t) {
                switch (t) {
                  case "D":
                    return e + "er";
                  default:
                  case "M":
                  case "Q":
                  case "DDD":
                  case "d":
                  case "w":
                  case "W":
                    return e;
                }
              },
              week: { dow: 0, doy: 3 },
              meridiemParse: /rati|sokallim|donparam|sanje/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "rati" === t
                    ? e < 4
                      ? e
                      : e + 12
                    : "sokallim" === t
                    ? e
                    : "donparam" === t
                    ? e > 12
                      ? e
                      : e + 12
                    : "sanje" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                return e < 4
                  ? "rati"
                  : e < 12
                  ? "sokallim"
                  : e < 16
                  ? "donparam"
                  : e < 20
                  ? "sanje"
                  : "rati";
              }
            });
          })(a(381));
        },
        5349: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "à«§",
                2: "à«¨",
                3: "à«©",
                4: "à«ª",
                5: "à««",
                6: "à«¬",
                7: "à«­",
                8: "à«®",
                9: "à«¯",
                0: "à«¦"
              },
              a = {
                "à«§": "1",
                "à«¨": "2",
                "à«©": "3",
                "à«ª": "4",
                "à««": "5",
                "à«¬": "6",
                "à«­": "7",
                "à«®": "8",
                "à«¯": "9",
                "à«¦": "0"
              };
            e.defineLocale("gu", {
              months: "àªœàª¾àª¨à«àª¯à«àª†àª°à«€_àª«à«‡àª¬à«àª°à«àª†àª°à«€_àª®àª¾àª°à«àªš_àªàªªà«àª°àª¿àª²_àª®à«‡_àªœà«‚àª¨_àªœà«àª²àª¾àªˆ_àª‘àª—àª¸à«àªŸ_àª¸àªªà«àªŸà«‡àª®à«àª¬àª°_àª‘àª•à«àªŸà«àª¬àª°_àª¨àªµà«‡àª®à«àª¬àª°_àª¡àª¿àª¸à«‡àª®à«àª¬àª°".split(
                "_"
              ),
              monthsShort: "àªœàª¾àª¨à«àª¯à«._àª«à«‡àª¬à«àª°à«._àª®àª¾àª°à«àªš_àªàªªà«àª°àª¿._àª®à«‡_àªœà«‚àª¨_àªœà«àª²àª¾._àª‘àª—._àª¸àªªà«àªŸà«‡._àª‘àª•à«àªŸà«._àª¨àªµà«‡._àª¡àª¿àª¸à«‡.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "àª°àªµàª¿àªµàª¾àª°_àª¸à«‹àª®àªµàª¾àª°_àª®àª‚àª—àª³àªµàª¾àª°_àª¬à«àª§à«àªµàª¾àª°_àª—à«àª°à«àªµàª¾àª°_àª¶à«àª•à«àª°àªµàª¾àª°_àª¶àª¨àª¿àªµàª¾àª°".split(
                "_"
              ),
              weekdaysShort: "àª°àªµàª¿_àª¸à«‹àª®_àª®àª‚àª—àª³_àª¬à«àª§à«_àª—à«àª°à«_àª¶à«àª•à«àª°_àª¶àª¨àª¿".split(
                "_"
              ),
              weekdaysMin: "àª°_àª¸à«‹_àª®àª‚_àª¬à«_àª—à«_àª¶à«_àª¶".split("_"),
              longDateFormat: {
                LT: "A h:mm àªµàª¾àª—à«àª¯à«‡",
                LTS: "A h:mm:ss àªµàª¾àª—à«àª¯à«‡",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm àªµàª¾àª—à«àª¯à«‡",
                LLLL: "dddd, D MMMM YYYY, A h:mm àªµàª¾àª—à«àª¯à«‡"
              },
              calendar: {
                sameDay: "[àª†àªœ] LT",
                nextDay: "[àª•àª¾àª²à«‡] LT",
                nextWeek: "dddd, LT",
                lastDay: "[àª—àª‡àª•àª¾àª²à«‡] LT",
                lastWeek: "[àªªàª¾àª›àª²àª¾] dddd, LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s àª®àª¾",
                past: "%s àªªàª¹à«‡àª²àª¾",
                s: "àª…àª®à«àª• àªªàª³à«‹",
                ss: "%d àª¸à«‡àª•àª‚àª¡",
                m: "àªàª• àª®àª¿àª¨àª¿àªŸ",
                mm: "%d àª®àª¿àª¨àª¿àªŸ",
                h: "àªàª• àª•àª²àª¾àª•",
                hh: "%d àª•àª²àª¾àª•",
                d: "àªàª• àª¦àª¿àªµàª¸",
                dd: "%d àª¦àª¿àªµàª¸",
                M: "àªàª• àª®àª¹àª¿àª¨à«‹",
                MM: "%d àª®àª¹àª¿àª¨à«‹",
                y: "àªàª• àªµàª°à«àª·",
                yy: "%d àªµàª°à«àª·"
              },
              preparse: function (e) {
                return e.replace(
                  /[à«§à«¨à«©à«ªà««à«¬à«­à«®à«¯à«¦]/g,
                  function (e) {
                    return a[e];
                  }
                );
              },
              postformat: function (e) {
                return e.replace(/\d/g, function (e) {
                  return t[e];
                });
              },
              meridiemParse: /àª°àª¾àª¤|àª¬àªªà«‹àª°|àª¸àªµàª¾àª°|àª¸àª¾àª‚àªœ/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "àª°àª¾àª¤" === t
                    ? e < 4
                      ? e
                      : e + 12
                    : "àª¸àªµàª¾àª°" === t
                    ? e
                    : "àª¬àªªà«‹àª°" === t
                    ? e >= 10
                      ? e
                      : e + 12
                    : "àª¸àª¾àª‚àªœ" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                return e < 4
                  ? "àª°àª¾àª¤"
                  : e < 10
                  ? "àª¸àªµàª¾àª°"
                  : e < 17
                  ? "àª¬àªªà«‹àª°"
                  : e < 20
                  ? "àª¸àª¾àª‚àªœ"
                  : "àª°àª¾àª¤";
              },
              week: { dow: 0, doy: 6 }
            });
          })(a(381));
        },
        4206: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("he", {
              months: "×™× ×•××¨_×¤×‘×¨×•××¨_×ž×¨×¥_××¤×¨×™×œ_×ž××™_×™×•× ×™_×™×•×œ×™_××•×’×•×¡×˜_×¡×¤×˜×ž×‘×¨_××•×§×˜×•×‘×¨_× ×•×‘×ž×‘×¨_×“×¦×ž×‘×¨".split(
                "_"
              ),
              monthsShort: "×™× ×•×³_×¤×‘×¨×³_×ž×¨×¥_××¤×¨×³_×ž××™_×™×•× ×™_×™×•×œ×™_××•×’×³_×¡×¤×˜×³_××•×§×³_× ×•×‘×³_×“×¦×ž×³".split(
                "_"
              ),
              weekdays: "×¨××©×•×Ÿ_×©× ×™_×©×œ×™×©×™_×¨×‘×™×¢×™_×—×ž×™×©×™_×©×™×©×™_×©×‘×ª".split(
                "_"
              ),
              weekdaysShort: "××³_×‘×³_×’×³_×“×³_×”×³_×•×³_×©×³".split("_"),
              weekdaysMin: "×_×‘_×’_×“_×”_×•_×©".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D [×‘]MMMM YYYY",
                LLL: "D [×‘]MMMM YYYY HH:mm",
                LLLL: "dddd, D [×‘]MMMM YYYY HH:mm",
                l: "D/M/YYYY",
                ll: "D MMM YYYY",
                lll: "D MMM YYYY HH:mm",
                llll: "ddd, D MMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[×”×™×•× ×‘Ö¾]LT",
                nextDay: "[×ž×—×¨ ×‘Ö¾]LT",
                nextWeek: "dddd [×‘×©×¢×”] LT",
                lastDay: "[××ª×ž×•×œ ×‘Ö¾]LT",
                lastWeek: "[×‘×™×•×] dddd [×”××—×¨×•×Ÿ ×‘×©×¢×”] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "×‘×¢×•×“ %s",
                past: "×œ×¤× ×™ %s",
                s: "×ž×¡×¤×¨ ×©× ×™×•×ª",
                ss: "%d ×©× ×™×•×ª",
                m: "×“×§×”",
                mm: "%d ×“×§×•×ª",
                h: "×©×¢×”",
                hh: function (e) {
                  return 2 === e ? "×©×¢×ª×™×™×" : e + " ×©×¢×•×ª";
                },
                d: "×™×•×",
                dd: function (e) {
                  return 2 === e ? "×™×•×ž×™×™×" : e + " ×™×ž×™×";
                },
                M: "×—×•×“×©",
                MM: function (e) {
                  return 2 === e ? "×—×•×“×©×™×™×" : e + " ×—×•×“×©×™×";
                },
                y: "×©× ×”",
                yy: function (e) {
                  return 2 === e
                    ? "×©× ×ª×™×™×"
                    : e % 10 == 0 && 10 !== e
                    ? e + " ×©× ×”"
                    : e + " ×©× ×™×";
                }
              },
              meridiemParse: /××—×”"×¦|×œ×¤× ×”"×¦|××—×¨×™ ×”×¦×”×¨×™×™×|×œ×¤× ×™ ×”×¦×”×¨×™×™×|×œ×¤× ×•×ª ×‘×•×§×¨|×‘×‘×•×§×¨|×‘×¢×¨×‘/i,
              isPM: function (e) {
                return /^(××—×”"×¦|××—×¨×™ ×”×¦×”×¨×™×™×|×‘×¢×¨×‘)$/.test(e);
              },
              meridiem: function (e, t, a) {
                return e < 5
                  ? "×œ×¤× ×•×ª ×‘×•×§×¨"
                  : e < 10
                  ? "×‘×‘×•×§×¨"
                  : e < 12
                  ? a
                    ? '×œ×¤× ×”"×¦'
                    : "×œ×¤× ×™ ×”×¦×”×¨×™×™×"
                  : e < 18
                  ? a
                    ? '××—×”"×¦'
                    : "××—×¨×™ ×”×¦×”×¨×™×™×"
                  : "×‘×¢×¨×‘";
              }
            });
          })(a(381));
        },
        94: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "à¥§",
                2: "à¥¨",
                3: "à¥©",
                4: "à¥ª",
                5: "à¥«",
                6: "à¥¬",
                7: "à¥­",
                8: "à¥®",
                9: "à¥¯",
                0: "à¥¦"
              },
              a = {
                "à¥§": "1",
                "à¥¨": "2",
                "à¥©": "3",
                "à¥ª": "4",
                "à¥«": "5",
                "à¥¬": "6",
                "à¥­": "7",
                "à¥®": "8",
                "à¥¯": "9",
                "à¥¦": "0"
              },
              n = [
                /^à¤œà¤¨/i,
                /^à¤«à¤¼à¤°|à¤«à¤°/i,
                /^à¤®à¤¾à¤°à¥à¤š/i,
                /^à¤…à¤ªà¥à¤°à¥ˆ/i,
                /^à¤®à¤ˆ/i,
                /^à¤œà¥‚à¤¨/i,
                /^à¤œà¥à¤²/i,
                /^à¤…à¤—/i,
                /^à¤¸à¤¿à¤¤à¤‚|à¤¸à¤¿à¤¤/i,
                /^à¤…à¤•à¥à¤Ÿà¥‚/i,
                /^à¤¨à¤µ|à¤¨à¤µà¤‚/i,
                /^à¤¦à¤¿à¤¸à¤‚|à¤¦à¤¿à¤¸/i
              ],
              i = [
                /^à¤œà¤¨/i,
                /^à¤«à¤¼à¤°/i,
                /^à¤®à¤¾à¤°à¥à¤š/i,
                /^à¤…à¤ªà¥à¤°à¥ˆ/i,
                /^à¤®à¤ˆ/i,
                /^à¤œà¥‚à¤¨/i,
                /^à¤œà¥à¤²/i,
                /^à¤…à¤—/i,
                /^à¤¸à¤¿à¤¤/i,
                /^à¤…à¤•à¥à¤Ÿà¥‚/i,
                /^à¤¨à¤µ/i,
                /^à¤¦à¤¿à¤¸/i
              ];
            e.defineLocale("hi", {
              months: {
                format: "à¤œà¤¨à¤µà¤°à¥€_à¤«à¤¼à¤°à¤µà¤°à¥€_à¤®à¤¾à¤°à¥à¤š_à¤…à¤ªà¥à¤°à¥ˆà¤²_à¤®à¤ˆ_à¤œà¥‚à¤¨_à¤œà¥à¤²à¤¾à¤ˆ_à¤…à¤—à¤¸à¥à¤¤_à¤¸à¤¿à¤¤à¤®à¥à¤¬à¤°_à¤…à¤•à¥à¤Ÿà¥‚à¤¬à¤°_à¤¨à¤µà¤®à¥à¤¬à¤°_à¤¦à¤¿à¤¸à¤®à¥à¤¬à¤°".split(
                  "_"
                ),
                standalone: "à¤œà¤¨à¤µà¤°à¥€_à¤«à¤°à¤µà¤°à¥€_à¤®à¤¾à¤°à¥à¤š_à¤…à¤ªà¥à¤°à¥ˆà¤²_à¤®à¤ˆ_à¤œà¥‚à¤¨_à¤œà¥à¤²à¤¾à¤ˆ_à¤…à¤—à¤¸à¥à¤¤_à¤¸à¤¿à¤¤à¤‚à¤¬à¤°_à¤…à¤•à¥à¤Ÿà¥‚à¤¬à¤°_à¤¨à¤µà¤‚à¤¬à¤°_à¤¦à¤¿à¤¸à¤‚à¤¬à¤°".split(
                  "_"
                )
              },
              monthsShort: "à¤œà¤¨._à¤«à¤¼à¤°._à¤®à¤¾à¤°à¥à¤š_à¤…à¤ªà¥à¤°à¥ˆ._à¤®à¤ˆ_à¤œà¥‚à¤¨_à¤œà¥à¤²._à¤…à¤—._à¤¸à¤¿à¤¤._à¤…à¤•à¥à¤Ÿà¥‚._à¤¨à¤µ._à¤¦à¤¿à¤¸.".split(
                "_"
              ),
              weekdays: "à¤°à¤µà¤¿à¤µà¤¾à¤°_à¤¸à¥‹à¤®à¤µà¤¾à¤°_à¤®à¤‚à¤—à¤²à¤µà¤¾à¤°_à¤¬à¥à¤§à¤µà¤¾à¤°_à¤—à¥à¤°à¥‚à¤µà¤¾à¤°_à¤¶à¥à¤•à¥à¤°à¤µà¤¾à¤°_à¤¶à¤¨à¤¿à¤µà¤¾à¤°".split(
                "_"
              ),
              weekdaysShort: "à¤°à¤µà¤¿_à¤¸à¥‹à¤®_à¤®à¤‚à¤—à¤²_à¤¬à¥à¤§_à¤—à¥à¤°à¥‚_à¤¶à¥à¤•à¥à¤°_à¤¶à¤¨à¤¿".split(
                "_"
              ),
              weekdaysMin: "à¤°_à¤¸à¥‹_à¤®à¤‚_à¤¬à¥_à¤—à¥_à¤¶à¥_à¤¶".split("_"),
              longDateFormat: {
                LT: "A h:mm à¤¬à¤œà¥‡",
                LTS: "A h:mm:ss à¤¬à¤œà¥‡",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm à¤¬à¤œà¥‡",
                LLLL: "dddd, D MMMM YYYY, A h:mm à¤¬à¤œà¥‡"
              },
              monthsParse: n,
              longMonthsParse: n,
              shortMonthsParse: i,
              monthsRegex: /^(à¤œà¤¨à¤µà¤°à¥€|à¤œà¤¨\.?|à¤«à¤¼à¤°à¤µà¤°à¥€|à¤«à¤°à¤µà¤°à¥€|à¤«à¤¼à¤°\.?|à¤®à¤¾à¤°à¥à¤š?|à¤…à¤ªà¥à¤°à¥ˆà¤²|à¤…à¤ªà¥à¤°à¥ˆ\.?|à¤®à¤ˆ?|à¤œà¥‚à¤¨?|à¤œà¥à¤²à¤¾à¤ˆ|à¤œà¥à¤²\.?|à¤…à¤—à¤¸à¥à¤¤|à¤…à¤—\.?|à¤¸à¤¿à¤¤à¤®à¥à¤¬à¤°|à¤¸à¤¿à¤¤à¤‚à¤¬à¤°|à¤¸à¤¿à¤¤\.?|à¤…à¤•à¥à¤Ÿà¥‚à¤¬à¤°|à¤…à¤•à¥à¤Ÿà¥‚\.?|à¤¨à¤µà¤®à¥à¤¬à¤°|à¤¨à¤µà¤‚à¤¬à¤°|à¤¨à¤µ\.?|à¤¦à¤¿à¤¸à¤®à¥à¤¬à¤°|à¤¦à¤¿à¤¸à¤‚à¤¬à¤°|à¤¦à¤¿à¤¸\.?)/i,
              monthsShortRegex: /^(à¤œà¤¨à¤µà¤°à¥€|à¤œà¤¨\.?|à¤«à¤¼à¤°à¤µà¤°à¥€|à¤«à¤°à¤µà¤°à¥€|à¤«à¤¼à¤°\.?|à¤®à¤¾à¤°à¥à¤š?|à¤…à¤ªà¥à¤°à¥ˆà¤²|à¤…à¤ªà¥à¤°à¥ˆ\.?|à¤®à¤ˆ?|à¤œà¥‚à¤¨?|à¤œà¥à¤²à¤¾à¤ˆ|à¤œà¥à¤²\.?|à¤…à¤—à¤¸à¥à¤¤|à¤…à¤—\.?|à¤¸à¤¿à¤¤à¤®à¥à¤¬à¤°|à¤¸à¤¿à¤¤à¤‚à¤¬à¤°|à¤¸à¤¿à¤¤\.?|à¤…à¤•à¥à¤Ÿà¥‚à¤¬à¤°|à¤…à¤•à¥à¤Ÿà¥‚\.?|à¤¨à¤µà¤®à¥à¤¬à¤°|à¤¨à¤µà¤‚à¤¬à¤°|à¤¨à¤µ\.?|à¤¦à¤¿à¤¸à¤®à¥à¤¬à¤°|à¤¦à¤¿à¤¸à¤‚à¤¬à¤°|à¤¦à¤¿à¤¸\.?)/i,
              monthsStrictRegex: /^(à¤œà¤¨à¤µà¤°à¥€?|à¤«à¤¼à¤°à¤µà¤°à¥€|à¤«à¤°à¤µà¤°à¥€?|à¤®à¤¾à¤°à¥à¤š?|à¤…à¤ªà¥à¤°à¥ˆà¤²?|à¤®à¤ˆ?|à¤œà¥‚à¤¨?|à¤œà¥à¤²à¤¾à¤ˆ?|à¤…à¤—à¤¸à¥à¤¤?|à¤¸à¤¿à¤¤à¤®à¥à¤¬à¤°|à¤¸à¤¿à¤¤à¤‚à¤¬à¤°|à¤¸à¤¿à¤¤?\.?|à¤…à¤•à¥à¤Ÿà¥‚à¤¬à¤°|à¤…à¤•à¥à¤Ÿà¥‚\.?|à¤¨à¤µà¤®à¥à¤¬à¤°|à¤¨à¤µà¤‚à¤¬à¤°?|à¤¦à¤¿à¤¸à¤®à¥à¤¬à¤°|à¤¦à¤¿à¤¸à¤‚à¤¬à¤°?)/i,
              monthsShortStrictRegex: /^(à¤œà¤¨\.?|à¤«à¤¼à¤°\.?|à¤®à¤¾à¤°à¥à¤š?|à¤…à¤ªà¥à¤°à¥ˆ\.?|à¤®à¤ˆ?|à¤œà¥‚à¤¨?|à¤œà¥à¤²\.?|à¤…à¤—\.?|à¤¸à¤¿à¤¤\.?|à¤…à¤•à¥à¤Ÿà¥‚\.?|à¤¨à¤µ\.?|à¤¦à¤¿à¤¸\.?)/i,
              calendar: {
                sameDay: "[à¤†à¤œ] LT",
                nextDay: "[à¤•à¤²] LT",
                nextWeek: "dddd, LT",
                lastDay: "[à¤•à¤²] LT",
                lastWeek: "[à¤ªà¤¿à¤›à¤²à¥‡] dddd, LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s à¤®à¥‡à¤‚",
                past: "%s à¤ªà¤¹à¤²à¥‡",
                s: "à¤•à¥à¤› à¤¹à¥€ à¤•à¥à¤·à¤£",
                ss: "%d à¤¸à¥‡à¤•à¤‚à¤¡",
                m: "à¤à¤• à¤®à¤¿à¤¨à¤Ÿ",
                mm: "%d à¤®à¤¿à¤¨à¤Ÿ",
                h: "à¤à¤• à¤˜à¤‚à¤Ÿà¤¾",
                hh: "%d à¤˜à¤‚à¤Ÿà¥‡",
                d: "à¤à¤• à¤¦à¤¿à¤¨",
                dd: "%d à¤¦à¤¿à¤¨",
                M: "à¤à¤• à¤®à¤¹à¥€à¤¨à¥‡",
                MM: "%d à¤®à¤¹à¥€à¤¨à¥‡",
                y: "à¤à¤• à¤µà¤°à¥à¤·",
                yy: "%d à¤µà¤°à¥à¤·"
              },
              preparse: function (e) {
                return e.replace(
                  /[à¥§à¥¨à¥©à¥ªà¥«à¥¬à¥­à¥®à¥¯à¥¦]/g,
                  function (e) {
                    return a[e];
                  }
                );
              },
              postformat: function (e) {
                return e.replace(/\d/g, function (e) {
                  return t[e];
                });
              },
              meridiemParse: /à¤°à¤¾à¤¤|à¤¸à¥à¤¬à¤¹|à¤¦à¥‹à¤ªà¤¹à¤°|à¤¶à¤¾à¤®/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "à¤°à¤¾à¤¤" === t
                    ? e < 4
                      ? e
                      : e + 12
                    : "à¤¸à¥à¤¬à¤¹" === t
                    ? e
                    : "à¤¦à¥‹à¤ªà¤¹à¤°" === t
                    ? e >= 10
                      ? e
                      : e + 12
                    : "à¤¶à¤¾à¤®" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                return e < 4
                  ? "à¤°à¤¾à¤¤"
                  : e < 10
                  ? "à¤¸à¥à¤¬à¤¹"
                  : e < 17
                  ? "à¤¦à¥‹à¤ªà¤¹à¤°"
                  : e < 20
                  ? "à¤¶à¤¾à¤®"
                  : "à¤°à¤¾à¤¤";
              },
              week: { dow: 0, doy: 6 }
            });
          })(a(381));
        },
        316: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t, a) {
              var n = e + " ";
              switch (a) {
                case "ss":
                  return (n +=
                    1 === e
                      ? "sekunda"
                      : 2 === e || 3 === e || 4 === e
                      ? "sekunde"
                      : "sekundi");
                case "m":
                  return t ? "jedna minuta" : "jedne minute";
                case "mm":
                  return (n +=
                    1 === e
                      ? "minuta"
                      : 2 === e || 3 === e || 4 === e
                      ? "minute"
                      : "minuta");
                case "h":
                  return t ? "jedan sat" : "jednog sata";
                case "hh":
                  return (n +=
                    1 === e
                      ? "sat"
                      : 2 === e || 3 === e || 4 === e
                      ? "sata"
                      : "sati");
                case "dd":
                  return (n += 1 === e ? "dan" : "dana");
                case "MM":
                  return (n +=
                    1 === e
                      ? "mjesec"
                      : 2 === e || 3 === e || 4 === e
                      ? "mjeseca"
                      : "mjeseci");
                case "yy":
                  return (n +=
                    1 === e
                      ? "godina"
                      : 2 === e || 3 === e || 4 === e
                      ? "godine"
                      : "godina");
              }
            }
            e.defineLocale("hr", {
              months: {
                format: "sijeÄnja_veljaÄe_oÅ¾ujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca".split(
                  "_"
                ),
                standalone: "sijeÄanj_veljaÄa_oÅ¾ujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac".split(
                  "_"
                )
              },
              monthsShort: "sij._velj._oÅ¾u._tra._svi._lip._srp._kol._ruj._lis._stu._pro.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "nedjelja_ponedjeljak_utorak_srijeda_Äetvrtak_petak_subota".split(
                "_"
              ),
              weekdaysShort: "ned._pon._uto._sri._Äet._pet._sub.".split("_"),
              weekdaysMin: "ne_po_ut_sr_Äe_pe_su".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "Do MMMM YYYY",
                LLL: "Do MMMM YYYY H:mm",
                LLLL: "dddd, Do MMMM YYYY H:mm"
              },
              calendar: {
                sameDay: "[danas u] LT",
                nextDay: "[sutra u] LT",
                nextWeek: function () {
                  switch (this.day()) {
                    case 0:
                      return "[u] [nedjelju] [u] LT";
                    case 3:
                      return "[u] [srijedu] [u] LT";
                    case 6:
                      return "[u] [subotu] [u] LT";
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                      return "[u] dddd [u] LT";
                  }
                },
                lastDay: "[juÄer u] LT",
                lastWeek: function () {
                  switch (this.day()) {
                    case 0:
                      return "[proÅ¡lu] [nedjelju] [u] LT";
                    case 3:
                      return "[proÅ¡lu] [srijedu] [u] LT";
                    case 6:
                      return "[proÅ¡le] [subote] [u] LT";
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                      return "[proÅ¡li] dddd [u] LT";
                  }
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "za %s",
                past: "prije %s",
                s: "par sekundi",
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: "dan",
                dd: t,
                M: "mjesec",
                MM: t,
                y: "godinu",
                yy: t
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        2138: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = "vasÃ¡rnap hÃ©tfÅ‘n kedden szerdÃ¡n csÃ¼tÃ¶rtÃ¶kÃ¶n pÃ©nteken szombaton".split(
              " "
            );
            function a(e, t, a, n) {
              var i = e;
              switch (a) {
                case "s":
                  return n || t ? "nÃ©hÃ¡ny mÃ¡sodperc" : "nÃ©hÃ¡ny mÃ¡sodperce";
                case "ss":
                  return i + (n || t) ? " mÃ¡sodperc" : " mÃ¡sodperce";
                case "m":
                  return "egy" + (n || t ? " perc" : " perce");
                case "mm":
                  return i + (n || t ? " perc" : " perce");
                case "h":
                  return "egy" + (n || t ? " Ã³ra" : " Ã³rÃ¡ja");
                case "hh":
                  return i + (n || t ? " Ã³ra" : " Ã³rÃ¡ja");
                case "d":
                  return "egy" + (n || t ? " nap" : " napja");
                case "dd":
                  return i + (n || t ? " nap" : " napja");
                case "M":
                  return "egy" + (n || t ? " hÃ³nap" : " hÃ³napja");
                case "MM":
                  return i + (n || t ? " hÃ³nap" : " hÃ³napja");
                case "y":
                  return "egy" + (n || t ? " Ã©v" : " Ã©ve");
                case "yy":
                  return i + (n || t ? " Ã©v" : " Ã©ve");
              }
              return "";
            }
            function n(e) {
              return (e ? "" : "[mÃºlt] ") + "[" + t[this.day()] + "] LT[-kor]";
            }
            e.defineLocale("hu", {
              months: "januÃ¡r_februÃ¡r_mÃ¡rcius_Ã¡prilis_mÃ¡jus_jÃºnius_jÃºlius_augusztus_szeptember_oktÃ³ber_november_december".split(
                "_"
              ),
              monthsShort: "jan._feb._mÃ¡rc._Ã¡pr._mÃ¡j._jÃºn._jÃºl._aug._szept._okt._nov._dec.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "vasÃ¡rnap_hÃ©tfÅ‘_kedd_szerda_csÃ¼tÃ¶rtÃ¶k_pÃ©ntek_szombat".split(
                "_"
              ),
              weekdaysShort: "vas_hÃ©t_kedd_sze_csÃ¼t_pÃ©n_szo".split("_"),
              weekdaysMin: "v_h_k_sze_cs_p_szo".split("_"),
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "YYYY.MM.DD.",
                LL: "YYYY. MMMM D.",
                LLL: "YYYY. MMMM D. H:mm",
                LLLL: "YYYY. MMMM D., dddd H:mm"
              },
              meridiemParse: /de|du/i,
              isPM: function (e) {
                return "u" === e.charAt(1).toLowerCase();
              },
              meridiem: function (e, t, a) {
                return e < 12 ? (!0 === a ? "de" : "DE") : !0 === a ? "du" : "DU";
              },
              calendar: {
                sameDay: "[ma] LT[-kor]",
                nextDay: "[holnap] LT[-kor]",
                nextWeek: function () {
                  return n.call(this, !0);
                },
                lastDay: "[tegnap] LT[-kor]",
                lastWeek: function () {
                  return n.call(this, !1);
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "%s mÃºlva",
                past: "%s",
                s: a,
                ss: a,
                m: a,
                mm: a,
                h: a,
                hh: a,
                d: a,
                dd: a,
                M: a,
                MM: a,
                y: a,
                yy: a
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        1423: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("hy-am", {
              months: {
                format: "Õ°Õ¸Ö‚Õ¶Õ¾Õ¡Ö€Õ«_ÖƒÕ¥Õ¿Ö€Õ¾Õ¡Ö€Õ«_Õ´Õ¡Ö€Õ¿Õ«_Õ¡ÕºÖ€Õ«Õ¬Õ«_Õ´Õ¡ÕµÕ«Õ½Õ«_Õ°Õ¸Ö‚Õ¶Õ«Õ½Õ«_Õ°Õ¸Ö‚Õ¬Õ«Õ½Õ«_Ö…Õ£Õ¸Õ½Õ¿Õ¸Õ½Õ«_Õ½Õ¥ÕºÕ¿Õ¥Õ´Õ¢Õ¥Ö€Õ«_Õ°Õ¸Õ¯Õ¿Õ¥Õ´Õ¢Õ¥Ö€Õ«_Õ¶Õ¸ÕµÕ¥Õ´Õ¢Õ¥Ö€Õ«_Õ¤Õ¥Õ¯Õ¿Õ¥Õ´Õ¢Õ¥Ö€Õ«".split(
                  "_"
                ),
                standalone: "Õ°Õ¸Ö‚Õ¶Õ¾Õ¡Ö€_ÖƒÕ¥Õ¿Ö€Õ¾Õ¡Ö€_Õ´Õ¡Ö€Õ¿_Õ¡ÕºÖ€Õ«Õ¬_Õ´Õ¡ÕµÕ«Õ½_Õ°Õ¸Ö‚Õ¶Õ«Õ½_Õ°Õ¸Ö‚Õ¬Õ«Õ½_Ö…Õ£Õ¸Õ½Õ¿Õ¸Õ½_Õ½Õ¥ÕºÕ¿Õ¥Õ´Õ¢Õ¥Ö€_Õ°Õ¸Õ¯Õ¿Õ¥Õ´Õ¢Õ¥Ö€_Õ¶Õ¸ÕµÕ¥Õ´Õ¢Õ¥Ö€_Õ¤Õ¥Õ¯Õ¿Õ¥Õ´Õ¢Õ¥Ö€".split(
                  "_"
                )
              },
              monthsShort: "Õ°Õ¶Õ¾_ÖƒÕ¿Ö€_Õ´Ö€Õ¿_Õ¡ÕºÖ€_Õ´ÕµÕ½_Õ°Õ¶Õ½_Õ°Õ¬Õ½_Ö…Õ£Õ½_Õ½ÕºÕ¿_Õ°Õ¯Õ¿_Õ¶Õ´Õ¢_Õ¤Õ¯Õ¿".split(
                "_"
              ),
              weekdays: "Õ¯Õ«Ö€Õ¡Õ¯Õ«_Õ¥Ö€Õ¯Õ¸Ö‚Õ·Õ¡Õ¢Õ©Õ«_Õ¥Ö€Õ¥Ö„Õ·Õ¡Õ¢Õ©Õ«_Õ¹Õ¸Ö€Õ¥Ö„Õ·Õ¡Õ¢Õ©Õ«_Õ°Õ«Õ¶Õ£Õ·Õ¡Õ¢Õ©Õ«_Õ¸Ö‚Ö€Õ¢Õ¡Õ©_Õ·Õ¡Õ¢Õ¡Õ©".split(
                "_"
              ),
              weekdaysShort: "Õ¯Ö€Õ¯_Õ¥Ö€Õ¯_Õ¥Ö€Ö„_Õ¹Ö€Ö„_Õ°Õ¶Õ£_Õ¸Ö‚Ö€Õ¢_Õ·Õ¢Õ©".split(
                "_"
              ),
              weekdaysMin: "Õ¯Ö€Õ¯_Õ¥Ö€Õ¯_Õ¥Ö€Ö„_Õ¹Ö€Ö„_Õ°Õ¶Õ£_Õ¸Ö‚Ö€Õ¢_Õ·Õ¢Õ©".split(
                "_"
              ),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY Õ©.",
                LLL: "D MMMM YYYY Õ©., HH:mm",
                LLLL: "dddd, D MMMM YYYY Õ©., HH:mm"
              },
              calendar: {
                sameDay: "[Õ¡ÕµÕ½Ö…Ö€] LT",
                nextDay: "[Õ¾Õ¡Õ²Õ¨] LT",
                lastDay: "[Õ¥Ö€Õ¥Õ¯] LT",
                nextWeek: function () {
                  return "dddd [Ö…Ö€Õ¨ ÕªÕ¡Õ´Õ¨] LT";
                },
                lastWeek: function () {
                  return "[Õ¡Õ¶ÖÕ¡Õ®] dddd [Ö…Ö€Õ¨ ÕªÕ¡Õ´Õ¨] LT";
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "%s Õ°Õ¥Õ¿Õ¸",
                past: "%s Õ¡Õ¼Õ¡Õ»",
                s: "Õ´Õ« Ö„Õ¡Õ¶Õ« Õ¾Õ¡ÕµÖ€Õ¯ÕµÕ¡Õ¶",
                ss: "%d Õ¾Õ¡ÕµÖ€Õ¯ÕµÕ¡Õ¶",
                m: "Ö€Õ¸ÕºÕ¥",
                mm: "%d Ö€Õ¸ÕºÕ¥",
                h: "ÕªÕ¡Õ´",
                hh: "%d ÕªÕ¡Õ´",
                d: "Ö…Ö€",
                dd: "%d Ö…Ö€",
                M: "Õ¡Õ´Õ«Õ½",
                MM: "%d Õ¡Õ´Õ«Õ½",
                y: "Õ¿Õ¡Ö€Õ«",
                yy: "%d Õ¿Õ¡Ö€Õ«"
              },
              meridiemParse: /Õ£Õ«Õ·Õ¥Ö€Õ¾Õ¡|Õ¡Õ¼Õ¡Õ¾Õ¸Õ¿Õ¾Õ¡|ÖÕ¥Ö€Õ¥Õ¯Õ¾Õ¡|Õ¥Ö€Õ¥Õ¯Õ¸ÕµÕ¡Õ¶/,
              isPM: function (e) {
                return /^(ÖÕ¥Ö€Õ¥Õ¯Õ¾Õ¡|Õ¥Ö€Õ¥Õ¯Õ¸ÕµÕ¡Õ¶)$/.test(e);
              },
              meridiem: function (e) {
                return e < 4
                  ? "Õ£Õ«Õ·Õ¥Ö€Õ¾Õ¡"
                  : e < 12
                  ? "Õ¡Õ¼Õ¡Õ¾Õ¸Õ¿Õ¾Õ¡"
                  : e < 17
                  ? "ÖÕ¥Ö€Õ¥Õ¯Õ¾Õ¡"
                  : "Õ¥Ö€Õ¥Õ¯Õ¸ÕµÕ¡Õ¶";
              },
              dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(Õ«Õ¶|Ö€Õ¤)/,
              ordinal: function (e, t) {
                switch (t) {
                  case "DDD":
                  case "w":
                  case "W":
                  case "DDDo":
                    return 1 === e ? e + "-Õ«Õ¶" : e + "-Ö€Õ¤";
                  default:
                    return e;
                }
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        9218: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("id", {
              months: "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember".split(
                "_"
              ),
              monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des".split(
                "_"
              ),
              weekdays: "Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu".split("_"),
              weekdaysShort: "Min_Sen_Sel_Rab_Kam_Jum_Sab".split("_"),
              weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sb".split("_"),
              longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY [pukul] HH.mm",
                LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
              },
              meridiemParse: /pagi|siang|sore|malam/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "pagi" === t
                    ? e
                    : "siang" === t
                    ? e >= 11
                      ? e
                      : e + 12
                    : "sore" === t || "malam" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                return e < 11
                  ? "pagi"
                  : e < 15
                  ? "siang"
                  : e < 19
                  ? "sore"
                  : "malam";
              },
              calendar: {
                sameDay: "[Hari ini pukul] LT",
                nextDay: "[Besok pukul] LT",
                nextWeek: "dddd [pukul] LT",
                lastDay: "[Kemarin pukul] LT",
                lastWeek: "dddd [lalu pukul] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "dalam %s",
                past: "%s yang lalu",
                s: "beberapa detik",
                ss: "%d detik",
                m: "semenit",
                mm: "%d menit",
                h: "sejam",
                hh: "%d jam",
                d: "sehari",
                dd: "%d hari",
                M: "sebulan",
                MM: "%d bulan",
                y: "setahun",
                yy: "%d tahun"
              },
              week: { dow: 0, doy: 6 }
            });
          })(a(381));
        },
        135: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e) {
              return e % 100 == 11 || e % 10 != 1;
            }
            function a(e, a, n, i) {
              var r = e + " ";
              switch (n) {
                case "s":
                  return a || i ? "nokkrar sekÃºndur" : "nokkrum sekÃºndum";
                case "ss":
                  return t(e)
                    ? r + (a || i ? "sekÃºndur" : "sekÃºndum")
                    : r + "sekÃºnda";
                case "m":
                  return a ? "mÃ­nÃºta" : "mÃ­nÃºtu";
                case "mm":
                  return t(e)
                    ? r + (a || i ? "mÃ­nÃºtur" : "mÃ­nÃºtum")
                    : a
                    ? r + "mÃ­nÃºta"
                    : r + "mÃ­nÃºtu";
                case "hh":
                  return t(e)
                    ? r + (a || i ? "klukkustundir" : "klukkustundum")
                    : r + "klukkustund";
                case "d":
                  return a ? "dagur" : i ? "dag" : "degi";
                case "dd":
                  return t(e)
                    ? a
                      ? r + "dagar"
                      : r + (i ? "daga" : "dÃ¶gum")
                    : a
                    ? r + "dagur"
                    : r + (i ? "dag" : "degi");
                case "M":
                  return a ? "mÃ¡nuÃ°ur" : i ? "mÃ¡nuÃ°" : "mÃ¡nuÃ°i";
                case "MM":
                  return t(e)
                    ? a
                      ? r + "mÃ¡nuÃ°ir"
                      : r + (i ? "mÃ¡nuÃ°i" : "mÃ¡nuÃ°um")
                    : a
                    ? r + "mÃ¡nuÃ°ur"
                    : r + (i ? "mÃ¡nuÃ°" : "mÃ¡nuÃ°i");
                case "y":
                  return a || i ? "Ã¡r" : "Ã¡ri";
                case "yy":
                  return t(e)
                    ? r + (a || i ? "Ã¡r" : "Ã¡rum")
                    : r + (a || i ? "Ã¡r" : "Ã¡ri");
              }
            }
            e.defineLocale("is", {
              months: "janÃºar_febrÃºar_mars_aprÃ­l_maÃ­_jÃºnÃ­_jÃºlÃ­_Ã¡gÃºst_september_oktÃ³ber_nÃ³vember_desember".split(
                "_"
              ),
              monthsShort: "jan_feb_mar_apr_maÃ­_jÃºn_jÃºl_Ã¡gÃº_sep_okt_nÃ³v_des".split(
                "_"
              ),
              weekdays: "sunnudagur_mÃ¡nudagur_Ã¾riÃ°judagur_miÃ°vikudagur_fimmtudagur_fÃ¶studagur_laugardagur".split(
                "_"
              ),
              weekdaysShort: "sun_mÃ¡n_Ã¾ri_miÃ°_fim_fÃ¶s_lau".split("_"),
              weekdaysMin: "Su_MÃ¡_Ãžr_Mi_Fi_FÃ¶_La".split("_"),
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY [kl.] H:mm",
                LLLL: "dddd, D. MMMM YYYY [kl.] H:mm"
              },
              calendar: {
                sameDay: "[Ã­ dag kl.] LT",
                nextDay: "[Ã¡ morgun kl.] LT",
                nextWeek: "dddd [kl.] LT",
                lastDay: "[Ã­ gÃ¦r kl.] LT",
                lastWeek: "[sÃ­Ã°asta] dddd [kl.] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "eftir %s",
                past: "fyrir %s sÃ­Ã°an",
                s: a,
                ss: a,
                m: a,
                mm: a,
                h: "klukkustund",
                hh: a,
                d: a,
                dd: a,
                M: a,
                MM: a,
                y: a,
                yy: a
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        150: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("it-ch", {
              months: "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split(
                "_"
              ),
              monthsShort: "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split(
                "_"
              ),
              weekdays: "domenica_lunedÃ¬_martedÃ¬_mercoledÃ¬_giovedÃ¬_venerdÃ¬_sabato".split(
                "_"
              ),
              weekdaysShort: "dom_lun_mar_mer_gio_ven_sab".split("_"),
              weekdaysMin: "do_lu_ma_me_gi_ve_sa".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Oggi alle] LT",
                nextDay: "[Domani alle] LT",
                nextWeek: "dddd [alle] LT",
                lastDay: "[Ieri alle] LT",
                lastWeek: function () {
                  switch (this.day()) {
                    case 0:
                      return "[la scorsa] dddd [alle] LT";
                    default:
                      return "[lo scorso] dddd [alle] LT";
                  }
                },
                sameElse: "L"
              },
              relativeTime: {
                future: function (e) {
                  return (/^[0-9].+$/.test(e) ? "tra" : "in") + " " + e;
                },
                past: "%s fa",
                s: "alcuni secondi",
                ss: "%d secondi",
                m: "un minuto",
                mm: "%d minuti",
                h: "un'ora",
                hh: "%d ore",
                d: "un giorno",
                dd: "%d giorni",
                M: "un mese",
                MM: "%d mesi",
                y: "un anno",
                yy: "%d anni"
              },
              dayOfMonthOrdinalParse: /\d{1,2}Âº/,
              ordinal: "%dÂº",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        626: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("it", {
              months: "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split(
                "_"
              ),
              monthsShort: "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split(
                "_"
              ),
              weekdays: "domenica_lunedÃ¬_martedÃ¬_mercoledÃ¬_giovedÃ¬_venerdÃ¬_sabato".split(
                "_"
              ),
              weekdaysShort: "dom_lun_mar_mer_gio_ven_sab".split("_"),
              weekdaysMin: "do_lu_ma_me_gi_ve_sa".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: function () {
                  return (
                    "[Oggi a" +
                    (this.hours() > 1
                      ? "lle "
                      : 0 === this.hours()
                      ? " "
                      : "ll'") +
                    "]LT"
                  );
                },
                nextDay: function () {
                  return (
                    "[Domani a" +
                    (this.hours() > 1
                      ? "lle "
                      : 0 === this.hours()
                      ? " "
                      : "ll'") +
                    "]LT"
                  );
                },
                nextWeek: function () {
                  return (
                    "dddd [a" +
                    (this.hours() > 1
                      ? "lle "
                      : 0 === this.hours()
                      ? " "
                      : "ll'") +
                    "]LT"
                  );
                },
                lastDay: function () {
                  return (
                    "[Ieri a" +
                    (this.hours() > 1
                      ? "lle "
                      : 0 === this.hours()
                      ? " "
                      : "ll'") +
                    "]LT"
                  );
                },
                lastWeek: function () {
                  switch (this.day()) {
                    case 0:
                      return (
                        "[La scorsa] dddd [a" +
                        (this.hours() > 1
                          ? "lle "
                          : 0 === this.hours()
                          ? " "
                          : "ll'") +
                        "]LT"
                      );
                    default:
                      return (
                        "[Lo scorso] dddd [a" +
                        (this.hours() > 1
                          ? "lle "
                          : 0 === this.hours()
                          ? " "
                          : "ll'") +
                        "]LT"
                      );
                  }
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "tra %s",
                past: "%s fa",
                s: "alcuni secondi",
                ss: "%d secondi",
                m: "un minuto",
                mm: "%d minuti",
                h: "un'ora",
                hh: "%d ore",
                d: "un giorno",
                dd: "%d giorni",
                w: "una settimana",
                ww: "%d settimane",
                M: "un mese",
                MM: "%d mesi",
                y: "un anno",
                yy: "%d anni"
              },
              dayOfMonthOrdinalParse: /\d{1,2}Âº/,
              ordinal: "%dÂº",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        9183: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("ja", {
              eras: [
                {
                  since: "2019-05-01",
                  offset: 1,
                  name: "ä»¤å’Œ",
                  narrow: "ã‹¿",
                  abbr: "R"
                },
                {
                  since: "1989-01-08",
                  until: "2019-04-30",
                  offset: 1,
                  name: "å¹³æˆ",
                  narrow: "ã»",
                  abbr: "H"
                },
                {
                  since: "1926-12-25",
                  until: "1989-01-07",
                  offset: 1,
                  name: "æ˜­å’Œ",
                  narrow: "ã¼",
                  abbr: "S"
                },
                {
                  since: "1912-07-30",
                  until: "1926-12-24",
                  offset: 1,
                  name: "å¤§æ­£",
                  narrow: "ã½",
                  abbr: "T"
                },
                {
                  since: "1873-01-01",
                  until: "1912-07-29",
                  offset: 6,
                  name: "æ˜Žæ²»",
                  narrow: "ã¾",
                  abbr: "M"
                },
                {
                  since: "0001-01-01",
                  until: "1873-12-31",
                  offset: 1,
                  name: "è¥¿æš¦",
                  narrow: "AD",
                  abbr: "AD"
                },
                {
                  since: "0000-12-31",
                  until: -1 / 0,
                  offset: 1,
                  name: "ç´€å…ƒå‰",
                  narrow: "BC",
                  abbr: "BC"
                }
              ],
              eraYearOrdinalRegex: /(å…ƒ|\d+)å¹´/,
              eraYearOrdinalParse: function (e, t) {
                return "å…ƒ" === t[1] ? 1 : parseInt(t[1] || e, 10);
              },
              months: "1æœˆ_2æœˆ_3æœˆ_4æœˆ_5æœˆ_6æœˆ_7æœˆ_8æœˆ_9æœˆ_10æœˆ_11æœˆ_12æœˆ".split(
                "_"
              ),
              monthsShort: "1æœˆ_2æœˆ_3æœˆ_4æœˆ_5æœˆ_6æœˆ_7æœˆ_8æœˆ_9æœˆ_10æœˆ_11æœˆ_12æœˆ".split(
                "_"
              ),
              weekdays: "æ—¥æ›œæ—¥_æœˆæ›œæ—¥_ç«æ›œæ—¥_æ°´æ›œæ—¥_æœ¨æ›œæ—¥_é‡‘æ›œæ—¥_åœŸæ›œæ—¥".split(
                "_"
              ),
              weekdaysShort: "æ—¥_æœˆ_ç«_æ°´_æœ¨_é‡‘_åœŸ".split("_"),
              weekdaysMin: "æ—¥_æœˆ_ç«_æ°´_æœ¨_é‡‘_åœŸ".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY/MM/DD",
                LL: "YYYYå¹´MæœˆDæ—¥",
                LLL: "YYYYå¹´MæœˆDæ—¥ HH:mm",
                LLLL: "YYYYå¹´MæœˆDæ—¥ dddd HH:mm",
                l: "YYYY/MM/DD",
                ll: "YYYYå¹´MæœˆDæ—¥",
                lll: "YYYYå¹´MæœˆDæ—¥ HH:mm",
                llll: "YYYYå¹´MæœˆDæ—¥(ddd) HH:mm"
              },
              meridiemParse: /åˆå‰|åˆå¾Œ/i,
              isPM: function (e) {
                return "åˆå¾Œ" === e;
              },
              meridiem: function (e, t, a) {
                return e < 12 ? "åˆå‰" : "åˆå¾Œ";
              },
              calendar: {
                sameDay: "[ä»Šæ—¥] LT",
                nextDay: "[æ˜Žæ—¥] LT",
                nextWeek: function (e) {
                  return e.week() !== this.week() ? "[æ¥é€±]dddd LT" : "dddd LT";
                },
                lastDay: "[æ˜¨æ—¥] LT",
                lastWeek: function (e) {
                  return this.week() !== e.week() ? "[å…ˆé€±]dddd LT" : "dddd LT";
                },
                sameElse: "L"
              },
              dayOfMonthOrdinalParse: /\d{1,2}æ—¥/,
              ordinal: function (e, t) {
                switch (t) {
                  case "y":
                    return 1 === e ? "å…ƒå¹´" : e + "å¹´";
                  case "d":
                  case "D":
                  case "DDD":
                    return e + "æ—¥";
                  default:
                    return e;
                }
              },
              relativeTime: {
                future: "%så¾Œ",
                past: "%så‰",
                s: "æ•°ç§’",
                ss: "%dç§’",
                m: "1åˆ†",
                mm: "%dåˆ†",
                h: "1æ™‚é–“",
                hh: "%dæ™‚é–“",
                d: "1æ—¥",
                dd: "%dæ—¥",
                M: "1ãƒ¶æœˆ",
                MM: "%dãƒ¶æœˆ",
                y: "1å¹´",
                yy: "%då¹´"
              }
            });
          })(a(381));
        },
        4286: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("jv", {
              months: "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember".split(
                "_"
              ),
              monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des".split(
                "_"
              ),
              weekdays: "Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu".split("_"),
              weekdaysShort: "Min_Sen_Sel_Reb_Kem_Jem_Sep".split("_"),
              weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sp".split("_"),
              longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY [pukul] HH.mm",
                LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
              },
              meridiemParse: /enjing|siyang|sonten|ndalu/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "enjing" === t
                    ? e
                    : "siyang" === t
                    ? e >= 11
                      ? e
                      : e + 12
                    : "sonten" === t || "ndalu" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                return e < 11
                  ? "enjing"
                  : e < 15
                  ? "siyang"
                  : e < 19
                  ? "sonten"
                  : "ndalu";
              },
              calendar: {
                sameDay: "[Dinten puniko pukul] LT",
                nextDay: "[Mbenjang pukul] LT",
                nextWeek: "dddd [pukul] LT",
                lastDay: "[Kala wingi pukul] LT",
                lastWeek: "dddd [kepengker pukul] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "wonten ing %s",
                past: "%s ingkang kepengker",
                s: "sawetawis detik",
                ss: "%d detik",
                m: "setunggal menit",
                mm: "%d menit",
                h: "setunggal jam",
                hh: "%d jam",
                d: "sedinten",
                dd: "%d dinten",
                M: "sewulan",
                MM: "%d wulan",
                y: "setaun",
                yy: "%d taun"
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        2105: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("ka", {
              months: "áƒ˜áƒáƒœáƒ•áƒáƒ áƒ˜_áƒ—áƒ”áƒ‘áƒ”áƒ áƒ•áƒáƒšáƒ˜_áƒ›áƒáƒ áƒ¢áƒ˜_áƒáƒžáƒ áƒ˜áƒšáƒ˜_áƒ›áƒáƒ˜áƒ¡áƒ˜_áƒ˜áƒ•áƒœáƒ˜áƒ¡áƒ˜_áƒ˜áƒ•áƒšáƒ˜áƒ¡áƒ˜_áƒáƒ’áƒ•áƒ˜áƒ¡áƒ¢áƒ_áƒ¡áƒ”áƒ¥áƒ¢áƒ”áƒ›áƒ‘áƒ”áƒ áƒ˜_áƒáƒ¥áƒ¢áƒáƒ›áƒ‘áƒ”áƒ áƒ˜_áƒœáƒáƒ”áƒ›áƒ‘áƒ”áƒ áƒ˜_áƒ“áƒ”áƒ™áƒ”áƒ›áƒ‘áƒ”áƒ áƒ˜".split(
                "_"
              ),
              monthsShort: "áƒ˜áƒáƒœ_áƒ—áƒ”áƒ‘_áƒ›áƒáƒ _áƒáƒžáƒ _áƒ›áƒáƒ˜_áƒ˜áƒ•áƒœ_áƒ˜áƒ•áƒš_áƒáƒ’áƒ•_áƒ¡áƒ”áƒ¥_áƒáƒ¥áƒ¢_áƒœáƒáƒ”_áƒ“áƒ”áƒ™".split(
                "_"
              ),
              weekdays: {
                standalone: "áƒ™áƒ•áƒ˜áƒ áƒ_áƒáƒ áƒ¨áƒáƒ‘áƒáƒ—áƒ˜_áƒ¡áƒáƒ›áƒ¨áƒáƒ‘áƒáƒ—áƒ˜_áƒáƒ—áƒ®áƒ¨áƒáƒ‘áƒáƒ—áƒ˜_áƒ®áƒ£áƒ—áƒ¨áƒáƒ‘áƒáƒ—áƒ˜_áƒžáƒáƒ áƒáƒ¡áƒ™áƒ”áƒ•áƒ˜_áƒ¨áƒáƒ‘áƒáƒ—áƒ˜".split(
                  "_"
                ),
                format: "áƒ™áƒ•áƒ˜áƒ áƒáƒ¡_áƒáƒ áƒ¨áƒáƒ‘áƒáƒ—áƒ¡_áƒ¡áƒáƒ›áƒ¨áƒáƒ‘áƒáƒ—áƒ¡_áƒáƒ—áƒ®áƒ¨áƒáƒ‘áƒáƒ—áƒ¡_áƒ®áƒ£áƒ—áƒ¨áƒáƒ‘áƒáƒ—áƒ¡_áƒžáƒáƒ áƒáƒ¡áƒ™áƒ”áƒ•áƒ¡_áƒ¨áƒáƒ‘áƒáƒ—áƒ¡".split(
                  "_"
                ),
                isFormat: /(áƒ¬áƒ˜áƒœáƒ|áƒ¨áƒ”áƒ›áƒ“áƒ”áƒ’)/
              },
              weekdaysShort: "áƒ™áƒ•áƒ˜_áƒáƒ áƒ¨_áƒ¡áƒáƒ›_áƒáƒ—áƒ®_áƒ®áƒ£áƒ—_áƒžáƒáƒ _áƒ¨áƒáƒ‘".split(
                "_"
              ),
              weekdaysMin: "áƒ™áƒ•_áƒáƒ _áƒ¡áƒ_áƒáƒ—_áƒ®áƒ£_áƒžáƒ_áƒ¨áƒ".split(
                "_"
              ),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[áƒ“áƒ¦áƒ”áƒ¡] LT[-áƒ–áƒ”]",
                nextDay: "[áƒ®áƒ•áƒáƒš] LT[-áƒ–áƒ”]",
                lastDay: "[áƒ’áƒ£áƒ¨áƒ˜áƒœ] LT[-áƒ–áƒ”]",
                nextWeek: "[áƒ¨áƒ”áƒ›áƒ“áƒ”áƒ’] dddd LT[-áƒ–áƒ”]",
                lastWeek: "[áƒ¬áƒ˜áƒœáƒ] dddd LT-áƒ–áƒ”",
                sameElse: "L"
              },
              relativeTime: {
                future: function (e) {
                  return e.replace(
                    /(áƒ¬áƒáƒ›|áƒ¬áƒ£áƒ—|áƒ¡áƒáƒáƒ—|áƒ¬áƒ”áƒš|áƒ“áƒ¦|áƒ—áƒ•)(áƒ˜|áƒ”)/,
                    function (e, t, a) {
                      return "áƒ˜" === a ? t + "áƒ¨áƒ˜" : t + a + "áƒ¨áƒ˜";
                    }
                  );
                },
                past: function (e) {
                  return /(áƒ¬áƒáƒ›áƒ˜|áƒ¬áƒ£áƒ—áƒ˜|áƒ¡áƒáƒáƒ—áƒ˜|áƒ“áƒ¦áƒ”|áƒ—áƒ•áƒ”)/.test(
                    e
                  )
                    ? e.replace(/(áƒ˜|áƒ”)$/, "áƒ˜áƒ¡ áƒ¬áƒ˜áƒœ")
                    : /áƒ¬áƒ”áƒšáƒ˜/.test(e)
                    ? e.replace(/áƒ¬áƒ”áƒšáƒ˜$/, "áƒ¬áƒšáƒ˜áƒ¡ áƒ¬áƒ˜áƒœ")
                    : e;
                },
                s: "áƒ áƒáƒ›áƒ“áƒ”áƒœáƒ˜áƒ›áƒ” áƒ¬áƒáƒ›áƒ˜",
                ss: "%d áƒ¬áƒáƒ›áƒ˜",
                m: "áƒ¬áƒ£áƒ—áƒ˜",
                mm: "%d áƒ¬áƒ£áƒ—áƒ˜",
                h: "áƒ¡áƒáƒáƒ—áƒ˜",
                hh: "%d áƒ¡áƒáƒáƒ—áƒ˜",
                d: "áƒ“áƒ¦áƒ”",
                dd: "%d áƒ“áƒ¦áƒ”",
                M: "áƒ—áƒ•áƒ”",
                MM: "%d áƒ—áƒ•áƒ”",
                y: "áƒ¬áƒ”áƒšáƒ˜",
                yy: "%d áƒ¬áƒ”áƒšáƒ˜"
              },
              dayOfMonthOrdinalParse: /0|1-áƒšáƒ˜|áƒ›áƒ”-\d{1,2}|\d{1,2}-áƒ”/,
              ordinal: function (e) {
                return 0 === e
                  ? e
                  : 1 === e
                  ? e + "-áƒšáƒ˜"
                  : e < 20 || (e <= 100 && e % 20 == 0) || e % 100 == 0
                  ? "áƒ›áƒ”-" + e
                  : e + "-áƒ”";
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        7772: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
              0: "-ÑˆÑ–",
              1: "-ÑˆÑ–",
              2: "-ÑˆÑ–",
              3: "-ÑˆÑ–",
              4: "-ÑˆÑ–",
              5: "-ÑˆÑ–",
              6: "-ÑˆÑ‹",
              7: "-ÑˆÑ–",
              8: "-ÑˆÑ–",
              9: "-ÑˆÑ‹",
              10: "-ÑˆÑ‹",
              20: "-ÑˆÑ‹",
              30: "-ÑˆÑ‹",
              40: "-ÑˆÑ‹",
              50: "-ÑˆÑ–",
              60: "-ÑˆÑ‹",
              70: "-ÑˆÑ–",
              80: "-ÑˆÑ–",
              90: "-ÑˆÑ‹",
              100: "-ÑˆÑ–"
            };
            e.defineLocale("kk", {
              months: "Ò›Ð°Ò£Ñ‚Ð°Ñ€_Ð°Ò›Ð¿Ð°Ð½_Ð½Ð°ÑƒÑ€Ñ‹Ð·_ÑÓ™ÑƒÑ–Ñ€_Ð¼Ð°Ð¼Ñ‹Ñ€_Ð¼Ð°ÑƒÑÑ‹Ð¼_ÑˆÑ–Ð»Ð´Ðµ_Ñ‚Ð°Ð¼Ñ‹Ð·_Ò›Ñ‹Ñ€ÐºÒ¯Ð¹ÐµÐº_Ò›Ð°Ð·Ð°Ð½_Ò›Ð°Ñ€Ð°ÑˆÐ°_Ð¶ÐµÐ»Ñ‚Ð¾Ò›ÑÐ°Ð½".split(
                "_"
              ),
              monthsShort: "Ò›Ð°Ò£_Ð°Ò›Ð¿_Ð½Ð°Ñƒ_ÑÓ™Ñƒ_Ð¼Ð°Ð¼_Ð¼Ð°Ñƒ_ÑˆÑ–Ð»_Ñ‚Ð°Ð¼_Ò›Ñ‹Ñ€_Ò›Ð°Ð·_Ò›Ð°Ñ€_Ð¶ÐµÐ»".split(
                "_"
              ),
              weekdays: "Ð¶ÐµÐºÑÐµÐ½Ð±Ñ–_Ð´Ò¯Ð¹ÑÐµÐ½Ð±Ñ–_ÑÐµÐ¹ÑÐµÐ½Ð±Ñ–_ÑÓ™Ñ€ÑÐµÐ½Ð±Ñ–_Ð±ÐµÐ¹ÑÐµÐ½Ð±Ñ–_Ð¶Ò±Ð¼Ð°_ÑÐµÐ½Ð±Ñ–".split(
                "_"
              ),
              weekdaysShort: "Ð¶ÐµÐº_Ð´Ò¯Ð¹_ÑÐµÐ¹_ÑÓ™Ñ€_Ð±ÐµÐ¹_Ð¶Ò±Ð¼_ÑÐµÐ½".split(
                "_"
              ),
              weekdaysMin: "Ð¶Ðº_Ð´Ð¹_ÑÐ¹_ÑÑ€_Ð±Ð¹_Ð¶Ð¼_ÑÐ½".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Ð‘Ò¯Ð³Ñ–Ð½ ÑÐ°Ò“Ð°Ñ‚] LT",
                nextDay: "[Ð•Ñ€Ñ‚ÐµÒ£ ÑÐ°Ò“Ð°Ñ‚] LT",
                nextWeek: "dddd [ÑÐ°Ò“Ð°Ñ‚] LT",
                lastDay: "[ÐšÐµÑˆÐµ ÑÐ°Ò“Ð°Ñ‚] LT",
                lastWeek: "[Ó¨Ñ‚ÐºÐµÐ½ Ð°Ð¿Ñ‚Ð°Ð½Ñ‹Ò£] dddd [ÑÐ°Ò“Ð°Ñ‚] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s Ñ–ÑˆÑ–Ð½Ð´Ðµ",
                past: "%s Ð±Ò±Ñ€Ñ‹Ð½",
                s: "Ð±Ñ–Ñ€Ð½ÐµÑˆÐµ ÑÐµÐºÑƒÐ½Ð´",
                ss: "%d ÑÐµÐºÑƒÐ½Ð´",
                m: "Ð±Ñ–Ñ€ Ð¼Ð¸Ð½ÑƒÑ‚",
                mm: "%d Ð¼Ð¸Ð½ÑƒÑ‚",
                h: "Ð±Ñ–Ñ€ ÑÐ°Ò“Ð°Ñ‚",
                hh: "%d ÑÐ°Ò“Ð°Ñ‚",
                d: "Ð±Ñ–Ñ€ ÐºÒ¯Ð½",
                dd: "%d ÐºÒ¯Ð½",
                M: "Ð±Ñ–Ñ€ Ð°Ð¹",
                MM: "%d Ð°Ð¹",
                y: "Ð±Ñ–Ñ€ Ð¶Ñ‹Ð»",
                yy: "%d Ð¶Ñ‹Ð»"
              },
              dayOfMonthOrdinalParse: /\d{1,2}-(ÑˆÑ–|ÑˆÑ‹)/,
              ordinal: function (e) {
                var a = e % 10,
                  n = e >= 100 ? 100 : null;
                return e + (t[e] || t[a] || t[n]);
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        8758: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "áŸ¡",
                2: "áŸ¢",
                3: "áŸ£",
                4: "áŸ¤",
                5: "áŸ¥",
                6: "áŸ¦",
                7: "áŸ§",
                8: "áŸ¨",
                9: "áŸ©",
                0: "áŸ "
              },
              a = {
                "áŸ¡": "1",
                "áŸ¢": "2",
                "áŸ£": "3",
                "áŸ¤": "4",
                "áŸ¥": "5",
                "áŸ¦": "6",
                "áŸ§": "7",
                "áŸ¨": "8",
                "áŸ©": "9",
                "áŸ ": "0"
              };
            e.defineLocale("km", {
              months: "áž˜áž€ážšáž¶_áž€áž»áž˜áŸ’áž—áŸˆ_áž˜áž¸áž“áž¶_áž˜áŸážŸáž¶_áž§ážŸáž—áž¶_áž˜áž·ážáž»áž“áž¶_áž€áž€áŸ’áž€ážŠáž¶_ážŸáž¸áž áž¶_áž€áž‰áŸ’áž‰áž¶_ážáž»áž›áž¶_ážœáž·áž…áŸ’áž†áž·áž€áž¶_áž’áŸ’áž“áž¼".split(
                "_"
              ),
              monthsShort: "áž˜áž€ážšáž¶_áž€áž»áž˜áŸ’áž—áŸˆ_áž˜áž¸áž“áž¶_áž˜áŸážŸáž¶_áž§ážŸáž—áž¶_áž˜áž·ážáž»áž“áž¶_áž€áž€áŸ’áž€ážŠáž¶_ážŸáž¸áž áž¶_áž€áž‰áŸ’áž‰áž¶_ážáž»áž›áž¶_ážœáž·áž…áŸ’áž†áž·áž€áž¶_áž’áŸ’áž“áž¼".split(
                "_"
              ),
              weekdays: "áž¢áž¶áž‘áž·ážáŸ’áž™_áž…áŸáž“áŸ’áž‘_áž¢áž„áŸ’áž‚áž¶ážš_áž–áž»áž’_áž–áŸ’ážšáž ážŸáŸ’áž”ážáž·áŸ_ážŸáž»áž€áŸ’ážš_ážŸáŸ…ážšáŸ".split(
                "_"
              ),
              weekdaysShort: "áž¢áž¶_áž…_áž¢_áž–_áž–áŸ’ážš_ážŸáž»_ážŸ".split("_"),
              weekdaysMin: "áž¢áž¶_áž…_áž¢_áž–_áž–áŸ’ážš_ážŸáž»_ážŸ".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              meridiemParse: /áž–áŸ’ážšáž¹áž€|áž›áŸ’áž„áž¶áž…/,
              isPM: function (e) {
                return "áž›áŸ’áž„áž¶áž…" === e;
              },
              meridiem: function (e, t, a) {
                return e < 12 ? "áž–áŸ’ážšáž¹áž€" : "áž›áŸ’áž„áž¶áž…";
              },
              calendar: {
                sameDay: "[ážáŸ’áž„áŸƒáž“áŸáŸ‡ áž˜áŸ‰áŸ„áž„] LT",
                nextDay: "[ážŸáŸ’áž¢áŸ‚áž€ áž˜áŸ‰áŸ„áž„] LT",
                nextWeek: "dddd [áž˜áŸ‰áŸ„áž„] LT",
                lastDay: "[áž˜áŸ’ážŸáž·áž›áž˜áž·áž‰ áž˜áŸ‰áŸ„áž„] LT",
                lastWeek: "dddd [ážŸáž”áŸ’ážáž¶áž áŸáž˜áž»áž“] [áž˜áŸ‰áŸ„áž„] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%sáž‘áŸ€áž",
                past: "%sáž˜áž»áž“",
                s: "áž”áŸ‰áž»áž“áŸ’áž˜áž¶áž“ážœáž·áž“áž¶áž‘áž¸",
                ss: "%d ážœáž·áž“áž¶áž‘áž¸",
                m: "áž˜áž½áž™áž“áž¶áž‘áž¸",
                mm: "%d áž“áž¶áž‘áž¸",
                h: "áž˜áž½áž™áž˜áŸ‰áŸ„áž„",
                hh: "%d áž˜áŸ‰áŸ„áž„",
                d: "áž˜áž½áž™ážáŸ’áž„áŸƒ",
                dd: "%d ážáŸ’áž„áŸƒ",
                M: "áž˜áž½áž™ážáŸ‚",
                MM: "%d ážáŸ‚",
                y: "áž˜áž½áž™áž†áŸ’áž“áž¶áŸ†",
                yy: "%d áž†áŸ’áž“áž¶áŸ†"
              },
              dayOfMonthOrdinalParse: /áž‘áž¸\d{1,2}/,
              ordinal: "áž‘áž¸%d",
              preparse: function (e) {
                return e.replace(
                  /[áŸ¡áŸ¢áŸ£áŸ¤áŸ¥áŸ¦áŸ§áŸ¨áŸ©áŸ ]/g,
                  function (e) {
                    return a[e];
                  }
                );
              },
              postformat: function (e) {
                return e.replace(/\d/g, function (e) {
                  return t[e];
                });
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        9282: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "à³§",
                2: "à³¨",
                3: "à³©",
                4: "à³ª",
                5: "à³«",
                6: "à³¬",
                7: "à³­",
                8: "à³®",
                9: "à³¯",
                0: "à³¦"
              },
              a = {
                "à³§": "1",
                "à³¨": "2",
                "à³©": "3",
                "à³ª": "4",
                "à³«": "5",
                "à³¬": "6",
                "à³­": "7",
                "à³®": "8",
                "à³¯": "9",
                "à³¦": "0"
              };
            e.defineLocale("kn", {
              months: "à²œà²¨à²µà²°à²¿_à²«à³†à²¬à³à²°à²µà²°à²¿_à²®à²¾à²°à³à²šà³_à²à²ªà³à²°à²¿à²²à³_à²®à³†à³•_à²œà³‚à²¨à³_à²œà³à²²à³†à³–_à²†à²—à²¸à³à²Ÿà³_à²¸à³†à²ªà³à²Ÿà³†à²‚à²¬à²°à³_à²…à²•à³à²Ÿà³†à³‚à³•à²¬à²°à³_à²¨à²µà³†à²‚à²¬à²°à³_à²¡à²¿à²¸à³†à²‚à²¬à²°à³".split(
                "_"
              ),
              monthsShort: "à²œà²¨_à²«à³†à²¬à³à²°_à²®à²¾à²°à³à²šà³_à²à²ªà³à²°à²¿à²²à³_à²®à³†à³•_à²œà³‚à²¨à³_à²œà³à²²à³†à³–_à²†à²—à²¸à³à²Ÿà³_à²¸à³†à²ªà³à²Ÿà³†à²‚_à²…à²•à³à²Ÿà³†à³‚à³•_à²¨à²µà³†à²‚_à²¡à²¿à²¸à³†à²‚".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "à²­à²¾à²¨à³à²µà²¾à²°_à²¸à³†à³‚à³•à²®à²µà²¾à²°_à²®à²‚à²—à²³à²µà²¾à²°_à²¬à³à²§à²µà²¾à²°_à²—à³à²°à³à²µà²¾à²°_à²¶à³à²•à³à²°à²µà²¾à²°_à²¶à²¨à²¿à²µà²¾à²°".split(
                "_"
              ),
              weekdaysShort: "à²­à²¾à²¨à³_à²¸à³†à³‚à³•à²®_à²®à²‚à²—à²³_à²¬à³à²§_à²—à³à²°à³_à²¶à³à²•à³à²°_à²¶à²¨à²¿".split(
                "_"
              ),
              weekdaysMin: "à²­à²¾_à²¸à³†à³‚à³•_à²®à²‚_à²¬à³_à²—à³_à²¶à³_à²¶".split(
                "_"
              ),
              longDateFormat: {
                LT: "A h:mm",
                LTS: "A h:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm",
                LLLL: "dddd, D MMMM YYYY, A h:mm"
              },
              calendar: {
                sameDay: "[à²‡à²‚à²¦à³] LT",
                nextDay: "[à²¨à²¾à²³à³†] LT",
                nextWeek: "dddd, LT",
                lastDay: "[à²¨à²¿à²¨à³à²¨à³†] LT",
                lastWeek: "[à²•à³†à³‚à²¨à³†à²¯] dddd, LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s à²¨à²‚à²¤à²°",
                past: "%s à²¹à²¿à²‚à²¦à³†",
                s: "à²•à³†à²²à²µà³ à²•à³à²·à²£à²—à²³à³",
                ss: "%d à²¸à³†à²•à³†à²‚à²¡à³à²—à²³à³",
                m: "à²’à²‚à²¦à³ à²¨à²¿à²®à²¿à²·",
                mm: "%d à²¨à²¿à²®à²¿à²·",
                h: "à²’à²‚à²¦à³ à²—à²‚à²Ÿà³†",
                hh: "%d à²—à²‚à²Ÿà³†",
                d: "à²’à²‚à²¦à³ à²¦à²¿à²¨",
                dd: "%d à²¦à²¿à²¨",
                M: "à²’à²‚à²¦à³ à²¤à²¿à²‚à²—à²³à³",
                MM: "%d à²¤à²¿à²‚à²—à²³à³",
                y: "à²’à²‚à²¦à³ à²µà²°à³à²·",
                yy: "%d à²µà²°à³à²·"
              },
              preparse: function (e) {
                return e.replace(
                  /[à³§à³¨à³©à³ªà³«à³¬à³­à³®à³¯à³¦]/g,
                  function (e) {
                    return a[e];
                  }
                );
              },
              postformat: function (e) {
                return e.replace(/\d/g, function (e) {
                  return t[e];
                });
              },
              meridiemParse: /à²°à²¾à²¤à³à²°à²¿|à²¬à³†à²³à²¿à²—à³à²—à³†|à²®à²§à³à²¯à²¾à²¹à³à²¨|à²¸à²‚à²œà³†/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "à²°à²¾à²¤à³à²°à²¿" === t
                    ? e < 4
                      ? e
                      : e + 12
                    : "à²¬à³†à²³à²¿à²—à³à²—à³†" === t
                    ? e
                    : "à²®à²§à³à²¯à²¾à²¹à³à²¨" === t
                    ? e >= 10
                      ? e
                      : e + 12
                    : "à²¸à²‚à²œà³†" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                return e < 4
                  ? "à²°à²¾à²¤à³à²°à²¿"
                  : e < 10
                  ? "à²¬à³†à²³à²¿à²—à³à²—à³†"
                  : e < 17
                  ? "à²®à²§à³à²¯à²¾à²¹à³à²¨"
                  : e < 20
                  ? "à²¸à²‚à²œà³†"
                  : "à²°à²¾à²¤à³à²°à²¿";
              },
              dayOfMonthOrdinalParse: /\d{1,2}(à²¨à³†à³•)/,
              ordinal: function (e) {
                return e + "à²¨à³†à³•";
              },
              week: { dow: 0, doy: 6 }
            });
          })(a(381));
        },
        3730: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("ko", {
              months: "1ì›”_2ì›”_3ì›”_4ì›”_5ì›”_6ì›”_7ì›”_8ì›”_9ì›”_10ì›”_11ì›”_12ì›”".split(
                "_"
              ),
              monthsShort: "1ì›”_2ì›”_3ì›”_4ì›”_5ì›”_6ì›”_7ì›”_8ì›”_9ì›”_10ì›”_11ì›”_12ì›”".split(
                "_"
              ),
              weekdays: "ì¼ìš”ì¼_ì›”ìš”ì¼_í™”ìš”ì¼_ìˆ˜ìš”ì¼_ëª©ìš”ì¼_ê¸ˆìš”ì¼_í† ìš”ì¼".split(
                "_"
              ),
              weekdaysShort: "ì¼_ì›”_í™”_ìˆ˜_ëª©_ê¸ˆ_í† ".split("_"),
              weekdaysMin: "ì¼_ì›”_í™”_ìˆ˜_ëª©_ê¸ˆ_í† ".split("_"),
              longDateFormat: {
                LT: "A h:mm",
                LTS: "A h:mm:ss",
                L: "YYYY.MM.DD.",
                LL: "YYYYë…„ MMMM Dì¼",
                LLL: "YYYYë…„ MMMM Dì¼ A h:mm",
                LLLL: "YYYYë…„ MMMM Dì¼ dddd A h:mm",
                l: "YYYY.MM.DD.",
                ll: "YYYYë…„ MMMM Dì¼",
                lll: "YYYYë…„ MMMM Dì¼ A h:mm",
                llll: "YYYYë…„ MMMM Dì¼ dddd A h:mm"
              },
              calendar: {
                sameDay: "ì˜¤ëŠ˜ LT",
                nextDay: "ë‚´ì¼ LT",
                nextWeek: "dddd LT",
                lastDay: "ì–´ì œ LT",
                lastWeek: "ì§€ë‚œì£¼ dddd LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s í›„",
                past: "%s ì „",
                s: "ëª‡ ì´ˆ",
                ss: "%dì´ˆ",
                m: "1ë¶„",
                mm: "%dë¶„",
                h: "í•œ ì‹œê°„",
                hh: "%dì‹œê°„",
                d: "í•˜ë£¨",
                dd: "%dì¼",
                M: "í•œ ë‹¬",
                MM: "%dë‹¬",
                y: "ì¼ ë…„",
                yy: "%dë…„"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(ì¼|ì›”|ì£¼)/,
              ordinal: function (e, t) {
                switch (t) {
                  case "d":
                  case "D":
                  case "DDD":
                    return e + "ì¼";
                  case "M":
                    return e + "ì›”";
                  case "w":
                  case "W":
                    return e + "ì£¼";
                  default:
                    return e;
                }
              },
              meridiemParse: /ì˜¤ì „|ì˜¤í›„/,
              isPM: function (e) {
                return "ì˜¤í›„" === e;
              },
              meridiem: function (e, t, a) {
                return e < 12 ? "ì˜¤ì „" : "ì˜¤í›„";
              }
            });
          })(a(381));
        },
        1408: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "Ù¡",
                2: "Ù¢",
                3: "Ù£",
                4: "Ù¤",
                5: "Ù¥",
                6: "Ù¦",
                7: "Ù§",
                8: "Ù¨",
                9: "Ù©",
                0: "Ù "
              },
              a = {
                "Ù¡": "1",
                "Ù¢": "2",
                "Ù£": "3",
                "Ù¤": "4",
                "Ù¥": "5",
                "Ù¦": "6",
                "Ù§": "7",
                "Ù¨": "8",
                "Ù©": "9",
                "Ù ": "0"
              },
              n = [
                "Ú©Ø§Ù†ÙˆÙ†ÛŒ Ø¯ÙˆÙˆÛ•Ù…",
                "Ø´ÙˆØ¨Ø§Øª",
                "Ø¦Ø§Ø²Ø§Ø±",
                "Ù†ÛŒØ³Ø§Ù†",
                "Ø¦Ø§ÛŒØ§Ø±",
                "Ø­ÙˆØ²Û•ÛŒØ±Ø§Ù†",
                "ØªÛ•Ù…Ù…ÙˆØ²",
                "Ø¦Ø§Ø¨",
                "Ø¦Û•ÛŒÙ„ÙˆÙˆÙ„",
                "ØªØ´Ø±ÛŒÙ†ÛŒ ÛŒÛ•ÙƒÛ•Ù…",
                "ØªØ´Ø±ÛŒÙ†ÛŒ Ø¯ÙˆÙˆÛ•Ù…",
                "ÙƒØ§Ù†ÙˆÙ†ÛŒ ÛŒÛ•Ú©Û•Ù…"
              ];
            e.defineLocale("ku", {
              months: n,
              monthsShort: n,
              weekdays: "ÛŒÙ‡â€ŒÙƒØ´Ù‡â€ŒÙ…Ù…Ù‡â€Œ_Ø¯ÙˆÙˆØ´Ù‡â€ŒÙ…Ù…Ù‡â€Œ_Ø³ÛŽØ´Ù‡â€ŒÙ…Ù…Ù‡â€Œ_Ú†ÙˆØ§Ø±Ø´Ù‡â€ŒÙ…Ù…Ù‡â€Œ_Ù¾ÛŽÙ†Ø¬Ø´Ù‡â€ŒÙ…Ù…Ù‡â€Œ_Ù‡Ù‡â€ŒÛŒÙ†ÛŒ_Ø´Ù‡â€ŒÙ…Ù…Ù‡â€Œ".split(
                "_"
              ),
              weekdaysShort: "ÛŒÙ‡â€ŒÙƒØ´Ù‡â€ŒÙ…_Ø¯ÙˆÙˆØ´Ù‡â€ŒÙ…_Ø³ÛŽØ´Ù‡â€ŒÙ…_Ú†ÙˆØ§Ø±Ø´Ù‡â€ŒÙ…_Ù¾ÛŽÙ†Ø¬Ø´Ù‡â€ŒÙ…_Ù‡Ù‡â€ŒÛŒÙ†ÛŒ_Ø´Ù‡â€ŒÙ…Ù…Ù‡â€Œ".split(
                "_"
              ),
              weekdaysMin: "ÛŒ_Ø¯_Ø³_Ú†_Ù¾_Ù‡_Ø´".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              meridiemParse: /Ø¦ÛŽÙˆØ§Ø±Ù‡â€Œ|Ø¨Ù‡â€ŒÛŒØ§Ù†ÛŒ/,
              isPM: function (e) {
                return /Ø¦ÛŽÙˆØ§Ø±Ù‡â€Œ/.test(e);
              },
              meridiem: function (e, t, a) {
                return e < 12 ? "Ø¨Ù‡â€ŒÛŒØ§Ù†ÛŒ" : "Ø¦ÛŽÙˆØ§Ø±Ù‡â€Œ";
              },
              calendar: {
                sameDay: "[Ø¦Ù‡â€ŒÙ…Ø±Û† ÙƒØ§ØªÚ˜Ù…ÛŽØ±] LT",
                nextDay: "[Ø¨Ù‡â€ŒÛŒØ§Ù†ÛŒ ÙƒØ§ØªÚ˜Ù…ÛŽØ±] LT",
                nextWeek: "dddd [ÙƒØ§ØªÚ˜Ù…ÛŽØ±] LT",
                lastDay: "[Ø¯ÙˆÛŽÙ†ÛŽ ÙƒØ§ØªÚ˜Ù…ÛŽØ±] LT",
                lastWeek: "dddd [ÙƒØ§ØªÚ˜Ù…ÛŽØ±] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "Ù„Ù‡â€Œ %s",
                past: "%s",
                s: "Ú†Ù‡â€ŒÙ†Ø¯ Ú†Ø±ÙƒÙ‡â€ŒÛŒÙ‡â€ŒÙƒ",
                ss: "Ú†Ø±ÙƒÙ‡â€Œ %d",
                m: "ÛŒÙ‡â€ŒÙƒ Ø®ÙˆÙ„Ù‡â€ŒÙƒ",
                mm: "%d Ø®ÙˆÙ„Ù‡â€ŒÙƒ",
                h: "ÛŒÙ‡â€ŒÙƒ ÙƒØ§ØªÚ˜Ù…ÛŽØ±",
                hh: "%d ÙƒØ§ØªÚ˜Ù…ÛŽØ±",
                d: "ÛŒÙ‡â€ŒÙƒ Ú•Û†Ú˜",
                dd: "%d Ú•Û†Ú˜",
                M: "ÛŒÙ‡â€ŒÙƒ Ù…Ø§Ù†Ú¯",
                MM: "%d Ù…Ø§Ù†Ú¯",
                y: "ÛŒÙ‡â€ŒÙƒ Ø³Ø§Úµ",
                yy: "%d Ø³Ø§Úµ"
              },
              preparse: function (e) {
                return e
                  .replace(/[Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©Ù ]/g, function (e) {
                    return a[e];
                  })
                  .replace(/ØŒ/g, ",");
              },
              postformat: function (e) {
                return e
                  .replace(/\d/g, function (e) {
                    return t[e];
                  })
                  .replace(/,/g, "ØŒ");
              },
              week: { dow: 6, doy: 12 }
            });
          })(a(381));
        },
        3291: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
              0: "-Ñ‡Ò¯",
              1: "-Ñ‡Ð¸",
              2: "-Ñ‡Ð¸",
              3: "-Ñ‡Ò¯",
              4: "-Ñ‡Ò¯",
              5: "-Ñ‡Ð¸",
              6: "-Ñ‡Ñ‹",
              7: "-Ñ‡Ð¸",
              8: "-Ñ‡Ð¸",
              9: "-Ñ‡Ñƒ",
              10: "-Ñ‡Ñƒ",
              20: "-Ñ‡Ñ‹",
              30: "-Ñ‡Ñƒ",
              40: "-Ñ‡Ñ‹",
              50: "-Ñ‡Ò¯",
              60: "-Ñ‡Ñ‹",
              70: "-Ñ‡Ð¸",
              80: "-Ñ‡Ð¸",
              90: "-Ñ‡Ñƒ",
              100: "-Ñ‡Ò¯"
            };
            e.defineLocale("ky", {
              months: "ÑÐ½Ð²Ð°Ñ€ÑŒ_Ñ„ÐµÐ²Ñ€Ð°Ð»ÑŒ_Ð¼Ð°Ñ€Ñ‚_Ð°Ð¿Ñ€ÐµÐ»ÑŒ_Ð¼Ð°Ð¹_Ð¸ÑŽÐ½ÑŒ_Ð¸ÑŽÐ»ÑŒ_Ð°Ð²Ð³ÑƒÑÑ‚_ÑÐµÐ½Ñ‚ÑÐ±Ñ€ÑŒ_Ð¾ÐºÑ‚ÑÐ±Ñ€ÑŒ_Ð½Ð¾ÑÐ±Ñ€ÑŒ_Ð´ÐµÐºÐ°Ð±Ñ€ÑŒ".split(
                "_"
              ),
              monthsShort: "ÑÐ½Ð²_Ñ„ÐµÐ²_Ð¼Ð°Ñ€Ñ‚_Ð°Ð¿Ñ€_Ð¼Ð°Ð¹_Ð¸ÑŽÐ½ÑŒ_Ð¸ÑŽÐ»ÑŒ_Ð°Ð²Ð³_ÑÐµÐ½_Ð¾ÐºÑ‚_Ð½Ð¾Ñ_Ð´ÐµÐº".split(
                "_"
              ),
              weekdays: "Ð–ÐµÐºÑˆÐµÐ¼Ð±Ð¸_Ð”Ò¯Ð¹ÑˆÓ©Ð¼Ð±Ò¯_Ð¨ÐµÐ¹ÑˆÐµÐ¼Ð±Ð¸_Ð¨Ð°Ñ€ÑˆÐµÐ¼Ð±Ð¸_Ð‘ÐµÐ¹ÑˆÐµÐ¼Ð±Ð¸_Ð–ÑƒÐ¼Ð°_Ð˜ÑˆÐµÐ¼Ð±Ð¸".split(
                "_"
              ),
              weekdaysShort: "Ð–ÐµÐº_Ð”Ò¯Ð¹_Ð¨ÐµÐ¹_Ð¨Ð°Ñ€_Ð‘ÐµÐ¹_Ð–ÑƒÐ¼_Ð˜ÑˆÐµ".split(
                "_"
              ),
              weekdaysMin: "Ð–Ðº_Ð”Ð¹_Ð¨Ð¹_Ð¨Ñ€_Ð‘Ð¹_Ð–Ð¼_Ð˜Ñˆ".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Ð‘Ò¯Ð³Ò¯Ð½ ÑÐ°Ð°Ñ‚] LT",
                nextDay: "[Ð­Ñ€Ñ‚ÐµÒ£ ÑÐ°Ð°Ñ‚] LT",
                nextWeek: "dddd [ÑÐ°Ð°Ñ‚] LT",
                lastDay: "[ÐšÐµÑ‡ÑÑ ÑÐ°Ð°Ñ‚] LT",
                lastWeek:
                  "[Ó¨Ñ‚ÐºÓ©Ð½ Ð°Ð¿Ñ‚Ð°Ð½Ñ‹Ð½] dddd [ÐºÒ¯Ð½Ò¯] [ÑÐ°Ð°Ñ‚] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s Ð¸Ñ‡Ð¸Ð½Ð´Ðµ",
                past: "%s Ð¼ÑƒÑ€ÑƒÐ½",
                s: "Ð±Ð¸Ñ€Ð½ÐµÑ‡Ðµ ÑÐµÐºÑƒÐ½Ð´",
                ss: "%d ÑÐµÐºÑƒÐ½Ð´",
                m: "Ð±Ð¸Ñ€ Ð¼Ò¯Ð½Ó©Ñ‚",
                mm: "%d Ð¼Ò¯Ð½Ó©Ñ‚",
                h: "Ð±Ð¸Ñ€ ÑÐ°Ð°Ñ‚",
                hh: "%d ÑÐ°Ð°Ñ‚",
                d: "Ð±Ð¸Ñ€ ÐºÒ¯Ð½",
                dd: "%d ÐºÒ¯Ð½",
                M: "Ð±Ð¸Ñ€ Ð°Ð¹",
                MM: "%d Ð°Ð¹",
                y: "Ð±Ð¸Ñ€ Ð¶Ñ‹Ð»",
                yy: "%d Ð¶Ñ‹Ð»"
              },
              dayOfMonthOrdinalParse: /\d{1,2}-(Ñ‡Ð¸|Ñ‡Ñ‹|Ñ‡Ò¯|Ñ‡Ñƒ)/,
              ordinal: function (e) {
                var a = e % 10,
                  n = e >= 100 ? 100 : null;
                return e + (t[e] || t[a] || t[n]);
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        6841: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t, a, n) {
              var i = {
                m: ["eng Minutt", "enger Minutt"],
                h: ["eng Stonn", "enger Stonn"],
                d: ["een Dag", "engem Dag"],
                M: ["ee Mount", "engem Mount"],
                y: ["ee Joer", "engem Joer"]
              };
              return t ? i[a][0] : i[a][1];
            }
            function a(e) {
              return i(e.substr(0, e.indexOf(" "))) ? "a " + e : "an " + e;
            }
            function n(e) {
              return i(e.substr(0, e.indexOf(" "))) ? "viru " + e : "virun " + e;
            }
            function i(e) {
              if (((e = parseInt(e, 10)), isNaN(e))) return !1;
              if (e < 0) return !0;
              if (e < 10) return 4 <= e && e <= 7;
              if (e < 100) {
                var t = e % 10;
                return i(0 === t ? e / 10 : t);
              }
              if (e < 1e4) {
                for (; e >= 10; ) e /= 10;
                return i(e);
              }
              return i((e /= 1e3));
            }
            e.defineLocale("lb", {
              months: "Januar_Februar_MÃ¤erz_AbrÃ«ll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split(
                "_"
              ),
              monthsShort: "Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "Sonndeg_MÃ©indeg_DÃ«nschdeg_MÃ«ttwoch_Donneschdeg_Freideg_Samschdeg".split(
                "_"
              ),
              weekdaysShort: "So._MÃ©._DÃ«._MÃ«._Do._Fr._Sa.".split("_"),
              weekdaysMin: "So_MÃ©_DÃ«_MÃ«_Do_Fr_Sa".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "H:mm [Auer]",
                LTS: "H:mm:ss [Auer]",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm [Auer]",
                LLLL: "dddd, D. MMMM YYYY H:mm [Auer]"
              },
              calendar: {
                sameDay: "[Haut um] LT",
                sameElse: "L",
                nextDay: "[Muer um] LT",
                nextWeek: "dddd [um] LT",
                lastDay: "[GÃ«schter um] LT",
                lastWeek: function () {
                  switch (this.day()) {
                    case 2:
                    case 4:
                      return "[Leschten] dddd [um] LT";
                    default:
                      return "[Leschte] dddd [um] LT";
                  }
                }
              },
              relativeTime: {
                future: a,
                past: n,
                s: "e puer Sekonnen",
                ss: "%d Sekonnen",
                m: t,
                mm: "%d Minutten",
                h: t,
                hh: "%d Stonnen",
                d: t,
                dd: "%d Deeg",
                M: t,
                MM: "%d MÃ©int",
                y: t,
                yy: "%d Joer"
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        5466: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("lo", {
              months: "àº¡àº±àº‡àºàº­àº™_àºàº¸àº¡àºžàº²_àº¡àºµàº™àº²_à»€àº¡àºªàº²_àºžàº¶àº”àºªàº°àºžàº²_àº¡àº´àº–àº¸àº™àº²_àºà»àº¥àº°àºàº»àº”_àºªàº´àº‡àº«àº²_àºàº±àº™àºàº²_àº•àº¸àº¥àº²_àºžàº°àºˆàº´àº_àº—àº±àº™àº§àº²".split(
                "_"
              ),
              monthsShort: "àº¡àº±àº‡àºàº­àº™_àºàº¸àº¡àºžàº²_àº¡àºµàº™àº²_à»€àº¡àºªàº²_àºžàº¶àº”àºªàº°àºžàº²_àº¡àº´àº–àº¸àº™àº²_àºà»àº¥àº°àºàº»àº”_àºªàº´àº‡àº«àº²_àºàº±àº™àºàº²_àº•àº¸àº¥àº²_àºžàº°àºˆàº´àº_àº—àº±àº™àº§àº²".split(
                "_"
              ),
              weekdays: "àº­àº²àº—àº´àº”_àºˆàº±àº™_àº­àº±àº‡àº„àº²àº™_àºžàº¸àº”_àºžàº°àº«àº±àº”_àºªàº¸àº_à»€àºªàº»àº²".split(
                "_"
              ),
              weekdaysShort: "àº—àº´àº”_àºˆàº±àº™_àº­àº±àº‡àº„àº²àº™_àºžàº¸àº”_àºžàº°àº«àº±àº”_àºªàº¸àº_à»€àºªàº»àº²".split(
                "_"
              ),
              weekdaysMin: "àº—_àºˆ_àº­àº„_àºž_àºžàº«_àºªàº_àºª".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "àº§àº±àº™dddd D MMMM YYYY HH:mm"
              },
              meridiemParse: /àº•àº­àº™à»€àºŠàº»à»‰àº²|àº•àº­àº™à»àº¥àº‡/,
              isPM: function (e) {
                return "àº•àº­àº™à»àº¥àº‡" === e;
              },
              meridiem: function (e, t, a) {
                return e < 12 ? "àº•àº­àº™à»€àºŠàº»à»‰àº²" : "àº•àº­àº™à»àº¥àº‡";
              },
              calendar: {
                sameDay: "[àº¡àº·à»‰àº™àºµà»‰à»€àº§àº¥àº²] LT",
                nextDay: "[àº¡àº·à»‰àº­àº·à»ˆàº™à»€àº§àº¥àº²] LT",
                nextWeek: "[àº§àº±àº™]dddd[à»œà»‰àº²à»€àº§àº¥àº²] LT",
                lastDay: "[àº¡àº·à»‰àº§àº²àº™àº™àºµà»‰à»€àº§àº¥àº²] LT",
                lastWeek: "[àº§àº±àº™]dddd[à»àº¥à»‰àº§àº™àºµà»‰à»€àº§àº¥àº²] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "àº­àºµàº %s",
                past: "%sàºœà»ˆàº²àº™àº¡àº²",
                s: "àºšà»à»ˆà»€àº—àº»à»ˆàº²à»ƒàº”àº§àº´àº™àº²àº—àºµ",
                ss: "%d àº§àº´àº™àº²àº—àºµ",
                m: "1 àº™àº²àº—àºµ",
                mm: "%d àº™àº²àº—àºµ",
                h: "1 àºŠàº»à»ˆàº§à»‚àº¡àº‡",
                hh: "%d àºŠàº»à»ˆàº§à»‚àº¡àº‡",
                d: "1 àº¡àº·à»‰",
                dd: "%d àº¡àº·à»‰",
                M: "1 à»€àº”àº·àº­àº™",
                MM: "%d à»€àº”àº·àº­àº™",
                y: "1 àº›àºµ",
                yy: "%d àº›àºµ"
              },
              dayOfMonthOrdinalParse: /(àº—àºµà»ˆ)\d{1,2}/,
              ordinal: function (e) {
                return "àº—àºµà»ˆ" + e;
              }
            });
          })(a(381));
        },
        7010: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
              ss: "sekundÄ—_sekundÅ¾iÅ³_sekundes",
              m: "minutÄ—_minutÄ—s_minutÄ™",
              mm: "minutÄ—s_minuÄiÅ³_minutes",
              h: "valanda_valandos_valandÄ…",
              hh: "valandos_valandÅ³_valandas",
              d: "diena_dienos_dienÄ…",
              dd: "dienos_dienÅ³_dienas",
              M: "mÄ—nuo_mÄ—nesio_mÄ—nesÄ¯",
              MM: "mÄ—nesiai_mÄ—nesiÅ³_mÄ—nesius",
              y: "metai_metÅ³_metus",
              yy: "metai_metÅ³_metus"
            };
            function a(e, t, a, n) {
              return t
                ? "kelios sekundÄ—s"
                : n
                ? "keliÅ³ sekundÅ¾iÅ³"
                : "kelias sekundes";
            }
            function n(e, t, a, n) {
              return t ? r(a)[0] : n ? r(a)[1] : r(a)[2];
            }
            function i(e) {
              return e % 10 == 0 || (e > 10 && e < 20);
            }
            function r(e) {
              return t[e].split("_");
            }
            function s(e, t, a, s) {
              var o = e + " ";
              return 1 === e
                ? o + n(e, t, a[0], s)
                : t
                ? o + (i(e) ? r(a)[1] : r(a)[0])
                : s
                ? o + r(a)[1]
                : o + (i(e) ? r(a)[1] : r(a)[2]);
            }
            e.defineLocale("lt", {
              months: {
                format: "sausio_vasario_kovo_balandÅ¾io_geguÅ¾Ä—s_birÅ¾elio_liepos_rugpjÅ«Äio_rugsÄ—jo_spalio_lapkriÄio_gruodÅ¾io".split(
                  "_"
                ),
                standalone: "sausis_vasaris_kovas_balandis_geguÅ¾Ä—_birÅ¾elis_liepa_rugpjÅ«tis_rugsÄ—jis_spalis_lapkritis_gruodis".split(
                  "_"
                ),
                isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
              },
              monthsShort: "sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd".split(
                "_"
              ),
              weekdays: {
                format: "sekmadienÄ¯_pirmadienÄ¯_antradienÄ¯_treÄiadienÄ¯_ketvirtadienÄ¯_penktadienÄ¯_Å¡eÅ¡tadienÄ¯".split(
                  "_"
                ),
                standalone: "sekmadienis_pirmadienis_antradienis_treÄiadienis_ketvirtadienis_penktadienis_Å¡eÅ¡tadienis".split(
                  "_"
                ),
                isFormat: /dddd HH:mm/
              },
              weekdaysShort: "Sek_Pir_Ant_Tre_Ket_Pen_Å eÅ¡".split("_"),
              weekdaysMin: "S_P_A_T_K_Pn_Å ".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "YYYY [m.] MMMM D [d.]",
                LLL: "YYYY [m.] MMMM D [d.], HH:mm [val.]",
                LLLL: "YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]",
                l: "YYYY-MM-DD",
                ll: "YYYY [m.] MMMM D [d.]",
                lll: "YYYY [m.] MMMM D [d.], HH:mm [val.]",
                llll: "YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]"
              },
              calendar: {
                sameDay: "[Å iandien] LT",
                nextDay: "[Rytoj] LT",
                nextWeek: "dddd LT",
                lastDay: "[Vakar] LT",
                lastWeek: "[PraÄ—jusÄ¯] dddd LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "po %s",
                past: "prieÅ¡ %s",
                s: a,
                ss: s,
                m: n,
                mm: s,
                h: n,
                hh: s,
                d: n,
                dd: s,
                M: n,
                MM: s,
                y: n,
                yy: s
              },
              dayOfMonthOrdinalParse: /\d{1,2}-oji/,
              ordinal: function (e) {
                return e + "-oji";
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        7595: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
              ss: "sekundes_sekundÄ“m_sekunde_sekundes".split("_"),
              m: "minÅ«tes_minÅ«tÄ“m_minÅ«te_minÅ«tes".split("_"),
              mm: "minÅ«tes_minÅ«tÄ“m_minÅ«te_minÅ«tes".split("_"),
              h: "stundas_stundÄm_stunda_stundas".split("_"),
              hh: "stundas_stundÄm_stunda_stundas".split("_"),
              d: "dienas_dienÄm_diena_dienas".split("_"),
              dd: "dienas_dienÄm_diena_dienas".split("_"),
              M: "mÄ“neÅ¡a_mÄ“neÅ¡iem_mÄ“nesis_mÄ“neÅ¡i".split("_"),
              MM: "mÄ“neÅ¡a_mÄ“neÅ¡iem_mÄ“nesis_mÄ“neÅ¡i".split("_"),
              y: "gada_gadiem_gads_gadi".split("_"),
              yy: "gada_gadiem_gads_gadi".split("_")
            };
            function a(e, t, a) {
              return a
                ? t % 10 == 1 && t % 100 != 11
                  ? e[2]
                  : e[3]
                : t % 10 == 1 && t % 100 != 11
                ? e[0]
                : e[1];
            }
            function n(e, n, i) {
              return e + " " + a(t[i], e, n);
            }
            function i(e, n, i) {
              return a(t[i], e, n);
            }
            function r(e, t) {
              return t ? "daÅ¾as sekundes" : "daÅ¾Äm sekundÄ“m";
            }
            e.defineLocale("lv", {
              months: "janvÄris_februÄris_marts_aprÄ«lis_maijs_jÅ«nijs_jÅ«lijs_augusts_septembris_oktobris_novembris_decembris".split(
                "_"
              ),
              monthsShort: "jan_feb_mar_apr_mai_jÅ«n_jÅ«l_aug_sep_okt_nov_dec".split(
                "_"
              ),
              weekdays: "svÄ“tdiena_pirmdiena_otrdiena_treÅ¡diena_ceturtdiena_piektdiena_sestdiena".split(
                "_"
              ),
              weekdaysShort: "Sv_P_O_T_C_Pk_S".split("_"),
              weekdaysMin: "Sv_P_O_T_C_Pk_S".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY.",
                LL: "YYYY. [gada] D. MMMM",
                LLL: "YYYY. [gada] D. MMMM, HH:mm",
                LLLL: "YYYY. [gada] D. MMMM, dddd, HH:mm"
              },
              calendar: {
                sameDay: "[Å odien pulksten] LT",
                nextDay: "[RÄ«t pulksten] LT",
                nextWeek: "dddd [pulksten] LT",
                lastDay: "[Vakar pulksten] LT",
                lastWeek: "[PagÄjuÅ¡Ä] dddd [pulksten] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "pÄ“c %s",
                past: "pirms %s",
                s: r,
                ss: n,
                m: i,
                mm: n,
                h: i,
                hh: n,
                d: i,
                dd: n,
                M: i,
                MM: n,
                y: i,
                yy: n
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        9861: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
              words: {
                ss: ["sekund", "sekunda", "sekundi"],
                m: ["jedan minut", "jednog minuta"],
                mm: ["minut", "minuta", "minuta"],
                h: ["jedan sat", "jednog sata"],
                hh: ["sat", "sata", "sati"],
                dd: ["dan", "dana", "dana"],
                MM: ["mjesec", "mjeseca", "mjeseci"],
                yy: ["godina", "godine", "godina"]
              },
              correctGrammaticalCase: function (e, t) {
                return 1 === e ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2];
              },
              translate: function (e, a, n) {
                var i = t.words[n];
                return 1 === n.length
                  ? a
                    ? i[0]
                    : i[1]
                  : e + " " + t.correctGrammaticalCase(e, i);
              }
            };
            e.defineLocale("me", {
              months: "januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split(
                "_"
              ),
              monthsShort: "jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "nedjelja_ponedjeljak_utorak_srijeda_Äetvrtak_petak_subota".split(
                "_"
              ),
              weekdaysShort: "ned._pon._uto._sri._Äet._pet._sub.".split("_"),
              weekdaysMin: "ne_po_ut_sr_Äe_pe_su".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
              },
              calendar: {
                sameDay: "[danas u] LT",
                nextDay: "[sjutra u] LT",
                nextWeek: function () {
                  switch (this.day()) {
                    case 0:
                      return "[u] [nedjelju] [u] LT";
                    case 3:
                      return "[u] [srijedu] [u] LT";
                    case 6:
                      return "[u] [subotu] [u] LT";
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                      return "[u] dddd [u] LT";
                  }
                },
                lastDay: "[juÄe u] LT",
                lastWeek: function () {
                  return [
                    "[proÅ¡le] [nedjelje] [u] LT",
                    "[proÅ¡log] [ponedjeljka] [u] LT",
                    "[proÅ¡log] [utorka] [u] LT",
                    "[proÅ¡le] [srijede] [u] LT",
                    "[proÅ¡log] [Äetvrtka] [u] LT",
                    "[proÅ¡log] [petka] [u] LT",
                    "[proÅ¡le] [subote] [u] LT"
                  ][this.day()];
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "za %s",
                past: "prije %s",
                s: "nekoliko sekundi",
                ss: t.translate,
                m: t.translate,
                mm: t.translate,
                h: t.translate,
                hh: t.translate,
                d: "dan",
                dd: t.translate,
                M: "mjesec",
                MM: t.translate,
                y: "godinu",
                yy: t.translate
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        5493: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("mi", {
              months: "Kohi-tÄte_Hui-tanguru_PoutÅ«-te-rangi_Paenga-whÄwhÄ_Haratua_Pipiri_HÅngoingoi_Here-turi-kÅkÄ_Mahuru_Whiringa-Ä-nuku_Whiringa-Ä-rangi_Hakihea".split(
                "_"
              ),
              monthsShort: "Kohi_Hui_Pou_Pae_Hara_Pipi_HÅngoi_Here_Mahu_Whi-nu_Whi-ra_Haki".split(
                "_"
              ),
              monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
              monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
              monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
              monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
              weekdays: "RÄtapu_Mane_TÅ«rei_Wenerei_TÄite_Paraire_HÄtarei".split(
                "_"
              ),
              weekdaysShort: "Ta_Ma_TÅ«_We_TÄi_Pa_HÄ".split("_"),
              weekdaysMin: "Ta_Ma_TÅ«_We_TÄi_Pa_HÄ".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY [i] HH:mm",
                LLLL: "dddd, D MMMM YYYY [i] HH:mm"
              },
              calendar: {
                sameDay: "[i teie mahana, i] LT",
                nextDay: "[apopo i] LT",
                nextWeek: "dddd [i] LT",
                lastDay: "[inanahi i] LT",
                lastWeek: "dddd [whakamutunga i] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "i roto i %s",
                past: "%s i mua",
                s: "te hÄ“kona ruarua",
                ss: "%d hÄ“kona",
                m: "he meneti",
                mm: "%d meneti",
                h: "te haora",
                hh: "%d haora",
                d: "he ra",
                dd: "%d ra",
                M: "he marama",
                MM: "%d marama",
                y: "he tau",
                yy: "%d tau"
              },
              dayOfMonthOrdinalParse: /\d{1,2}Âº/,
              ordinal: "%dÂº",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        5966: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("mk", {
              months: "Ñ˜Ð°Ð½ÑƒÐ°Ñ€Ð¸_Ñ„ÐµÐ²Ñ€ÑƒÐ°Ñ€Ð¸_Ð¼Ð°Ñ€Ñ‚_Ð°Ð¿Ñ€Ð¸Ð»_Ð¼Ð°Ñ˜_Ñ˜ÑƒÐ½Ð¸_Ñ˜ÑƒÐ»Ð¸_Ð°Ð²Ð³ÑƒÑÑ‚_ÑÐµÐ¿Ñ‚ÐµÐ¼Ð²Ñ€Ð¸_Ð¾ÐºÑ‚Ð¾Ð¼Ð²Ñ€Ð¸_Ð½Ð¾ÐµÐ¼Ð²Ñ€Ð¸_Ð´ÐµÐºÐµÐ¼Ð²Ñ€Ð¸".split(
                "_"
              ),
              monthsShort: "Ñ˜Ð°Ð½_Ñ„ÐµÐ²_Ð¼Ð°Ñ€_Ð°Ð¿Ñ€_Ð¼Ð°Ñ˜_Ñ˜ÑƒÐ½_Ñ˜ÑƒÐ»_Ð°Ð²Ð³_ÑÐµÐ¿_Ð¾ÐºÑ‚_Ð½Ð¾Ðµ_Ð´ÐµÐº".split(
                "_"
              ),
              weekdays: "Ð½ÐµÐ´ÐµÐ»Ð°_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»Ð½Ð¸Ðº_Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº_ÑÑ€ÐµÐ´Ð°_Ñ‡ÐµÑ‚Ð²Ñ€Ñ‚Ð¾Ðº_Ð¿ÐµÑ‚Ð¾Ðº_ÑÐ°Ð±Ð¾Ñ‚Ð°".split(
                "_"
              ),
              weekdaysShort: "Ð½ÐµÐ´_Ð¿Ð¾Ð½_Ð²Ñ‚Ð¾_ÑÑ€Ðµ_Ñ‡ÐµÑ‚_Ð¿ÐµÑ‚_ÑÐ°Ð±".split(
                "_"
              ),
              weekdaysMin: "Ð½e_Ð¿o_Ð²Ñ‚_ÑÑ€_Ñ‡Ðµ_Ð¿Ðµ_Ña".split("_"),
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "D.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY H:mm",
                LLLL: "dddd, D MMMM YYYY H:mm"
              },
              calendar: {
                sameDay: "[Ð”ÐµÐ½ÐµÑ Ð²Ð¾] LT",
                nextDay: "[Ð£Ñ‚Ñ€Ðµ Ð²Ð¾] LT",
                nextWeek: "[Ð’Ð¾] dddd [Ð²Ð¾] LT",
                lastDay: "[Ð’Ñ‡ÐµÑ€Ð° Ð²Ð¾] LT",
                lastWeek: function () {
                  switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                      return "[Ð˜Ð·Ð¼Ð¸Ð½Ð°Ñ‚Ð°Ñ‚Ð°] dddd [Ð²Ð¾] LT";
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                      return "[Ð˜Ð·Ð¼Ð¸Ð½Ð°Ñ‚Ð¸Ð¾Ñ‚] dddd [Ð²Ð¾] LT";
                  }
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "Ð·Ð° %s",
                past: "Ð¿Ñ€ÐµÐ´ %s",
                s: "Ð½ÐµÐºÐ¾Ð»ÐºÑƒ ÑÐµÐºÑƒÐ½Ð´Ð¸",
                ss: "%d ÑÐµÐºÑƒÐ½Ð´Ð¸",
                m: "ÐµÐ´Ð½Ð° Ð¼Ð¸Ð½ÑƒÑ‚Ð°",
                mm: "%d Ð¼Ð¸Ð½ÑƒÑ‚Ð¸",
                h: "ÐµÐ´ÐµÐ½ Ñ‡Ð°Ñ",
                hh: "%d Ñ‡Ð°ÑÐ°",
                d: "ÐµÐ´ÐµÐ½ Ð´ÐµÐ½",
                dd: "%d Ð´ÐµÐ½Ð°",
                M: "ÐµÐ´ÐµÐ½ Ð¼ÐµÑÐµÑ†",
                MM: "%d Ð¼ÐµÑÐµÑ†Ð¸",
                y: "ÐµÐ´Ð½Ð° Ð³Ð¾Ð´Ð¸Ð½Ð°",
                yy: "%d Ð³Ð¾Ð´Ð¸Ð½Ð¸"
              },
              dayOfMonthOrdinalParse: /\d{1,2}-(ÐµÐ²|ÐµÐ½|Ñ‚Ð¸|Ð²Ð¸|Ñ€Ð¸|Ð¼Ð¸)/,
              ordinal: function (e) {
                var t = e % 10,
                  a = e % 100;
                return 0 === e
                  ? e + "-ÐµÐ²"
                  : 0 === a
                  ? e + "-ÐµÐ½"
                  : a > 10 && a < 20
                  ? e + "-Ñ‚Ð¸"
                  : 1 === t
                  ? e + "-Ð²Ð¸"
                  : 2 === t
                  ? e + "-Ñ€Ð¸"
                  : 7 === t || 8 === t
                  ? e + "-Ð¼Ð¸"
                  : e + "-Ñ‚Ð¸";
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        7341: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("ml", {
              months: "à´œà´¨àµà´µà´°à´¿_à´«àµ†à´¬àµà´°àµà´µà´°à´¿_à´®à´¾àµ¼à´šàµà´šàµ_à´à´ªàµà´°à´¿àµ½_à´®àµ‡à´¯àµ_à´œàµ‚àµº_à´œàµ‚à´²àµˆ_à´“à´—à´¸àµà´±àµà´±àµ_à´¸àµ†à´ªàµà´±àµà´±à´‚à´¬àµ¼_à´’à´•àµà´Ÿàµ‹à´¬àµ¼_à´¨à´µà´‚à´¬àµ¼_à´¡à´¿à´¸à´‚à´¬àµ¼".split(
                "_"
              ),
              monthsShort: "à´œà´¨àµ._à´«àµ†à´¬àµà´°àµ._à´®à´¾àµ¼._à´à´ªàµà´°à´¿._à´®àµ‡à´¯àµ_à´œàµ‚àµº_à´œàµ‚à´²àµˆ._à´“à´—._à´¸àµ†à´ªàµà´±àµà´±._à´’à´•àµà´Ÿàµ‹._à´¨à´µà´‚._à´¡à´¿à´¸à´‚.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "à´žà´¾à´¯à´±à´¾à´´àµà´š_à´¤à´¿à´™àµà´•à´³à´¾à´´àµà´š_à´šàµŠà´µàµà´µà´¾à´´àµà´š_à´¬àµà´§à´¨à´¾à´´àµà´š_à´µàµà´¯à´¾à´´à´¾à´´àµà´š_à´µàµ†à´³àµà´³à´¿à´¯à´¾à´´àµà´š_à´¶à´¨à´¿à´¯à´¾à´´àµà´š".split(
                "_"
              ),
              weekdaysShort: "à´žà´¾à´¯àµ¼_à´¤à´¿à´™àµà´•àµ¾_à´šàµŠà´µàµà´µ_à´¬àµà´§àµ»_à´µàµà´¯à´¾à´´à´‚_à´µàµ†à´³àµà´³à´¿_à´¶à´¨à´¿".split(
                "_"
              ),
              weekdaysMin: "à´žà´¾_à´¤à´¿_à´šàµŠ_à´¬àµ_à´µàµà´¯à´¾_à´µàµ†_à´¶".split(
                "_"
              ),
              longDateFormat: {
                LT: "A h:mm -à´¨àµ",
                LTS: "A h:mm:ss -à´¨àµ",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm -à´¨àµ",
                LLLL: "dddd, D MMMM YYYY, A h:mm -à´¨àµ"
              },
              calendar: {
                sameDay: "[à´‡à´¨àµà´¨àµ] LT",
                nextDay: "[à´¨à´¾à´³àµ†] LT",
                nextWeek: "dddd, LT",
                lastDay: "[à´‡à´¨àµà´¨à´²àµ†] LT",
                lastWeek: "[à´•à´´à´¿à´žàµà´ž] dddd, LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s à´•à´´à´¿à´žàµà´žàµ",
                past: "%s à´®àµàµ»à´ªàµ",
                s: "à´…àµ½à´ª à´¨à´¿à´®à´¿à´·à´™àµà´™àµ¾",
                ss: "%d à´¸àµ†à´•àµà´•àµ»à´¡àµ",
                m: "à´’à´°àµ à´®à´¿à´¨à´¿à´±àµà´±àµ",
                mm: "%d à´®à´¿à´¨à´¿à´±àµà´±àµ",
                h: "à´’à´°àµ à´®à´£à´¿à´•àµà´•àµ‚àµ¼",
                hh: "%d à´®à´£à´¿à´•àµà´•àµ‚àµ¼",
                d: "à´’à´°àµ à´¦à´¿à´µà´¸à´‚",
                dd: "%d à´¦à´¿à´µà´¸à´‚",
                M: "à´’à´°àµ à´®à´¾à´¸à´‚",
                MM: "%d à´®à´¾à´¸à´‚",
                y: "à´’à´°àµ à´µàµ¼à´·à´‚",
                yy: "%d à´µàµ¼à´·à´‚"
              },
              meridiemParse: /à´°à´¾à´¤àµà´°à´¿|à´°à´¾à´µà´¿à´²àµ†|à´‰à´šàµà´š à´•à´´à´¿à´žàµà´žàµ|à´µàµˆà´•àµà´¨àµà´¨àµ‡à´°à´‚|à´°à´¾à´¤àµà´°à´¿/i,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  ("à´°à´¾à´¤àµà´°à´¿" === t && e >= 4) ||
                  "à´‰à´šàµà´š à´•à´´à´¿à´žàµà´žàµ" === t ||
                  "à´µàµˆà´•àµà´¨àµà´¨àµ‡à´°à´‚" === t
                    ? e + 12
                    : e
                );
              },
              meridiem: function (e, t, a) {
                return e < 4
                  ? "à´°à´¾à´¤àµà´°à´¿"
                  : e < 12
                  ? "à´°à´¾à´µà´¿à´²àµ†"
                  : e < 17
                  ? "à´‰à´šàµà´š à´•à´´à´¿à´žàµà´žàµ"
                  : e < 20
                  ? "à´µàµˆà´•àµà´¨àµà´¨àµ‡à´°à´‚"
                  : "à´°à´¾à´¤àµà´°à´¿";
              }
            });
          })(a(381));
        },
        5115: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t, a, n) {
              switch (a) {
                case "s":
                  return t
                    ? "Ñ…ÑÐ´Ñ…ÑÐ½ ÑÐµÐºÑƒÐ½Ð´"
                    : "Ñ…ÑÐ´Ñ…ÑÐ½ ÑÐµÐºÑƒÐ½Ð´Ñ‹Ð½";
                case "ss":
                  return e + (t ? " ÑÐµÐºÑƒÐ½Ð´" : " ÑÐµÐºÑƒÐ½Ð´Ñ‹Ð½");
                case "m":
                case "mm":
                  return e + (t ? " Ð¼Ð¸Ð½ÑƒÑ‚" : " Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹Ð½");
                case "h":
                case "hh":
                  return e + (t ? " Ñ†Ð°Ð³" : " Ñ†Ð°Ð³Ð¸Ð¹Ð½");
                case "d":
                case "dd":
                  return e + (t ? " Ó©Ð´Ó©Ñ€" : " Ó©Ð´Ñ€Ð¸Ð¹Ð½");
                case "M":
                case "MM":
                  return e + (t ? " ÑÐ°Ñ€" : " ÑÐ°Ñ€Ñ‹Ð½");
                case "y":
                case "yy":
                  return e + (t ? " Ð¶Ð¸Ð»" : " Ð¶Ð¸Ð»Ð¸Ð¹Ð½");
                default:
                  return e;
              }
            }
            e.defineLocale("mn", {
              months: "ÐÑÐ³Ð´Ò¯Ð³ÑÑÑ€ ÑÐ°Ñ€_Ð¥Ð¾Ñ‘Ñ€Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€_Ð“ÑƒÑ€Ð°Ð²Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€_Ð”Ó©Ñ€Ó©Ð²Ð´Ò¯Ð³ÑÑÑ€ ÑÐ°Ñ€_Ð¢Ð°Ð²Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€_Ð—ÑƒÑ€Ð³Ð°Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€_Ð”Ð¾Ð»Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€_ÐÐ°Ð¹Ð¼Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€_Ð•ÑÐ´Ò¯Ð³ÑÑÑ€ ÑÐ°Ñ€_ÐÑ€Ð°Ð²Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€_ÐÑ€Ð²Ð°Ð½ Ð½ÑÐ³Ð´Ò¯Ð³ÑÑÑ€ ÑÐ°Ñ€_ÐÑ€Ð²Ð°Ð½ Ñ…Ð¾Ñ‘Ñ€Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€".split(
                "_"
              ),
              monthsShort: "1 ÑÐ°Ñ€_2 ÑÐ°Ñ€_3 ÑÐ°Ñ€_4 ÑÐ°Ñ€_5 ÑÐ°Ñ€_6 ÑÐ°Ñ€_7 ÑÐ°Ñ€_8 ÑÐ°Ñ€_9 ÑÐ°Ñ€_10 ÑÐ°Ñ€_11 ÑÐ°Ñ€_12 ÑÐ°Ñ€".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "ÐÑÐ¼_Ð”Ð°Ð²Ð°Ð°_ÐœÑÐ³Ð¼Ð°Ñ€_Ð›Ñ…Ð°Ð³Ð²Ð°_ÐŸÒ¯Ñ€ÑÐ²_Ð‘Ð°Ð°ÑÐ°Ð½_Ð‘ÑÐ¼Ð±Ð°".split(
                "_"
              ),
              weekdaysShort: "ÐÑÐ¼_Ð”Ð°Ð²_ÐœÑÐ³_Ð›Ñ…Ð°_ÐŸÒ¯Ñ€_Ð‘Ð°Ð°_Ð‘ÑÐ¼".split(
                "_"
              ),
              weekdaysMin: "ÐÑ_Ð”Ð°_ÐœÑ_Ð›Ñ…_ÐŸÒ¯_Ð‘Ð°_Ð‘Ñ".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "YYYY Ð¾Ð½Ñ‹ MMMMÑ‹Ð½ D",
                LLL: "YYYY Ð¾Ð½Ñ‹ MMMMÑ‹Ð½ D HH:mm",
                LLLL: "dddd, YYYY Ð¾Ð½Ñ‹ MMMMÑ‹Ð½ D HH:mm"
              },
              meridiemParse: /Ò®Ó¨|Ò®Ð¥/i,
              isPM: function (e) {
                return "Ò®Ð¥" === e;
              },
              meridiem: function (e, t, a) {
                return e < 12 ? "Ò®Ó¨" : "Ò®Ð¥";
              },
              calendar: {
                sameDay: "[Ó¨Ð½Ó©Ó©Ð´Ó©Ñ€] LT",
                nextDay: "[ÐœÐ°Ñ€Ð³Ð°Ð°Ñˆ] LT",
                nextWeek: "[Ð˜Ñ€ÑÑ…] dddd LT",
                lastDay: "[Ó¨Ñ‡Ð¸Ð³Ð´Ó©Ñ€] LT",
                lastWeek: "[Ó¨Ð½Ð³Ó©Ñ€ÑÓ©Ð½] dddd LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s Ð´Ð°Ñ€Ð°Ð°",
                past: "%s Ó©Ð¼Ð½Ó©",
                s: t,
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
              },
              dayOfMonthOrdinalParse: /\d{1,2} Ó©Ð´Ó©Ñ€/,
              ordinal: function (e, t) {
                switch (t) {
                  case "d":
                  case "D":
                  case "DDD":
                    return e + " Ó©Ð´Ó©Ñ€";
                  default:
                    return e;
                }
              }
            });
          })(a(381));
        },
        370: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "à¥§",
                2: "à¥¨",
                3: "à¥©",
                4: "à¥ª",
                5: "à¥«",
                6: "à¥¬",
                7: "à¥­",
                8: "à¥®",
                9: "à¥¯",
                0: "à¥¦"
              },
              a = {
                "à¥§": "1",
                "à¥¨": "2",
                "à¥©": "3",
                "à¥ª": "4",
                "à¥«": "5",
                "à¥¬": "6",
                "à¥­": "7",
                "à¥®": "8",
                "à¥¯": "9",
                "à¥¦": "0"
              };
            function n(e, t, a, n) {
              var i = "";
              if (t)
                switch (a) {
                  case "s":
                    i = "à¤•à¤¾à¤¹à¥€ à¤¸à¥‡à¤•à¤‚à¤¦";
                    break;
                  case "ss":
                    i = "%d à¤¸à¥‡à¤•à¤‚à¤¦";
                    break;
                  case "m":
                    i = "à¤à¤• à¤®à¤¿à¤¨à¤¿à¤Ÿ";
                    break;
                  case "mm":
                    i = "%d à¤®à¤¿à¤¨à¤¿à¤Ÿà¥‡";
                    break;
                  case "h":
                    i = "à¤à¤• à¤¤à¤¾à¤¸";
                    break;
                  case "hh":
                    i = "%d à¤¤à¤¾à¤¸";
                    break;
                  case "d":
                    i = "à¤à¤• à¤¦à¤¿à¤µà¤¸";
                    break;
                  case "dd":
                    i = "%d à¤¦à¤¿à¤µà¤¸";
                    break;
                  case "M":
                    i = "à¤à¤• à¤®à¤¹à¤¿à¤¨à¤¾";
                    break;
                  case "MM":
                    i = "%d à¤®à¤¹à¤¿à¤¨à¥‡";
                    break;
                  case "y":
                    i = "à¤à¤• à¤µà¤°à¥à¤·";
                    break;
                  case "yy":
                    i = "%d à¤µà¤°à¥à¤·à¥‡";
                }
              else
                switch (a) {
                  case "s":
                    i = "à¤•à¤¾à¤¹à¥€ à¤¸à¥‡à¤•à¤‚à¤¦à¤¾à¤‚";
                    break;
                  case "ss":
                    i = "%d à¤¸à¥‡à¤•à¤‚à¤¦à¤¾à¤‚";
                    break;
                  case "m":
                    i = "à¤à¤•à¤¾ à¤®à¤¿à¤¨à¤¿à¤Ÿà¤¾";
                    break;
                  case "mm":
                    i = "%d à¤®à¤¿à¤¨à¤¿à¤Ÿà¤¾à¤‚";
                    break;
                  case "h":
                    i = "à¤à¤•à¤¾ à¤¤à¤¾à¤¸à¤¾";
                    break;
                  case "hh":
                    i = "%d à¤¤à¤¾à¤¸à¤¾à¤‚";
                    break;
                  case "d":
                    i = "à¤à¤•à¤¾ à¤¦à¤¿à¤µà¤¸à¤¾";
                    break;
                  case "dd":
                    i = "%d à¤¦à¤¿à¤µà¤¸à¤¾à¤‚";
                    break;
                  case "M":
                    i = "à¤à¤•à¤¾ à¤®à¤¹à¤¿à¤¨à¥à¤¯à¤¾";
                    break;
                  case "MM":
                    i = "%d à¤®à¤¹à¤¿à¤¨à¥à¤¯à¤¾à¤‚";
                    break;
                  case "y":
                    i = "à¤à¤•à¤¾ à¤µà¤°à¥à¤·à¤¾";
                    break;
                  case "yy":
                    i = "%d à¤µà¤°à¥à¤·à¤¾à¤‚";
                }
              return i.replace(/%d/i, e);
            }
            e.defineLocale("mr", {
              months: "à¤œà¤¾à¤¨à¥‡à¤µà¤¾à¤°à¥€_à¤«à¥‡à¤¬à¥à¤°à¥à¤µà¤¾à¤°à¥€_à¤®à¤¾à¤°à¥à¤š_à¤à¤ªà¥à¤°à¤¿à¤²_à¤®à¥‡_à¤œà¥‚à¤¨_à¤œà¥à¤²à¥ˆ_à¤‘à¤—à¤¸à¥à¤Ÿ_à¤¸à¤ªà¥à¤Ÿà¥‡à¤‚à¤¬à¤°_à¤‘à¤•à¥à¤Ÿà¥‹à¤¬à¤°_à¤¨à¥‹à¤µà¥à¤¹à¥‡à¤‚à¤¬à¤°_à¤¡à¤¿à¤¸à¥‡à¤‚à¤¬à¤°".split(
                "_"
              ),
              monthsShort: "à¤œà¤¾à¤¨à¥‡._à¤«à¥‡à¤¬à¥à¤°à¥._à¤®à¤¾à¤°à¥à¤š._à¤à¤ªà¥à¤°à¤¿._à¤®à¥‡._à¤œà¥‚à¤¨._à¤œà¥à¤²à¥ˆ._à¤‘à¤—._à¤¸à¤ªà¥à¤Ÿà¥‡à¤‚._à¤‘à¤•à¥à¤Ÿà¥‹._à¤¨à¥‹à¤µà¥à¤¹à¥‡à¤‚._à¤¡à¤¿à¤¸à¥‡à¤‚.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "à¤°à¤µà¤¿à¤µà¤¾à¤°_à¤¸à¥‹à¤®à¤µà¤¾à¤°_à¤®à¤‚à¤—à¤³à¤µà¤¾à¤°_à¤¬à¥à¤§à¤µà¤¾à¤°_à¤—à¥à¤°à¥‚à¤µà¤¾à¤°_à¤¶à¥à¤•à¥à¤°à¤µà¤¾à¤°_à¤¶à¤¨à¤¿à¤µà¤¾à¤°".split(
                "_"
              ),
              weekdaysShort: "à¤°à¤µà¤¿_à¤¸à¥‹à¤®_à¤®à¤‚à¤—à¤³_à¤¬à¥à¤§_à¤—à¥à¤°à¥‚_à¤¶à¥à¤•à¥à¤°_à¤¶à¤¨à¤¿".split(
                "_"
              ),
              weekdaysMin: "à¤°_à¤¸à¥‹_à¤®à¤‚_à¤¬à¥_à¤—à¥_à¤¶à¥_à¤¶".split("_"),
              longDateFormat: {
                LT: "A h:mm à¤µà¤¾à¤œà¤¤à¤¾",
                LTS: "A h:mm:ss à¤µà¤¾à¤œà¤¤à¤¾",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm à¤µà¤¾à¤œà¤¤à¤¾",
                LLLL: "dddd, D MMMM YYYY, A h:mm à¤µà¤¾à¤œà¤¤à¤¾"
              },
              calendar: {
                sameDay: "[à¤†à¤œ] LT",
                nextDay: "[à¤‰à¤¦à¥à¤¯à¤¾] LT",
                nextWeek: "dddd, LT",
                lastDay: "[à¤•à¤¾à¤²] LT",
                lastWeek: "[à¤®à¤¾à¤—à¥€à¤²] dddd, LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%sà¤®à¤§à¥à¤¯à¥‡",
                past: "%sà¤ªà¥‚à¤°à¥à¤µà¥€",
                s: n,
                ss: n,
                m: n,
                mm: n,
                h: n,
                hh: n,
                d: n,
                dd: n,
                M: n,
                MM: n,
                y: n,
                yy: n
              },
              preparse: function (e) {
                return e.replace(
                  /[à¥§à¥¨à¥©à¥ªà¥«à¥¬à¥­à¥®à¥¯à¥¦]/g,
                  function (e) {
                    return a[e];
                  }
                );
              },
              postformat: function (e) {
                return e.replace(/\d/g, function (e) {
                  return t[e];
                });
              },
              meridiemParse: /à¤ªà¤¹à¤¾à¤Ÿà¥‡|à¤¸à¤•à¤¾à¤³à¥€|à¤¦à¥à¤ªà¤¾à¤°à¥€|à¤¸à¤¾à¤¯à¤‚à¤•à¤¾à¤³à¥€|à¤°à¤¾à¤¤à¥à¤°à¥€/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "à¤ªà¤¹à¤¾à¤Ÿà¥‡" === t || "à¤¸à¤•à¤¾à¤³à¥€" === t
                    ? e
                    : "à¤¦à¥à¤ªà¤¾à¤°à¥€" === t ||
                      "à¤¸à¤¾à¤¯à¤‚à¤•à¤¾à¤³à¥€" === t ||
                      "à¤°à¤¾à¤¤à¥à¤°à¥€" === t
                    ? e >= 12
                      ? e
                      : e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                return e >= 0 && e < 6
                  ? "à¤ªà¤¹à¤¾à¤Ÿà¥‡"
                  : e < 12
                  ? "à¤¸à¤•à¤¾à¤³à¥€"
                  : e < 17
                  ? "à¤¦à¥à¤ªà¤¾à¤°à¥€"
                  : e < 20
                  ? "à¤¸à¤¾à¤¯à¤‚à¤•à¤¾à¤³à¥€"
                  : "à¤°à¤¾à¤¤à¥à¤°à¥€";
              },
              week: { dow: 0, doy: 6 }
            });
          })(a(381));
        },
        1237: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("ms-my", {
              months: "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split(
                "_"
              ),
              monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split(
                "_"
              ),
              weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
              weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
              weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
              longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY [pukul] HH.mm",
                LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
              },
              meridiemParse: /pagi|tengahari|petang|malam/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "pagi" === t
                    ? e
                    : "tengahari" === t
                    ? e >= 11
                      ? e
                      : e + 12
                    : "petang" === t || "malam" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                return e < 11
                  ? "pagi"
                  : e < 15
                  ? "tengahari"
                  : e < 19
                  ? "petang"
                  : "malam";
              },
              calendar: {
                sameDay: "[Hari ini pukul] LT",
                nextDay: "[Esok pukul] LT",
                nextWeek: "dddd [pukul] LT",
                lastDay: "[Kelmarin pukul] LT",
                lastWeek: "dddd [lepas pukul] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "dalam %s",
                past: "%s yang lepas",
                s: "beberapa saat",
                ss: "%d saat",
                m: "seminit",
                mm: "%d minit",
                h: "sejam",
                hh: "%d jam",
                d: "sehari",
                dd: "%d hari",
                M: "sebulan",
                MM: "%d bulan",
                y: "setahun",
                yy: "%d tahun"
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        9847: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("ms", {
              months: "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split(
                "_"
              ),
              monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split(
                "_"
              ),
              weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
              weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
              weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
              longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY [pukul] HH.mm",
                LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
              },
              meridiemParse: /pagi|tengahari|petang|malam/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "pagi" === t
                    ? e
                    : "tengahari" === t
                    ? e >= 11
                      ? e
                      : e + 12
                    : "petang" === t || "malam" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                return e < 11
                  ? "pagi"
                  : e < 15
                  ? "tengahari"
                  : e < 19
                  ? "petang"
                  : "malam";
              },
              calendar: {
                sameDay: "[Hari ini pukul] LT",
                nextDay: "[Esok pukul] LT",
                nextWeek: "dddd [pukul] LT",
                lastDay: "[Kelmarin pukul] LT",
                lastWeek: "dddd [lepas pukul] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "dalam %s",
                past: "%s yang lepas",
                s: "beberapa saat",
                ss: "%d saat",
                m: "seminit",
                mm: "%d minit",
                h: "sejam",
                hh: "%d jam",
                d: "sehari",
                dd: "%d hari",
                M: "sebulan",
                MM: "%d bulan",
                y: "setahun",
                yy: "%d tahun"
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        2126: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("mt", {
              months: "Jannar_Frar_Marzu_April_Mejju_Ä unju_Lulju_Awwissu_Settembru_Ottubru_Novembru_DiÄ‹embru".split(
                "_"
              ),
              monthsShort: "Jan_Fra_Mar_Apr_Mej_Ä un_Lul_Aww_Set_Ott_Nov_DiÄ‹".split(
                "_"
              ),
              weekdays: "Il-Ä¦add_It-Tnejn_It-Tlieta_L-ErbgÄ§a_Il-Ä¦amis_Il-Ä imgÄ§a_Is-Sibt".split(
                "_"
              ),
              weekdaysShort: "Ä¦ad_Tne_Tli_Erb_Ä¦am_Ä im_Sib".split("_"),
              weekdaysMin: "Ä¦a_Tn_Tl_Er_Ä¦a_Ä i_Si".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Illum fil-]LT",
                nextDay: "[GÄ§ada fil-]LT",
                nextWeek: "dddd [fil-]LT",
                lastDay: "[Il-bieraÄ§ fil-]LT",
                lastWeek: "dddd [li gÄ§adda] [fil-]LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "fâ€™ %s",
                past: "%s ilu",
                s: "ftit sekondi",
                ss: "%d sekondi",
                m: "minuta",
                mm: "%d minuti",
                h: "siegÄ§a",
                hh: "%d siegÄ§at",
                d: "Ä¡urnata",
                dd: "%d Ä¡ranet",
                M: "xahar",
                MM: "%d xhur",
                y: "sena",
                yy: "%d sni"
              },
              dayOfMonthOrdinalParse: /\d{1,2}Âº/,
              ordinal: "%dÂº",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        6165: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "á",
                2: "á‚",
                3: "áƒ",
                4: "á„",
                5: "á…",
                6: "á†",
                7: "á‡",
                8: "áˆ",
                9: "á‰",
                0: "á€"
              },
              a = {
                "á": "1",
                "á‚": "2",
                "áƒ": "3",
                "á„": "4",
                "á…": "5",
                "á†": "6",
                "á‡": "7",
                "áˆ": "8",
                "á‰": "9",
                "á€": "0"
              };
            e.defineLocale("my", {
              months: "á€‡á€”á€ºá€”á€á€«á€›á€®_á€–á€±á€–á€±á€¬á€ºá€á€«á€›á€®_á€™á€á€º_á€§á€•á€¼á€®_á€™á€±_á€‡á€½á€”á€º_á€‡á€°á€œá€­á€¯á€„á€º_á€žá€¼á€‚á€¯á€á€º_á€…á€€á€ºá€á€„á€ºá€˜á€¬_á€¡á€±á€¬á€€á€ºá€á€­á€¯á€˜á€¬_á€”á€­á€¯á€á€„á€ºá€˜á€¬_á€’á€®á€‡á€„á€ºá€˜á€¬".split(
                "_"
              ),
              monthsShort: "á€‡á€”á€º_á€–á€±_á€™á€á€º_á€•á€¼á€®_á€™á€±_á€‡á€½á€”á€º_á€œá€­á€¯á€„á€º_á€žá€¼_á€…á€€á€º_á€¡á€±á€¬á€€á€º_á€”á€­á€¯_á€’á€®".split(
                "_"
              ),
              weekdays: "á€á€”á€„á€ºá€¹á€‚á€”á€½á€±_á€á€”á€„á€ºá€¹á€œá€¬_á€¡á€„á€ºá€¹á€‚á€«_á€—á€¯á€’á€¹á€“á€Ÿá€°á€¸_á€€á€¼á€¬á€žá€•á€á€±á€¸_á€žá€±á€¬á€€á€¼á€¬_á€…á€”á€±".split(
                "_"
              ),
              weekdaysShort: "á€”á€½á€±_á€œá€¬_á€‚á€«_á€Ÿá€°á€¸_á€€á€¼á€¬_á€žá€±á€¬_á€”á€±".split(
                "_"
              ),
              weekdaysMin: "á€”á€½á€±_á€œá€¬_á€‚á€«_á€Ÿá€°á€¸_á€€á€¼á€¬_á€žá€±á€¬_á€”á€±".split(
                "_"
              ),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[á€šá€”á€±.] LT [á€™á€¾á€¬]",
                nextDay: "[á€™á€”á€€á€ºá€–á€¼á€”á€º] LT [á€™á€¾á€¬]",
                nextWeek: "dddd LT [á€™á€¾á€¬]",
                lastDay: "[á€™á€”á€±.á€€] LT [á€™á€¾á€¬]",
                lastWeek: "[á€•á€¼á€®á€¸á€á€²á€·á€žá€±á€¬] dddd LT [á€™á€¾á€¬]",
                sameElse: "L"
              },
              relativeTime: {
                future: "á€œá€¬á€™á€Šá€ºá€· %s á€™á€¾á€¬",
                past: "á€œá€½á€”á€ºá€á€²á€·á€žá€±á€¬ %s á€€",
                s: "á€…á€€á€¹á€€á€”á€º.á€¡á€”á€Šá€ºá€¸á€„á€šá€º",
                ss: "%d á€…á€€á€¹á€€á€”á€·á€º",
                m: "á€á€…á€ºá€™á€­á€”á€…á€º",
                mm: "%d á€™á€­á€”á€…á€º",
                h: "á€á€…á€ºá€”á€¬á€›á€®",
                hh: "%d á€”á€¬á€›á€®",
                d: "á€á€…á€ºá€›á€€á€º",
                dd: "%d á€›á€€á€º",
                M: "á€á€…á€ºá€œ",
                MM: "%d á€œ",
                y: "á€á€…á€ºá€”á€¾á€…á€º",
                yy: "%d á€”á€¾á€…á€º"
              },
              preparse: function (e) {
                return e.replace(/[áá‚áƒá„á…á†á‡áˆá‰á€]/g, function (e) {
                  return a[e];
                });
              },
              postformat: function (e) {
                return e.replace(/\d/g, function (e) {
                  return t[e];
                });
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        4924: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("nb", {
              months: "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split(
                "_"
              ),
              monthsShort: "jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "sÃ¸ndag_mandag_tirsdag_onsdag_torsdag_fredag_lÃ¸rdag".split(
                "_"
              ),
              weekdaysShort: "sÃ¸._ma._ti._on._to._fr._lÃ¸.".split("_"),
              weekdaysMin: "sÃ¸_ma_ti_on_to_fr_lÃ¸".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY [kl.] HH:mm",
                LLLL: "dddd D. MMMM YYYY [kl.] HH:mm"
              },
              calendar: {
                sameDay: "[i dag kl.] LT",
                nextDay: "[i morgen kl.] LT",
                nextWeek: "dddd [kl.] LT",
                lastDay: "[i gÃ¥r kl.] LT",
                lastWeek: "[forrige] dddd [kl.] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "om %s",
                past: "%s siden",
                s: "noen sekunder",
                ss: "%d sekunder",
                m: "ett minutt",
                mm: "%d minutter",
                h: "en time",
                hh: "%d timer",
                d: "en dag",
                dd: "%d dager",
                w: "en uke",
                ww: "%d uker",
                M: "en mÃ¥ned",
                MM: "%d mÃ¥neder",
                y: "ett Ã¥r",
                yy: "%d Ã¥r"
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        6744: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "à¥§",
                2: "à¥¨",
                3: "à¥©",
                4: "à¥ª",
                5: "à¥«",
                6: "à¥¬",
                7: "à¥­",
                8: "à¥®",
                9: "à¥¯",
                0: "à¥¦"
              },
              a = {
                "à¥§": "1",
                "à¥¨": "2",
                "à¥©": "3",
                "à¥ª": "4",
                "à¥«": "5",
                "à¥¬": "6",
                "à¥­": "7",
                "à¥®": "8",
                "à¥¯": "9",
                "à¥¦": "0"
              };
            e.defineLocale("ne", {
              months: "à¤œà¤¨à¤µà¤°à¥€_à¤«à¥‡à¤¬à¥à¤°à¥à¤µà¤°à¥€_à¤®à¤¾à¤°à¥à¤š_à¤…à¤ªà¥à¤°à¤¿à¤²_à¤®à¤ˆ_à¤œà¥à¤¨_à¤œà¥à¤²à¤¾à¤ˆ_à¤…à¤—à¤·à¥à¤Ÿ_à¤¸à¥‡à¤ªà¥à¤Ÿà¥‡à¤®à¥à¤¬à¤°_à¤…à¤•à¥à¤Ÿà¥‹à¤¬à¤°_à¤¨à¥‹à¤­à¥‡à¤®à¥à¤¬à¤°_à¤¡à¤¿à¤¸à¥‡à¤®à¥à¤¬à¤°".split(
                "_"
              ),
              monthsShort: "à¤œà¤¨._à¤«à¥‡à¤¬à¥à¤°à¥._à¤®à¤¾à¤°à¥à¤š_à¤…à¤ªà¥à¤°à¤¿._à¤®à¤ˆ_à¤œà¥à¤¨_à¤œà¥à¤²à¤¾à¤ˆ._à¤…à¤—._à¤¸à¥‡à¤ªà¥à¤Ÿ._à¤…à¤•à¥à¤Ÿà¥‹._à¤¨à¥‹à¤­à¥‡._à¤¡à¤¿à¤¸à¥‡.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "à¤†à¤‡à¤¤à¤¬à¤¾à¤°_à¤¸à¥‹à¤®à¤¬à¤¾à¤°_à¤®à¤™à¥à¤—à¤²à¤¬à¤¾à¤°_à¤¬à¥à¤§à¤¬à¤¾à¤°_à¤¬à¤¿à¤¹à¤¿à¤¬à¤¾à¤°_à¤¶à¥à¤•à¥à¤°à¤¬à¤¾à¤°_à¤¶à¤¨à¤¿à¤¬à¤¾à¤°".split(
                "_"
              ),
              weekdaysShort: "à¤†à¤‡à¤¤._à¤¸à¥‹à¤®._à¤®à¤™à¥à¤—à¤²._à¤¬à¥à¤§._à¤¬à¤¿à¤¹à¤¿._à¤¶à¥à¤•à¥à¤°._à¤¶à¤¨à¤¿.".split(
                "_"
              ),
              weekdaysMin: "à¤†._à¤¸à¥‹._à¤®à¤‚._à¤¬à¥._à¤¬à¤¿._à¤¶à¥._à¤¶.".split(
                "_"
              ),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "Aà¤•à¥‹ h:mm à¤¬à¤œà¥‡",
                LTS: "Aà¤•à¥‹ h:mm:ss à¤¬à¤œà¥‡",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, Aà¤•à¥‹ h:mm à¤¬à¤œà¥‡",
                LLLL: "dddd, D MMMM YYYY, Aà¤•à¥‹ h:mm à¤¬à¤œà¥‡"
              },
              preparse: function (e) {
                return e.replace(
                  /[à¥§à¥¨à¥©à¥ªà¥«à¥¬à¥­à¥®à¥¯à¥¦]/g,
                  function (e) {
                    return a[e];
                  }
                );
              },
              postformat: function (e) {
                return e.replace(/\d/g, function (e) {
                  return t[e];
                });
              },
              meridiemParse: /à¤°à¤¾à¤¤à¤¿|à¤¬à¤¿à¤¹à¤¾à¤¨|à¤¦à¤¿à¤‰à¤à¤¸à¥‹|à¤¸à¤¾à¤à¤/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "à¤°à¤¾à¤¤à¤¿" === t
                    ? e < 4
                      ? e
                      : e + 12
                    : "à¤¬à¤¿à¤¹à¤¾à¤¨" === t
                    ? e
                    : "à¤¦à¤¿à¤‰à¤à¤¸à¥‹" === t
                    ? e >= 10
                      ? e
                      : e + 12
                    : "à¤¸à¤¾à¤à¤" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                return e < 3
                  ? "à¤°à¤¾à¤¤à¤¿"
                  : e < 12
                  ? "à¤¬à¤¿à¤¹à¤¾à¤¨"
                  : e < 16
                  ? "à¤¦à¤¿à¤‰à¤à¤¸à¥‹"
                  : e < 20
                  ? "à¤¸à¤¾à¤à¤"
                  : "à¤°à¤¾à¤¤à¤¿";
              },
              calendar: {
                sameDay: "[à¤†à¤œ] LT",
                nextDay: "[à¤­à¥‹à¤²à¤¿] LT",
                nextWeek: "[à¤†à¤‰à¤à¤¦à¥‹] dddd[,] LT",
                lastDay: "[à¤¹à¤¿à¤œà¥‹] LT",
                lastWeek: "[à¤—à¤à¤•à¥‹] dddd[,] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%sà¤®à¤¾",
                past: "%s à¤…à¤—à¤¾à¤¡à¤¿",
                s: "à¤•à¥‡à¤¹à¥€ à¤•à¥à¤·à¤£",
                ss: "%d à¤¸à¥‡à¤•à¥‡à¤£à¥à¤¡",
                m: "à¤à¤• à¤®à¤¿à¤¨à¥‡à¤Ÿ",
                mm: "%d à¤®à¤¿à¤¨à¥‡à¤Ÿ",
                h: "à¤à¤• à¤˜à¤£à¥à¤Ÿà¤¾",
                hh: "%d à¤˜à¤£à¥à¤Ÿà¤¾",
                d: "à¤à¤• à¤¦à¤¿à¤¨",
                dd: "%d à¤¦à¤¿à¤¨",
                M: "à¤à¤• à¤®à¤¹à¤¿à¤¨à¤¾",
                MM: "%d à¤®à¤¹à¤¿à¤¨à¤¾",
                y: "à¤à¤• à¤¬à¤°à¥à¤·",
                yy: "%d à¤¬à¤°à¥à¤·"
              },
              week: { dow: 0, doy: 6 }
            });
          })(a(381));
        },
        9814: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split(
                "_"
              ),
              a = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_"),
              n = [
                /^jan/i,
                /^feb/i,
                /^maart|mrt.?$/i,
                /^apr/i,
                /^mei$/i,
                /^jun[i.]?$/i,
                /^jul[i.]?$/i,
                /^aug/i,
                /^sep/i,
                /^okt/i,
                /^nov/i,
                /^dec/i
              ],
              i = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
            e.defineLocale("nl-be", {
              months: "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split(
                "_"
              ),
              monthsShort: function (e, n) {
                return e ? (/-MMM-/.test(n) ? a[e.month()] : t[e.month()]) : t;
              },
              monthsRegex: i,
              monthsShortRegex: i,
              monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
              monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
              monthsParse: n,
              longMonthsParse: n,
              shortMonthsParse: n,
              weekdays: "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split(
                "_"
              ),
              weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
              weekdaysMin: "zo_ma_di_wo_do_vr_za".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[vandaag om] LT",
                nextDay: "[morgen om] LT",
                nextWeek: "dddd [om] LT",
                lastDay: "[gisteren om] LT",
                lastWeek: "[afgelopen] dddd [om] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "over %s",
                past: "%s geleden",
                s: "een paar seconden",
                ss: "%d seconden",
                m: "Ã©Ã©n minuut",
                mm: "%d minuten",
                h: "Ã©Ã©n uur",
                hh: "%d uur",
                d: "Ã©Ã©n dag",
                dd: "%d dagen",
                M: "Ã©Ã©n maand",
                MM: "%d maanden",
                y: "Ã©Ã©n jaar",
                yy: "%d jaar"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
              ordinal: function (e) {
                return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        3901: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split(
                "_"
              ),
              a = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_"),
              n = [
                /^jan/i,
                /^feb/i,
                /^maart|mrt.?$/i,
                /^apr/i,
                /^mei$/i,
                /^jun[i.]?$/i,
                /^jul[i.]?$/i,
                /^aug/i,
                /^sep/i,
                /^okt/i,
                /^nov/i,
                /^dec/i
              ],
              i = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
            e.defineLocale("nl", {
              months: "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split(
                "_"
              ),
              monthsShort: function (e, n) {
                return e ? (/-MMM-/.test(n) ? a[e.month()] : t[e.month()]) : t;
              },
              monthsRegex: i,
              monthsShortRegex: i,
              monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
              monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
              monthsParse: n,
              longMonthsParse: n,
              shortMonthsParse: n,
              weekdays: "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split(
                "_"
              ),
              weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
              weekdaysMin: "zo_ma_di_wo_do_vr_za".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD-MM-YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[vandaag om] LT",
                nextDay: "[morgen om] LT",
                nextWeek: "dddd [om] LT",
                lastDay: "[gisteren om] LT",
                lastWeek: "[afgelopen] dddd [om] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "over %s",
                past: "%s geleden",
                s: "een paar seconden",
                ss: "%d seconden",
                m: "Ã©Ã©n minuut",
                mm: "%d minuten",
                h: "Ã©Ã©n uur",
                hh: "%d uur",
                d: "Ã©Ã©n dag",
                dd: "%d dagen",
                w: "Ã©Ã©n week",
                ww: "%d weken",
                M: "Ã©Ã©n maand",
                MM: "%d maanden",
                y: "Ã©Ã©n jaar",
                yy: "%d jaar"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
              ordinal: function (e) {
                return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        3877: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("nn", {
              months: "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split(
                "_"
              ),
              monthsShort: "jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "sundag_mÃ¥ndag_tysdag_onsdag_torsdag_fredag_laurdag".split(
                "_"
              ),
              weekdaysShort: "su._mÃ¥._ty._on._to._fr._lau.".split("_"),
              weekdaysMin: "su_mÃ¥_ty_on_to_fr_la".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY [kl.] H:mm",
                LLLL: "dddd D. MMMM YYYY [kl.] HH:mm"
              },
              calendar: {
                sameDay: "[I dag klokka] LT",
                nextDay: "[I morgon klokka] LT",
                nextWeek: "dddd [klokka] LT",
                lastDay: "[I gÃ¥r klokka] LT",
                lastWeek: "[FÃ¸regÃ¥ande] dddd [klokka] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "om %s",
                past: "%s sidan",
                s: "nokre sekund",
                ss: "%d sekund",
                m: "eit minutt",
                mm: "%d minutt",
                h: "ein time",
                hh: "%d timar",
                d: "ein dag",
                dd: "%d dagar",
                w: "ei veke",
                ww: "%d veker",
                M: "ein mÃ¥nad",
                MM: "%d mÃ¥nader",
                y: "eit Ã¥r",
                yy: "%d Ã¥r"
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        2135: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("oc-lnc", {
              months: {
                standalone: "geniÃ¨r_febriÃ¨r_marÃ§_abril_mai_junh_julhet_agost_setembre_octÃ²bre_novembre_decembre".split(
                  "_"
                ),
                format: "de geniÃ¨r_de febriÃ¨r_de marÃ§_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octÃ²bre_de novembre_de decembre".split(
                  "_"
                ),
                isFormat: /D[oD]?(\s)+MMMM/
              },
              monthsShort: "gen._febr._marÃ§_abr._mai_junh_julh._ago._set._oct._nov._dec.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "dimenge_diluns_dimars_dimÃ¨cres_dijÃ²us_divendres_dissabte".split(
                "_"
              ),
              weekdaysShort: "dg._dl._dm._dc._dj._dv._ds.".split("_"),
              weekdaysMin: "dg_dl_dm_dc_dj_dv_ds".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM [de] YYYY",
                ll: "D MMM YYYY",
                LLL: "D MMMM [de] YYYY [a] H:mm",
                lll: "D MMM YYYY, H:mm",
                LLLL: "dddd D MMMM [de] YYYY [a] H:mm",
                llll: "ddd D MMM YYYY, H:mm"
              },
              calendar: {
                sameDay: "[uÃ¨i a] LT",
                nextDay: "[deman a] LT",
                nextWeek: "dddd [a] LT",
                lastDay: "[iÃ¨r a] LT",
                lastWeek: "dddd [passat a] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "d'aquÃ­ %s",
                past: "fa %s",
                s: "unas segondas",
                ss: "%d segondas",
                m: "una minuta",
                mm: "%d minutas",
                h: "una ora",
                hh: "%d oras",
                d: "un jorn",
                dd: "%d jorns",
                M: "un mes",
                MM: "%d meses",
                y: "un an",
                yy: "%d ans"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|Ã¨|a)/,
              ordinal: function (e, t) {
                var a =
                  1 === e
                    ? "r"
                    : 2 === e
                    ? "n"
                    : 3 === e
                    ? "r"
                    : 4 === e
                    ? "t"
                    : "Ã¨";
                return ("w" !== t && "W" !== t) || (a = "a"), e + a;
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        5858: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "à©§",
                2: "à©¨",
                3: "à©©",
                4: "à©ª",
                5: "à©«",
                6: "à©¬",
                7: "à©­",
                8: "à©®",
                9: "à©¯",
                0: "à©¦"
              },
              a = {
                "à©§": "1",
                "à©¨": "2",
                "à©©": "3",
                "à©ª": "4",
                "à©«": "5",
                "à©¬": "6",
                "à©­": "7",
                "à©®": "8",
                "à©¯": "9",
                "à©¦": "0"
              };
            e.defineLocale("pa-in", {
              months: "à¨œà¨¨à¨µà¨°à©€_à¨«à¨¼à¨°à¨µà¨°à©€_à¨®à¨¾à¨°à¨š_à¨…à¨ªà©à¨°à©ˆà¨²_à¨®à¨ˆ_à¨œà©‚à¨¨_à¨œà©à¨²à¨¾à¨ˆ_à¨…à¨—à¨¸à¨¤_à¨¸à¨¤à©°à¨¬à¨°_à¨…à¨•à¨¤à©‚à¨¬à¨°_à¨¨à¨µà©°à¨¬à¨°_à¨¦à¨¸à©°à¨¬à¨°".split(
                "_"
              ),
              monthsShort: "à¨œà¨¨à¨µà¨°à©€_à¨«à¨¼à¨°à¨µà¨°à©€_à¨®à¨¾à¨°à¨š_à¨…à¨ªà©à¨°à©ˆà¨²_à¨®à¨ˆ_à¨œà©‚à¨¨_à¨œà©à¨²à¨¾à¨ˆ_à¨…à¨—à¨¸à¨¤_à¨¸à¨¤à©°à¨¬à¨°_à¨…à¨•à¨¤à©‚à¨¬à¨°_à¨¨à¨µà©°à¨¬à¨°_à¨¦à¨¸à©°à¨¬à¨°".split(
                "_"
              ),
              weekdays: "à¨à¨¤à¨µà¨¾à¨°_à¨¸à©‹à¨®à¨µà¨¾à¨°_à¨®à©°à¨—à¨²à¨µà¨¾à¨°_à¨¬à©à¨§à¨µà¨¾à¨°_à¨µà©€à¨°à¨µà¨¾à¨°_à¨¸à¨¼à©à©±à¨•à¨°à¨µà¨¾à¨°_à¨¸à¨¼à¨¨à©€à¨šà¨°à¨µà¨¾à¨°".split(
                "_"
              ),
              weekdaysShort: "à¨à¨¤_à¨¸à©‹à¨®_à¨®à©°à¨—à¨²_à¨¬à©à¨§_à¨µà©€à¨°_à¨¸à¨¼à©à¨•à¨°_à¨¸à¨¼à¨¨à©€".split(
                "_"
              ),
              weekdaysMin: "à¨à¨¤_à¨¸à©‹à¨®_à¨®à©°à¨—à¨²_à¨¬à©à¨§_à¨µà©€à¨°_à¨¸à¨¼à©à¨•à¨°_à¨¸à¨¼à¨¨à©€".split(
                "_"
              ),
              longDateFormat: {
                LT: "A h:mm à¨µà¨œà©‡",
                LTS: "A h:mm:ss à¨µà¨œà©‡",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm à¨µà¨œà©‡",
                LLLL: "dddd, D MMMM YYYY, A h:mm à¨µà¨œà©‡"
              },
              calendar: {
                sameDay: "[à¨…à¨œ] LT",
                nextDay: "[à¨•à¨²] LT",
                nextWeek: "[à¨…à¨—à¨²à¨¾] dddd, LT",
                lastDay: "[à¨•à¨²] LT",
                lastWeek: "[à¨ªà¨¿à¨›à¨²à©‡] dddd, LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s à¨µà¨¿à©±à¨š",
                past: "%s à¨ªà¨¿à¨›à¨²à©‡",
                s: "à¨•à©à¨ à¨¸à¨•à¨¿à©°à¨Ÿ",
                ss: "%d à¨¸à¨•à¨¿à©°à¨Ÿ",
                m: "à¨‡à¨• à¨®à¨¿à©°à¨Ÿ",
                mm: "%d à¨®à¨¿à©°à¨Ÿ",
                h: "à¨‡à©±à¨• à¨˜à©°à¨Ÿà¨¾",
                hh: "%d à¨˜à©°à¨Ÿà©‡",
                d: "à¨‡à©±à¨• à¨¦à¨¿à¨¨",
                dd: "%d à¨¦à¨¿à¨¨",
                M: "à¨‡à©±à¨• à¨®à¨¹à©€à¨¨à¨¾",
                MM: "%d à¨®à¨¹à©€à¨¨à©‡",
                y: "à¨‡à©±à¨• à¨¸à¨¾à¨²",
                yy: "%d à¨¸à¨¾à¨²"
              },
              preparse: function (e) {
                return e.replace(
                  /[à©§à©¨à©©à©ªà©«à©¬à©­à©®à©¯à©¦]/g,
                  function (e) {
                    return a[e];
                  }
                );
              },
              postformat: function (e) {
                return e.replace(/\d/g, function (e) {
                  return t[e];
                });
              },
              meridiemParse: /à¨°à¨¾à¨¤|à¨¸à¨µà©‡à¨°|à¨¦à©à¨ªà¨¹à¨¿à¨°|à¨¸à¨¼à¨¾à¨®/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "à¨°à¨¾à¨¤" === t
                    ? e < 4
                      ? e
                      : e + 12
                    : "à¨¸à¨µà©‡à¨°" === t
                    ? e
                    : "à¨¦à©à¨ªà¨¹à¨¿à¨°" === t
                    ? e >= 10
                      ? e
                      : e + 12
                    : "à¨¸à¨¼à¨¾à¨®" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                return e < 4
                  ? "à¨°à¨¾à¨¤"
                  : e < 10
                  ? "à¨¸à¨µà©‡à¨°"
                  : e < 17
                  ? "à¨¦à©à¨ªà¨¹à¨¿à¨°"
                  : e < 20
                  ? "à¨¸à¨¼à¨¾à¨®"
                  : "à¨°à¨¾à¨¤";
              },
              week: { dow: 0, doy: 6 }
            });
          })(a(381));
        },
        4495: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = "styczeÅ„_luty_marzec_kwiecieÅ„_maj_czerwiec_lipiec_sierpieÅ„_wrzesieÅ„_paÅºdziernik_listopad_grudzieÅ„".split(
                "_"
              ),
              a = "stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_wrzeÅ›nia_paÅºdziernika_listopada_grudnia".split(
                "_"
              ),
              n = [
                /^sty/i,
                /^lut/i,
                /^mar/i,
                /^kwi/i,
                /^maj/i,
                /^cze/i,
                /^lip/i,
                /^sie/i,
                /^wrz/i,
                /^paÅº/i,
                /^lis/i,
                /^gru/i
              ];
            function i(e) {
              return e % 10 < 5 && e % 10 > 1 && ~~(e / 10) % 10 != 1;
            }
            function r(e, t, a) {
              var n = e + " ";
              switch (a) {
                case "ss":
                  return n + (i(e) ? "sekundy" : "sekund");
                case "m":
                  return t ? "minuta" : "minutÄ™";
                case "mm":
                  return n + (i(e) ? "minuty" : "minut");
                case "h":
                  return t ? "godzina" : "godzinÄ™";
                case "hh":
                  return n + (i(e) ? "godziny" : "godzin");
                case "ww":
                  return n + (i(e) ? "tygodnie" : "tygodni");
                case "MM":
                  return n + (i(e) ? "miesiÄ…ce" : "miesiÄ™cy");
                case "yy":
                  return n + (i(e) ? "lata" : "lat");
              }
            }
            e.defineLocale("pl", {
              months: function (e, n) {
                return e ? (/D MMMM/.test(n) ? a[e.month()] : t[e.month()]) : t;
              },
              monthsShort: "sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paÅº_lis_gru".split(
                "_"
              ),
              monthsParse: n,
              longMonthsParse: n,
              shortMonthsParse: n,
              weekdays: "niedziela_poniedziaÅ‚ek_wtorek_Å›roda_czwartek_piÄ…tek_sobota".split(
                "_"
              ),
              weekdaysShort: "ndz_pon_wt_Å›r_czw_pt_sob".split("_"),
              weekdaysMin: "Nd_Pn_Wt_Åšr_Cz_Pt_So".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[DziÅ› o] LT",
                nextDay: "[Jutro o] LT",
                nextWeek: function () {
                  switch (this.day()) {
                    case 0:
                      return "[W niedzielÄ™ o] LT";
                    case 2:
                      return "[We wtorek o] LT";
                    case 3:
                      return "[W Å›rodÄ™ o] LT";
                    case 6:
                      return "[W sobotÄ™ o] LT";
                    default:
                      return "[W] dddd [o] LT";
                  }
                },
                lastDay: "[Wczoraj o] LT",
                lastWeek: function () {
                  switch (this.day()) {
                    case 0:
                      return "[W zeszÅ‚Ä… niedzielÄ™ o] LT";
                    case 3:
                      return "[W zeszÅ‚Ä… Å›rodÄ™ o] LT";
                    case 6:
                      return "[W zeszÅ‚Ä… sobotÄ™ o] LT";
                    default:
                      return "[W zeszÅ‚y] dddd [o] LT";
                  }
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "za %s",
                past: "%s temu",
                s: "kilka sekund",
                ss: r,
                m: r,
                mm: r,
                h: r,
                hh: r,
                d: "1 dzieÅ„",
                dd: "%d dni",
                w: "tydzieÅ„",
                ww: r,
                M: "miesiÄ…c",
                MM: r,
                y: "rok",
                yy: r
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        7971: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("pt-br", {
              months: "janeiro_fevereiro_marÃ§o_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split(
                "_"
              ),
              monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split(
                "_"
              ),
              weekdays: "domingo_segunda-feira_terÃ§a-feira_quarta-feira_quinta-feira_sexta-feira_sÃ¡bado".split(
                "_"
              ),
              weekdaysShort: "dom_seg_ter_qua_qui_sex_sÃ¡b".split("_"),
              weekdaysMin: "do_2Âª_3Âª_4Âª_5Âª_6Âª_sÃ¡".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D [de] MMMM [de] YYYY",
                LLL: "D [de] MMMM [de] YYYY [Ã s] HH:mm",
                LLLL: "dddd, D [de] MMMM [de] YYYY [Ã s] HH:mm"
              },
              calendar: {
                sameDay: "[Hoje Ã s] LT",
                nextDay: "[AmanhÃ£ Ã s] LT",
                nextWeek: "dddd [Ã s] LT",
                lastDay: "[Ontem Ã s] LT",
                lastWeek: function () {
                  return 0 === this.day() || 6 === this.day()
                    ? "[Ãšltimo] dddd [Ã s] LT"
                    : "[Ãšltima] dddd [Ã s] LT";
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "em %s",
                past: "hÃ¡ %s",
                s: "poucos segundos",
                ss: "%d segundos",
                m: "um minuto",
                mm: "%d minutos",
                h: "uma hora",
                hh: "%d horas",
                d: "um dia",
                dd: "%d dias",
                M: "um mÃªs",
                MM: "%d meses",
                y: "um ano",
                yy: "%d anos"
              },
              dayOfMonthOrdinalParse: /\d{1,2}Âº/,
              ordinal: "%dÂº",
              invalidDate: "Data invÃ¡lida"
            });
          })(a(381));
        },
        9520: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("pt", {
              months: "janeiro_fevereiro_marÃ§o_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split(
                "_"
              ),
              monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split(
                "_"
              ),
              weekdays: "Domingo_Segunda-feira_TerÃ§a-feira_Quarta-feira_Quinta-feira_Sexta-feira_SÃ¡bado".split(
                "_"
              ),
              weekdaysShort: "Dom_Seg_Ter_Qua_Qui_Sex_SÃ¡b".split("_"),
              weekdaysMin: "Do_2Âª_3Âª_4Âª_5Âª_6Âª_SÃ¡".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D [de] MMMM [de] YYYY",
                LLL: "D [de] MMMM [de] YYYY HH:mm",
                LLLL: "dddd, D [de] MMMM [de] YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Hoje Ã s] LT",
                nextDay: "[AmanhÃ£ Ã s] LT",
                nextWeek: "dddd [Ã s] LT",
                lastDay: "[Ontem Ã s] LT",
                lastWeek: function () {
                  return 0 === this.day() || 6 === this.day()
                    ? "[Ãšltimo] dddd [Ã s] LT"
                    : "[Ãšltima] dddd [Ã s] LT";
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "em %s",
                past: "hÃ¡ %s",
                s: "segundos",
                ss: "%d segundos",
                m: "um minuto",
                mm: "%d minutos",
                h: "uma hora",
                hh: "%d horas",
                d: "um dia",
                dd: "%d dias",
                w: "uma semana",
                ww: "%d semanas",
                M: "um mÃªs",
                MM: "%d meses",
                y: "um ano",
                yy: "%d anos"
              },
              dayOfMonthOrdinalParse: /\d{1,2}Âº/,
              ordinal: "%dÂº",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        6459: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t, a) {
              var n = " ";
              return (
                (e % 100 >= 20 || (e >= 100 && e % 100 == 0)) && (n = " de "),
                e +
                  n +
                  {
                    ss: "secunde",
                    mm: "minute",
                    hh: "ore",
                    dd: "zile",
                    ww: "sÄƒptÄƒmÃ¢ni",
                    MM: "luni",
                    yy: "ani"
                  }[a]
              );
            }
            e.defineLocale("ro", {
              months: "ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie".split(
                "_"
              ),
              monthsShort: "ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "duminicÄƒ_luni_marÈ›i_miercuri_joi_vineri_sÃ¢mbÄƒtÄƒ".split(
                "_"
              ),
              weekdaysShort: "Dum_Lun_Mar_Mie_Joi_Vin_SÃ¢m".split("_"),
              weekdaysMin: "Du_Lu_Ma_Mi_Jo_Vi_SÃ¢".split("_"),
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY H:mm",
                LLLL: "dddd, D MMMM YYYY H:mm"
              },
              calendar: {
                sameDay: "[azi la] LT",
                nextDay: "[mÃ¢ine la] LT",
                nextWeek: "dddd [la] LT",
                lastDay: "[ieri la] LT",
                lastWeek: "[fosta] dddd [la] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "peste %s",
                past: "%s Ã®n urmÄƒ",
                s: "cÃ¢teva secunde",
                ss: t,
                m: "un minut",
                mm: t,
                h: "o orÄƒ",
                hh: t,
                d: "o zi",
                dd: t,
                w: "o sÄƒptÄƒmÃ¢nÄƒ",
                ww: t,
                M: "o lunÄƒ",
                MM: t,
                y: "un an",
                yy: t
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        1793: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t) {
              var a = e.split("_");
              return t % 10 == 1 && t % 100 != 11
                ? a[0]
                : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20)
                ? a[1]
                : a[2];
            }
            function a(e, a, n) {
              return "m" === n
                ? a
                  ? "Ð¼Ð¸Ð½ÑƒÑ‚Ð°"
                  : "Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ"
                : e +
                    " " +
                    t(
                      {
                        ss: a
                          ? "ÑÐµÐºÑƒÐ½Ð´Ð°_ÑÐµÐºÑƒÐ½Ð´Ñ‹_ÑÐµÐºÑƒÐ½Ð´"
                          : "ÑÐµÐºÑƒÐ½Ð´Ñƒ_ÑÐµÐºÑƒÐ½Ð´Ñ‹_ÑÐµÐºÑƒÐ½Ð´",
                        mm: a
                          ? "Ð¼Ð¸Ð½ÑƒÑ‚Ð°_Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹_Ð¼Ð¸Ð½ÑƒÑ‚"
                          : "Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ_Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹_Ð¼Ð¸Ð½ÑƒÑ‚",
                        hh: "Ñ‡Ð°Ñ_Ñ‡Ð°ÑÐ°_Ñ‡Ð°ÑÐ¾Ð²",
                        dd: "Ð´ÐµÐ½ÑŒ_Ð´Ð½Ñ_Ð´Ð½ÐµÐ¹",
                        ww: "Ð½ÐµÐ´ÐµÐ»Ñ_Ð½ÐµÐ´ÐµÐ»Ð¸_Ð½ÐµÐ´ÐµÐ»ÑŒ",
                        MM: "Ð¼ÐµÑÑÑ†_Ð¼ÐµÑÑÑ†Ð°_Ð¼ÐµÑÑÑ†ÐµÐ²",
                        yy: "Ð³Ð¾Ð´_Ð³Ð¾Ð´Ð°_Ð»ÐµÑ‚"
                      }[n],
                      +e
                    );
            }
            var n = [
              /^ÑÐ½Ð²/i,
              /^Ñ„ÐµÐ²/i,
              /^Ð¼Ð°Ñ€/i,
              /^Ð°Ð¿Ñ€/i,
              /^Ð¼Ð°[Ð¹Ñ]/i,
              /^Ð¸ÑŽÐ½/i,
              /^Ð¸ÑŽÐ»/i,
              /^Ð°Ð²Ð³/i,
              /^ÑÐµÐ½/i,
              /^Ð¾ÐºÑ‚/i,
              /^Ð½Ð¾Ñ/i,
              /^Ð´ÐµÐº/i
            ];
            e.defineLocale("ru", {
              months: {
                format: "ÑÐ½Ð²Ð°Ñ€Ñ_Ñ„ÐµÐ²Ñ€Ð°Ð»Ñ_Ð¼Ð°Ñ€Ñ‚Ð°_Ð°Ð¿Ñ€ÐµÐ»Ñ_Ð¼Ð°Ñ_Ð¸ÑŽÐ½Ñ_Ð¸ÑŽÐ»Ñ_Ð°Ð²Ð³ÑƒÑÑ‚Ð°_ÑÐµÐ½Ñ‚ÑÐ±Ñ€Ñ_Ð¾ÐºÑ‚ÑÐ±Ñ€Ñ_Ð½Ð¾ÑÐ±Ñ€Ñ_Ð´ÐµÐºÐ°Ð±Ñ€Ñ".split(
                  "_"
                ),
                standalone: "ÑÐ½Ð²Ð°Ñ€ÑŒ_Ñ„ÐµÐ²Ñ€Ð°Ð»ÑŒ_Ð¼Ð°Ñ€Ñ‚_Ð°Ð¿Ñ€ÐµÐ»ÑŒ_Ð¼Ð°Ð¹_Ð¸ÑŽÐ½ÑŒ_Ð¸ÑŽÐ»ÑŒ_Ð°Ð²Ð³ÑƒÑÑ‚_ÑÐµÐ½Ñ‚ÑÐ±Ñ€ÑŒ_Ð¾ÐºÑ‚ÑÐ±Ñ€ÑŒ_Ð½Ð¾ÑÐ±Ñ€ÑŒ_Ð´ÐµÐºÐ°Ð±Ñ€ÑŒ".split(
                  "_"
                )
              },
              monthsShort: {
                format: "ÑÐ½Ð²._Ñ„ÐµÐ²Ñ€._Ð¼Ð°Ñ€._Ð°Ð¿Ñ€._Ð¼Ð°Ñ_Ð¸ÑŽÐ½Ñ_Ð¸ÑŽÐ»Ñ_Ð°Ð²Ð³._ÑÐµÐ½Ñ‚._Ð¾ÐºÑ‚._Ð½Ð¾ÑÐ±._Ð´ÐµÐº.".split(
                  "_"
                ),
                standalone: "ÑÐ½Ð²._Ñ„ÐµÐ²Ñ€._Ð¼Ð°Ñ€Ñ‚_Ð°Ð¿Ñ€._Ð¼Ð°Ð¹_Ð¸ÑŽÐ½ÑŒ_Ð¸ÑŽÐ»ÑŒ_Ð°Ð²Ð³._ÑÐµÐ½Ñ‚._Ð¾ÐºÑ‚._Ð½Ð¾ÑÐ±._Ð´ÐµÐº.".split(
                  "_"
                )
              },
              weekdays: {
                standalone: "Ð²Ð¾ÑÐºÑ€ÐµÑÐµÐ½ÑŒÐµ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑŒÐ½Ð¸Ðº_Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº_ÑÑ€ÐµÐ´Ð°_Ñ‡ÐµÑ‚Ð²ÐµÑ€Ð³_Ð¿ÑÑ‚Ð½Ð¸Ñ†Ð°_ÑÑƒÐ±Ð±Ð¾Ñ‚Ð°".split(
                  "_"
                ),
                format: "Ð²Ð¾ÑÐºÑ€ÐµÑÐµÐ½ÑŒÐµ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑŒÐ½Ð¸Ðº_Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº_ÑÑ€ÐµÐ´Ñƒ_Ñ‡ÐµÑ‚Ð²ÐµÑ€Ð³_Ð¿ÑÑ‚Ð½Ð¸Ñ†Ñƒ_ÑÑƒÐ±Ð±Ð¾Ñ‚Ñƒ".split(
                  "_"
                ),
                isFormat: /\[ ?[Ð’Ð²] ?(?:Ð¿Ñ€Ð¾ÑˆÐ»ÑƒÑŽ|ÑÐ»ÐµÐ´ÑƒÑŽÑ‰ÑƒÑŽ|ÑÑ‚Ñƒ)? ?] ?dddd/
              },
              weekdaysShort: "Ð²Ñ_Ð¿Ð½_Ð²Ñ‚_ÑÑ€_Ñ‡Ñ‚_Ð¿Ñ‚_ÑÐ±".split("_"),
              weekdaysMin: "Ð²Ñ_Ð¿Ð½_Ð²Ñ‚_ÑÑ€_Ñ‡Ñ‚_Ð¿Ñ‚_ÑÐ±".split("_"),
              monthsParse: n,
              longMonthsParse: n,
              shortMonthsParse: n,
              monthsRegex: /^(ÑÐ½Ð²Ð°Ñ€[ÑŒÑ]|ÑÐ½Ð²\.?|Ñ„ÐµÐ²Ñ€Ð°Ð»[ÑŒÑ]|Ñ„ÐµÐ²Ñ€?\.?|Ð¼Ð°Ñ€Ñ‚Ð°?|Ð¼Ð°Ñ€\.?|Ð°Ð¿Ñ€ÐµÐ»[ÑŒÑ]|Ð°Ð¿Ñ€\.?|Ð¼Ð°[Ð¹Ñ]|Ð¸ÑŽÐ½[ÑŒÑ]|Ð¸ÑŽÐ½\.?|Ð¸ÑŽÐ»[ÑŒÑ]|Ð¸ÑŽÐ»\.?|Ð°Ð²Ð³ÑƒÑÑ‚Ð°?|Ð°Ð²Ð³\.?|ÑÐµÐ½Ñ‚ÑÐ±Ñ€[ÑŒÑ]|ÑÐµÐ½Ñ‚?\.?|Ð¾ÐºÑ‚ÑÐ±Ñ€[ÑŒÑ]|Ð¾ÐºÑ‚\.?|Ð½Ð¾ÑÐ±Ñ€[ÑŒÑ]|Ð½Ð¾ÑÐ±?\.?|Ð´ÐµÐºÐ°Ð±Ñ€[ÑŒÑ]|Ð´ÐµÐº\.?)/i,
              monthsShortRegex: /^(ÑÐ½Ð²Ð°Ñ€[ÑŒÑ]|ÑÐ½Ð²\.?|Ñ„ÐµÐ²Ñ€Ð°Ð»[ÑŒÑ]|Ñ„ÐµÐ²Ñ€?\.?|Ð¼Ð°Ñ€Ñ‚Ð°?|Ð¼Ð°Ñ€\.?|Ð°Ð¿Ñ€ÐµÐ»[ÑŒÑ]|Ð°Ð¿Ñ€\.?|Ð¼Ð°[Ð¹Ñ]|Ð¸ÑŽÐ½[ÑŒÑ]|Ð¸ÑŽÐ½\.?|Ð¸ÑŽÐ»[ÑŒÑ]|Ð¸ÑŽÐ»\.?|Ð°Ð²Ð³ÑƒÑÑ‚Ð°?|Ð°Ð²Ð³\.?|ÑÐµÐ½Ñ‚ÑÐ±Ñ€[ÑŒÑ]|ÑÐµÐ½Ñ‚?\.?|Ð¾ÐºÑ‚ÑÐ±Ñ€[ÑŒÑ]|Ð¾ÐºÑ‚\.?|Ð½Ð¾ÑÐ±Ñ€[ÑŒÑ]|Ð½Ð¾ÑÐ±?\.?|Ð´ÐµÐºÐ°Ð±Ñ€[ÑŒÑ]|Ð´ÐµÐº\.?)/i,
              monthsStrictRegex: /^(ÑÐ½Ð²Ð°Ñ€[ÑÑŒ]|Ñ„ÐµÐ²Ñ€Ð°Ð»[ÑÑŒ]|Ð¼Ð°Ñ€Ñ‚Ð°?|Ð°Ð¿Ñ€ÐµÐ»[ÑÑŒ]|Ð¼Ð°[ÑÐ¹]|Ð¸ÑŽÐ½[ÑÑŒ]|Ð¸ÑŽÐ»[ÑÑŒ]|Ð°Ð²Ð³ÑƒÑÑ‚Ð°?|ÑÐµÐ½Ñ‚ÑÐ±Ñ€[ÑÑŒ]|Ð¾ÐºÑ‚ÑÐ±Ñ€[ÑÑŒ]|Ð½Ð¾ÑÐ±Ñ€[ÑÑŒ]|Ð´ÐµÐºÐ°Ð±Ñ€[ÑÑŒ])/i,
              monthsShortStrictRegex: /^(ÑÐ½Ð²\.|Ñ„ÐµÐ²Ñ€?\.|Ð¼Ð°Ñ€[Ñ‚.]|Ð°Ð¿Ñ€\.|Ð¼Ð°[ÑÐ¹]|Ð¸ÑŽÐ½[ÑŒÑ.]|Ð¸ÑŽÐ»[ÑŒÑ.]|Ð°Ð²Ð³\.|ÑÐµÐ½Ñ‚?\.|Ð¾ÐºÑ‚\.|Ð½Ð¾ÑÐ±?\.|Ð´ÐµÐº\.)/i,
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY Ð³.",
                LLL: "D MMMM YYYY Ð³., H:mm",
                LLLL: "dddd, D MMMM YYYY Ð³., H:mm"
              },
              calendar: {
                sameDay: "[Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ, Ð²] LT",
                nextDay: "[Ð—Ð°Ð²Ñ‚Ñ€Ð°, Ð²] LT",
                lastDay: "[Ð’Ñ‡ÐµÑ€Ð°, Ð²] LT",
                nextWeek: function (e) {
                  if (e.week() === this.week())
                    return 2 === this.day()
                      ? "[Ð’Ð¾] dddd, [Ð²] LT"
                      : "[Ð’] dddd, [Ð²] LT";
                  switch (this.day()) {
                    case 0:
                      return "[Ð’ ÑÐ»ÐµÐ´ÑƒÑŽÑ‰ÐµÐµ] dddd, [Ð²] LT";
                    case 1:
                    case 2:
                    case 4:
                      return "[Ð’ ÑÐ»ÐµÐ´ÑƒÑŽÑ‰Ð¸Ð¹] dddd, [Ð²] LT";
                    case 3:
                    case 5:
                    case 6:
                      return "[Ð’ ÑÐ»ÐµÐ´ÑƒÑŽÑ‰ÑƒÑŽ] dddd, [Ð²] LT";
                  }
                },
                lastWeek: function (e) {
                  if (e.week() === this.week())
                    return 2 === this.day()
                      ? "[Ð’Ð¾] dddd, [Ð²] LT"
                      : "[Ð’] dddd, [Ð²] LT";
                  switch (this.day()) {
                    case 0:
                      return "[Ð’ Ð¿Ñ€Ð¾ÑˆÐ»Ð¾Ðµ] dddd, [Ð²] LT";
                    case 1:
                    case 2:
                    case 4:
                      return "[Ð’ Ð¿Ñ€Ð¾ÑˆÐ»Ñ‹Ð¹] dddd, [Ð²] LT";
                    case 3:
                    case 5:
                    case 6:
                      return "[Ð’ Ð¿Ñ€Ð¾ÑˆÐ»ÑƒÑŽ] dddd, [Ð²] LT";
                  }
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "Ñ‡ÐµÑ€ÐµÐ· %s",
                past: "%s Ð½Ð°Ð·Ð°Ð´",
                s: "Ð½ÐµÑÐºÐ¾Ð»ÑŒÐºÐ¾ ÑÐµÐºÑƒÐ½Ð´",
                ss: a,
                m: a,
                mm: a,
                h: "Ñ‡Ð°Ñ",
                hh: a,
                d: "Ð´ÐµÐ½ÑŒ",
                dd: a,
                w: "Ð½ÐµÐ´ÐµÐ»Ñ",
                ww: a,
                M: "Ð¼ÐµÑÑÑ†",
                MM: a,
                y: "Ð³Ð¾Ð´",
                yy: a
              },
              meridiemParse: /Ð½Ð¾Ñ‡Ð¸|ÑƒÑ‚Ñ€Ð°|Ð´Ð½Ñ|Ð²ÐµÑ‡ÐµÑ€Ð°/i,
              isPM: function (e) {
                return /^(Ð´Ð½Ñ|Ð²ÐµÑ‡ÐµÑ€Ð°)$/.test(e);
              },
              meridiem: function (e, t, a) {
                return e < 4
                  ? "Ð½Ð¾Ñ‡Ð¸"
                  : e < 12
                  ? "ÑƒÑ‚Ñ€Ð°"
                  : e < 17
                  ? "Ð´Ð½Ñ"
                  : "Ð²ÐµÑ‡ÐµÑ€Ð°";
              },
              dayOfMonthOrdinalParse: /\d{1,2}-(Ð¹|Ð³Ð¾|Ñ)/,
              ordinal: function (e, t) {
                switch (t) {
                  case "M":
                  case "d":
                  case "DDD":
                    return e + "-Ð¹";
                  case "D":
                    return e + "-Ð³Ð¾";
                  case "w":
                  case "W":
                    return e + "-Ñ";
                  default:
                    return e;
                }
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        950: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = [
                "Ø¬Ù†ÙˆØ±ÙŠ",
                "ÙÙŠØ¨Ø±ÙˆØ±ÙŠ",
                "Ù…Ø§Ø±Ú†",
                "Ø§Ù¾Ø±ÙŠÙ„",
                "Ù…Ø¦ÙŠ",
                "Ø¬ÙˆÙ†",
                "Ø¬ÙˆÙ„Ø§Ø¡Ù",
                "Ø¢Ú¯Ø³Ù½",
                "Ø³ÙŠÙ¾Ù½Ù…Ø¨Ø±",
                "Ø¢ÚªÙ½ÙˆØ¨Ø±",
                "Ù†ÙˆÙ…Ø¨Ø±",
                "ÚŠØ³Ù…Ø¨Ø±"
              ],
              a = [
                "Ø¢Ú†Ø±",
                "Ø³ÙˆÙ…Ø±",
                "Ø§Ú±Ø§Ø±Ùˆ",
                "Ø§Ø±Ø¨Ø¹",
                "Ø®Ù…ÙŠØ³",
                "Ø¬Ù…Ø¹",
                "Ú‡Ù†Ú‡Ø±"
              ];
            e.defineLocale("sd", {
              months: t,
              monthsShort: t,
              weekdays: a,
              weekdaysShort: a,
              weekdaysMin: a,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "ddddØŒ D MMMM YYYY HH:mm"
              },
              meridiemParse: /ØµØ¨Ø­|Ø´Ø§Ù…/,
              isPM: function (e) {
                return "Ø´Ø§Ù…" === e;
              },
              meridiem: function (e, t, a) {
                return e < 12 ? "ØµØ¨Ø­" : "Ø´Ø§Ù…";
              },
              calendar: {
                sameDay: "[Ø§Ú„] LT",
                nextDay: "[Ø³Ú€Ø§Ú»ÙŠ] LT",
                nextWeek: "dddd [Ø§Ú³ÙŠÙ† Ù‡ÙØªÙŠ ØªÙŠ] LT",
                lastDay: "[ÚªØ§Ù„Ù‡Ù‡] LT",
                lastWeek: "[Ú¯Ø²Ø±ÙŠÙ„ Ù‡ÙØªÙŠ] dddd [ØªÙŠ] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s Ù¾ÙˆØ¡",
                past: "%s Ø§Ú³",
                s: "Ú†Ù†Ø¯ Ø³ÙŠÚªÙ†ÚŠ",
                ss: "%d Ø³ÙŠÚªÙ†ÚŠ",
                m: "Ù‡Úª Ù…Ù†Ù½",
                mm: "%d Ù…Ù†Ù½",
                h: "Ù‡Úª ÚªÙ„Ø§Úª",
                hh: "%d ÚªÙ„Ø§Úª",
                d: "Ù‡Úª ÚÙŠÙ†Ù‡Ù†",
                dd: "%d ÚÙŠÙ†Ù‡Ù†",
                M: "Ù‡Úª Ù…Ù‡ÙŠÙ†Ùˆ",
                MM: "%d Ù…Ù‡ÙŠÙ†Ø§",
                y: "Ù‡Úª Ø³Ø§Ù„",
                yy: "%d Ø³Ø§Ù„"
              },
              preparse: function (e) {
                return e.replace(/ØŒ/g, ",");
              },
              postformat: function (e) {
                return e.replace(/,/g, "ØŒ");
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        490: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("se", {
              months: "oÄ‘Ä‘ajagemÃ¡nnu_guovvamÃ¡nnu_njukÄamÃ¡nnu_cuoÅ‹omÃ¡nnu_miessemÃ¡nnu_geassemÃ¡nnu_suoidnemÃ¡nnu_borgemÃ¡nnu_ÄakÄamÃ¡nnu_golggotmÃ¡nnu_skÃ¡bmamÃ¡nnu_juovlamÃ¡nnu".split(
                "_"
              ),
              monthsShort: "oÄ‘Ä‘j_guov_njuk_cuo_mies_geas_suoi_borg_ÄakÄ_golg_skÃ¡b_juov".split(
                "_"
              ),
              weekdays: "sotnabeaivi_vuossÃ¡rga_maÅ‹Å‹ebÃ¡rga_gaskavahkku_duorastat_bearjadat_lÃ¡vvardat".split(
                "_"
              ),
              weekdaysShort: "sotn_vuos_maÅ‹_gask_duor_bear_lÃ¡v".split("_"),
              weekdaysMin: "s_v_m_g_d_b_L".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "MMMM D. [b.] YYYY",
                LLL: "MMMM D. [b.] YYYY [ti.] HH:mm",
                LLLL: "dddd, MMMM D. [b.] YYYY [ti.] HH:mm"
              },
              calendar: {
                sameDay: "[otne ti] LT",
                nextDay: "[ihttin ti] LT",
                nextWeek: "dddd [ti] LT",
                lastDay: "[ikte ti] LT",
                lastWeek: "[ovddit] dddd [ti] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s geaÅ¾es",
                past: "maÅ‹it %s",
                s: "moadde sekunddat",
                ss: "%d sekunddat",
                m: "okta minuhta",
                mm: "%d minuhtat",
                h: "okta diimmu",
                hh: "%d diimmut",
                d: "okta beaivi",
                dd: "%d beaivvit",
                M: "okta mÃ¡nnu",
                MM: "%d mÃ¡nut",
                y: "okta jahki",
                yy: "%d jagit"
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        124: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("si", {
              months: "à¶¢à¶±à·€à·à¶»à·’_à¶´à·™à¶¶à¶»à·€à·à¶»à·’_à¶¸à·à¶»à·Šà¶­à·”_à¶…à¶´à·Šâ€à¶»à·šà¶½à·Š_à¶¸à·à¶ºà·’_à¶¢à·–à¶±à·’_à¶¢à·–à¶½à·’_à¶…à¶œà·à·ƒà·Šà¶­à·”_à·ƒà·à¶´à·Šà¶­à·à¶¸à·Šà¶¶à¶»à·Š_à¶”à¶šà·Šà¶­à·à¶¶à¶»à·Š_à¶±à·œà·€à·à¶¸à·Šà¶¶à¶»à·Š_à¶¯à·™à·ƒà·à¶¸à·Šà¶¶à¶»à·Š".split(
                "_"
              ),
              monthsShort: "à¶¢à¶±_à¶´à·™à¶¶_à¶¸à·à¶»à·Š_à¶…à¶´à·Š_à¶¸à·à¶ºà·’_à¶¢à·–à¶±à·’_à¶¢à·–à¶½à·’_à¶…à¶œà·_à·ƒà·à¶´à·Š_à¶”à¶šà·Š_à¶±à·œà·€à·_à¶¯à·™à·ƒà·".split(
                "_"
              ),
              weekdays: "à¶‰à¶»à·’à¶¯à·_à·ƒà¶³à·”à¶¯à·_à¶…à¶Ÿà·„à¶»à·”à·€à·à¶¯à·_à¶¶à¶¯à·à¶¯à·_à¶¶à·Šâ€à¶»à·„à·ƒà·Šà¶´à¶­à·’à¶±à·Šà¶¯à·_à·ƒà·’à¶šà·”à¶»à·à¶¯à·_à·ƒà·™à¶±à·ƒà·”à¶»à·à¶¯à·".split(
                "_"
              ),
              weekdaysShort: "à¶‰à¶»à·’_à·ƒà¶³à·”_à¶…à¶Ÿ_à¶¶à¶¯à·_à¶¶à·Šâ€à¶»à·„_à·ƒà·’à¶šà·”_à·ƒà·™à¶±".split(
                "_"
              ),
              weekdaysMin: "à¶‰_à·ƒ_à¶…_à¶¶_à¶¶à·Šâ€à¶»_à·ƒà·’_à·ƒà·™".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "a h:mm",
                LTS: "a h:mm:ss",
                L: "YYYY/MM/DD",
                LL: "YYYY MMMM D",
                LLL: "YYYY MMMM D, a h:mm",
                LLLL: "YYYY MMMM D [à·€à·à¶±à·’] dddd, a h:mm:ss"
              },
              calendar: {
                sameDay: "[à¶…à¶¯] LT[à¶§]",
                nextDay: "[à·„à·™à¶§] LT[à¶§]",
                nextWeek: "dddd LT[à¶§]",
                lastDay: "[à¶Šà¶ºà·š] LT[à¶§]",
                lastWeek: "[à¶´à·ƒà·”à¶œà·’à¶º] dddd LT[à¶§]",
                sameElse: "L"
              },
              relativeTime: {
                future: "%sà¶šà·’à¶±à·Š",
                past: "%sà¶šà¶§ à¶´à·™à¶»",
                s: "à¶­à¶­à·Šà¶´à¶» à¶šà·’à·„à·’à¶´à¶º",
                ss: "à¶­à¶­à·Šà¶´à¶» %d",
                m: "à¶¸à·’à¶±à·’à¶­à·Šà¶­à·”à·€",
                mm: "à¶¸à·’à¶±à·’à¶­à·Šà¶­à·” %d",
                h: "à¶´à·à¶º",
                hh: "à¶´à·à¶º %d",
                d: "à¶¯à·’à¶±à¶º",
                dd: "à¶¯à·’à¶± %d",
                M: "à¶¸à·à·ƒà¶º",
                MM: "à¶¸à·à·ƒ %d",
                y: "à·€à·ƒà¶»",
                yy: "à·€à·ƒà¶» %d"
              },
              dayOfMonthOrdinalParse: /\d{1,2} à·€à·à¶±à·’/,
              ordinal: function (e) {
                return e + " à·€à·à¶±à·’";
              },
              meridiemParse: /à¶´à·™à¶» à·€à¶»à·”|à¶´à·ƒà·Š à·€à¶»à·”|à¶´à·™.à·€|à¶´.à·€./,
              isPM: function (e) {
                return "à¶´.à·€." === e || "à¶´à·ƒà·Š à·€à¶»à·”" === e;
              },
              meridiem: function (e, t, a) {
                return e > 11
                  ? a
                    ? "à¶´.à·€."
                    : "à¶´à·ƒà·Š à·€à¶»à·”"
                  : a
                  ? "à¶´à·™.à·€."
                  : "à¶´à·™à¶» à·€à¶»à·”";
              }
            });
          })(a(381));
        },
        4249: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = "januÃ¡r_februÃ¡r_marec_aprÃ­l_mÃ¡j_jÃºn_jÃºl_august_september_oktÃ³ber_november_december".split(
                "_"
              ),
              a = "jan_feb_mar_apr_mÃ¡j_jÃºn_jÃºl_aug_sep_okt_nov_dec".split("_");
            function n(e) {
              return e > 1 && e < 5;
            }
            function i(e, t, a, i) {
              var r = e + " ";
              switch (a) {
                case "s":
                  return t || i ? "pÃ¡r sekÃºnd" : "pÃ¡r sekundami";
                case "ss":
                  return t || i
                    ? r + (n(e) ? "sekundy" : "sekÃºnd")
                    : r + "sekundami";
                case "m":
                  return t ? "minÃºta" : i ? "minÃºtu" : "minÃºtou";
                case "mm":
                  return t || i
                    ? r + (n(e) ? "minÃºty" : "minÃºt")
                    : r + "minÃºtami";
                case "h":
                  return t ? "hodina" : i ? "hodinu" : "hodinou";
                case "hh":
                  return t || i
                    ? r + (n(e) ? "hodiny" : "hodÃ­n")
                    : r + "hodinami";
                case "d":
                  return t || i ? "deÅˆ" : "dÅˆom";
                case "dd":
                  return t || i ? r + (n(e) ? "dni" : "dnÃ­") : r + "dÅˆami";
                case "M":
                  return t || i ? "mesiac" : "mesiacom";
                case "MM":
                  return t || i
                    ? r + (n(e) ? "mesiace" : "mesiacov")
                    : r + "mesiacmi";
                case "y":
                  return t || i ? "rok" : "rokom";
                case "yy":
                  return t || i ? r + (n(e) ? "roky" : "rokov") : r + "rokmi";
              }
            }
            e.defineLocale("sk", {
              months: t,
              monthsShort: a,
              weekdays: "nedeÄ¾a_pondelok_utorok_streda_Å¡tvrtok_piatok_sobota".split(
                "_"
              ),
              weekdaysShort: "ne_po_ut_st_Å¡t_pi_so".split("_"),
              weekdaysMin: "ne_po_ut_st_Å¡t_pi_so".split("_"),
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd D. MMMM YYYY H:mm"
              },
              calendar: {
                sameDay: "[dnes o] LT",
                nextDay: "[zajtra o] LT",
                nextWeek: function () {
                  switch (this.day()) {
                    case 0:
                      return "[v nedeÄ¾u o] LT";
                    case 1:
                    case 2:
                      return "[v] dddd [o] LT";
                    case 3:
                      return "[v stredu o] LT";
                    case 4:
                      return "[vo Å¡tvrtok o] LT";
                    case 5:
                      return "[v piatok o] LT";
                    case 6:
                      return "[v sobotu o] LT";
                  }
                },
                lastDay: "[vÄera o] LT",
                lastWeek: function () {
                  switch (this.day()) {
                    case 0:
                      return "[minulÃº nedeÄ¾u o] LT";
                    case 1:
                    case 2:
                      return "[minulÃ½] dddd [o] LT";
                    case 3:
                      return "[minulÃº stredu o] LT";
                    case 4:
                    case 5:
                      return "[minulÃ½] dddd [o] LT";
                    case 6:
                      return "[minulÃº sobotu o] LT";
                  }
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "za %s",
                past: "pred %s",
                s: i,
                ss: i,
                m: i,
                mm: i,
                h: i,
                hh: i,
                d: i,
                dd: i,
                M: i,
                MM: i,
                y: i,
                yy: i
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        4985: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t, a, n) {
              var i = e + " ";
              switch (a) {
                case "s":
                  return t || n ? "nekaj sekund" : "nekaj sekundami";
                case "ss":
                  return (i +=
                    1 === e
                      ? t
                        ? "sekundo"
                        : "sekundi"
                      : 2 === e
                      ? t || n
                        ? "sekundi"
                        : "sekundah"
                      : e < 5
                      ? t || n
                        ? "sekunde"
                        : "sekundah"
                      : "sekund");
                case "m":
                  return t ? "ena minuta" : "eno minuto";
                case "mm":
                  return (i +=
                    1 === e
                      ? t
                        ? "minuta"
                        : "minuto"
                      : 2 === e
                      ? t || n
                        ? "minuti"
                        : "minutama"
                      : e < 5
                      ? t || n
                        ? "minute"
                        : "minutami"
                      : t || n
                      ? "minut"
                      : "minutami");
                case "h":
                  return t ? "ena ura" : "eno uro";
                case "hh":
                  return (i +=
                    1 === e
                      ? t
                        ? "ura"
                        : "uro"
                      : 2 === e
                      ? t || n
                        ? "uri"
                        : "urama"
                      : e < 5
                      ? t || n
                        ? "ure"
                        : "urami"
                      : t || n
                      ? "ur"
                      : "urami");
                case "d":
                  return t || n ? "en dan" : "enim dnem";
                case "dd":
                  return (i +=
                    1 === e
                      ? t || n
                        ? "dan"
                        : "dnem"
                      : 2 === e
                      ? t || n
                        ? "dni"
                        : "dnevoma"
                      : t || n
                      ? "dni"
                      : "dnevi");
                case "M":
                  return t || n ? "en mesec" : "enim mesecem";
                case "MM":
                  return (i +=
                    1 === e
                      ? t || n
                        ? "mesec"
                        : "mesecem"
                      : 2 === e
                      ? t || n
                        ? "meseca"
                        : "mesecema"
                      : e < 5
                      ? t || n
                        ? "mesece"
                        : "meseci"
                      : t || n
                      ? "mesecev"
                      : "meseci");
                case "y":
                  return t || n ? "eno leto" : "enim letom";
                case "yy":
                  return (i +=
                    1 === e
                      ? t || n
                        ? "leto"
                        : "letom"
                      : 2 === e
                      ? t || n
                        ? "leti"
                        : "letoma"
                      : e < 5
                      ? t || n
                        ? "leta"
                        : "leti"
                      : t || n
                      ? "let"
                      : "leti");
              }
            }
            e.defineLocale("sl", {
              months: "januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december".split(
                "_"
              ),
              monthsShort: "jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "nedelja_ponedeljek_torek_sreda_Äetrtek_petek_sobota".split(
                "_"
              ),
              weekdaysShort: "ned._pon._tor._sre._Äet._pet._sob.".split("_"),
              weekdaysMin: "ne_po_to_sr_Äe_pe_so".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD. MM. YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
              },
              calendar: {
                sameDay: "[danes ob] LT",
                nextDay: "[jutri ob] LT",
                nextWeek: function () {
                  switch (this.day()) {
                    case 0:
                      return "[v] [nedeljo] [ob] LT";
                    case 3:
                      return "[v] [sredo] [ob] LT";
                    case 6:
                      return "[v] [soboto] [ob] LT";
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                      return "[v] dddd [ob] LT";
                  }
                },
                lastDay: "[vÄeraj ob] LT",
                lastWeek: function () {
                  switch (this.day()) {
                    case 0:
                      return "[prejÅ¡njo] [nedeljo] [ob] LT";
                    case 3:
                      return "[prejÅ¡njo] [sredo] [ob] LT";
                    case 6:
                      return "[prejÅ¡njo] [soboto] [ob] LT";
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                      return "[prejÅ¡nji] dddd [ob] LT";
                  }
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "Äez %s",
                past: "pred %s",
                s: t,
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        1104: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("sq", {
              months: "Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_NÃ«ntor_Dhjetor".split(
                "_"
              ),
              monthsShort: "Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_NÃ«n_Dhj".split(
                "_"
              ),
              weekdays: "E Diel_E HÃ«nÃ«_E MartÃ«_E MÃ«rkurÃ«_E Enjte_E Premte_E ShtunÃ«".split(
                "_"
              ),
              weekdaysShort: "Die_HÃ«n_Mar_MÃ«r_Enj_Pre_Sht".split("_"),
              weekdaysMin: "D_H_Ma_MÃ«_E_P_Sh".split("_"),
              weekdaysParseExact: !0,
              meridiemParse: /PD|MD/,
              isPM: function (e) {
                return "M" === e.charAt(0);
              },
              meridiem: function (e, t, a) {
                return e < 12 ? "PD" : "MD";
              },
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Sot nÃ«] LT",
                nextDay: "[NesÃ«r nÃ«] LT",
                nextWeek: "dddd [nÃ«] LT",
                lastDay: "[Dje nÃ«] LT",
                lastWeek: "dddd [e kaluar nÃ«] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "nÃ« %s",
                past: "%s mÃ« parÃ«",
                s: "disa sekonda",
                ss: "%d sekonda",
                m: "njÃ« minutÃ«",
                mm: "%d minuta",
                h: "njÃ« orÃ«",
                hh: "%d orÃ«",
                d: "njÃ« ditÃ«",
                dd: "%d ditÃ«",
                M: "njÃ« muaj",
                MM: "%d muaj",
                y: "njÃ« vit",
                yy: "%d vite"
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        9915: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
              words: {
                ss: ["ÑÐµÐºÑƒÐ½Ð´Ð°", "ÑÐµÐºÑƒÐ½Ð´Ðµ", "ÑÐµÐºÑƒÐ½Ð´Ð¸"],
                m: ["Ñ˜ÐµÐ´Ð°Ð½ Ð¼Ð¸Ð½ÑƒÑ‚", "Ñ˜ÐµÐ´Ð½Ðµ Ð¼Ð¸Ð½ÑƒÑ‚Ðµ"],
                mm: ["Ð¼Ð¸Ð½ÑƒÑ‚", "Ð¼Ð¸Ð½ÑƒÑ‚Ðµ", "Ð¼Ð¸Ð½ÑƒÑ‚Ð°"],
                h: ["Ñ˜ÐµÐ´Ð°Ð½ ÑÐ°Ñ‚", "Ñ˜ÐµÐ´Ð½Ð¾Ð³ ÑÐ°Ñ‚Ð°"],
                hh: ["ÑÐ°Ñ‚", "ÑÐ°Ñ‚Ð°", "ÑÐ°Ñ‚Ð¸"],
                dd: ["Ð´Ð°Ð½", "Ð´Ð°Ð½Ð°", "Ð´Ð°Ð½Ð°"],
                MM: ["Ð¼ÐµÑÐµÑ†", "Ð¼ÐµÑÐµÑ†Ð°", "Ð¼ÐµÑÐµÑ†Ð¸"],
                yy: ["Ð³Ð¾Ð´Ð¸Ð½Ð°", "Ð³Ð¾Ð´Ð¸Ð½Ðµ", "Ð³Ð¾Ð´Ð¸Ð½Ð°"]
              },
              correctGrammaticalCase: function (e, t) {
                return 1 === e ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2];
              },
              translate: function (e, a, n) {
                var i = t.words[n];
                return 1 === n.length
                  ? a
                    ? i[0]
                    : i[1]
                  : e + " " + t.correctGrammaticalCase(e, i);
              }
            };
            e.defineLocale("sr-cyrl", {
              months: "Ñ˜Ð°Ð½ÑƒÐ°Ñ€_Ñ„ÐµÐ±Ñ€ÑƒÐ°Ñ€_Ð¼Ð°Ñ€Ñ‚_Ð°Ð¿Ñ€Ð¸Ð»_Ð¼Ð°Ñ˜_Ñ˜ÑƒÐ½_Ñ˜ÑƒÐ»_Ð°Ð²Ð³ÑƒÑÑ‚_ÑÐµÐ¿Ñ‚ÐµÐ¼Ð±Ð°Ñ€_Ð¾ÐºÑ‚Ð¾Ð±Ð°Ñ€_Ð½Ð¾Ð²ÐµÐ¼Ð±Ð°Ñ€_Ð´ÐµÑ†ÐµÐ¼Ð±Ð°Ñ€".split(
                "_"
              ),
              monthsShort: "Ñ˜Ð°Ð½._Ñ„ÐµÐ±._Ð¼Ð°Ñ€._Ð°Ð¿Ñ€._Ð¼Ð°Ñ˜_Ñ˜ÑƒÐ½_Ñ˜ÑƒÐ»_Ð°Ð²Ð³._ÑÐµÐ¿._Ð¾ÐºÑ‚._Ð½Ð¾Ð²._Ð´ÐµÑ†.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "Ð½ÐµÐ´ÐµÑ™Ð°_Ð¿Ð¾Ð½ÐµÐ´ÐµÑ™Ð°Ðº_ÑƒÑ‚Ð¾Ñ€Ð°Ðº_ÑÑ€ÐµÐ´Ð°_Ñ‡ÐµÑ‚Ð²Ñ€Ñ‚Ð°Ðº_Ð¿ÐµÑ‚Ð°Ðº_ÑÑƒÐ±Ð¾Ñ‚Ð°".split(
                "_"
              ),
              weekdaysShort: "Ð½ÐµÐ´._Ð¿Ð¾Ð½._ÑƒÑ‚Ð¾._ÑÑ€Ðµ._Ñ‡ÐµÑ‚._Ð¿ÐµÑ‚._ÑÑƒÐ±.".split(
                "_"
              ),
              weekdaysMin: "Ð½Ðµ_Ð¿Ð¾_ÑƒÑ‚_ÑÑ€_Ñ‡Ðµ_Ð¿Ðµ_ÑÑƒ".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "D. M. YYYY.",
                LL: "D. MMMM YYYY.",
                LLL: "D. MMMM YYYY. H:mm",
                LLLL: "dddd, D. MMMM YYYY. H:mm"
              },
              calendar: {
                sameDay: "[Ð´Ð°Ð½Ð°Ñ Ñƒ] LT",
                nextDay: "[ÑÑƒÑ‚Ñ€Ð° Ñƒ] LT",
                nextWeek: function () {
                  switch (this.day()) {
                    case 0:
                      return "[Ñƒ] [Ð½ÐµÐ´ÐµÑ™Ñƒ] [Ñƒ] LT";
                    case 3:
                      return "[Ñƒ] [ÑÑ€ÐµÐ´Ñƒ] [Ñƒ] LT";
                    case 6:
                      return "[Ñƒ] [ÑÑƒÐ±Ð¾Ñ‚Ñƒ] [Ñƒ] LT";
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                      return "[Ñƒ] dddd [Ñƒ] LT";
                  }
                },
                lastDay: "[Ñ˜ÑƒÑ‡Ðµ Ñƒ] LT",
                lastWeek: function () {
                  return [
                    "[Ð¿Ñ€Ð¾ÑˆÐ»Ðµ] [Ð½ÐµÐ´ÐµÑ™Ðµ] [Ñƒ] LT",
                    "[Ð¿Ñ€Ð¾ÑˆÐ»Ð¾Ð³] [Ð¿Ð¾Ð½ÐµÐ´ÐµÑ™ÐºÐ°] [Ñƒ] LT",
                    "[Ð¿Ñ€Ð¾ÑˆÐ»Ð¾Ð³] [ÑƒÑ‚Ð¾Ñ€ÐºÐ°] [Ñƒ] LT",
                    "[Ð¿Ñ€Ð¾ÑˆÐ»Ðµ] [ÑÑ€ÐµÐ´Ðµ] [Ñƒ] LT",
                    "[Ð¿Ñ€Ð¾ÑˆÐ»Ð¾Ð³] [Ñ‡ÐµÑ‚Ð²Ñ€Ñ‚ÐºÐ°] [Ñƒ] LT",
                    "[Ð¿Ñ€Ð¾ÑˆÐ»Ð¾Ð³] [Ð¿ÐµÑ‚ÐºÐ°] [Ñƒ] LT",
                    "[Ð¿Ñ€Ð¾ÑˆÐ»Ðµ] [ÑÑƒÐ±Ð¾Ñ‚Ðµ] [Ñƒ] LT"
                  ][this.day()];
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "Ð·Ð° %s",
                past: "Ð¿Ñ€Ðµ %s",
                s: "Ð½ÐµÐºÐ¾Ð»Ð¸ÐºÐ¾ ÑÐµÐºÑƒÐ½Ð´Ð¸",
                ss: t.translate,
                m: t.translate,
                mm: t.translate,
                h: t.translate,
                hh: t.translate,
                d: "Ð´Ð°Ð½",
                dd: t.translate,
                M: "Ð¼ÐµÑÐµÑ†",
                MM: t.translate,
                y: "Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
                yy: t.translate
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        9131: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
              words: {
                ss: ["sekunda", "sekunde", "sekundi"],
                m: ["jedan minut", "jedne minute"],
                mm: ["minut", "minute", "minuta"],
                h: ["jedan sat", "jednog sata"],
                hh: ["sat", "sata", "sati"],
                dd: ["dan", "dana", "dana"],
                MM: ["mesec", "meseca", "meseci"],
                yy: ["godina", "godine", "godina"]
              },
              correctGrammaticalCase: function (e, t) {
                return 1 === e ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2];
              },
              translate: function (e, a, n) {
                var i = t.words[n];
                return 1 === n.length
                  ? a
                    ? i[0]
                    : i[1]
                  : e + " " + t.correctGrammaticalCase(e, i);
              }
            };
            e.defineLocale("sr", {
              months: "januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split(
                "_"
              ),
              monthsShort: "jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "nedelja_ponedeljak_utorak_sreda_Äetvrtak_petak_subota".split(
                "_"
              ),
              weekdaysShort: "ned._pon._uto._sre._Äet._pet._sub.".split("_"),
              weekdaysMin: "ne_po_ut_sr_Äe_pe_su".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "D. M. YYYY.",
                LL: "D. MMMM YYYY.",
                LLL: "D. MMMM YYYY. H:mm",
                LLLL: "dddd, D. MMMM YYYY. H:mm"
              },
              calendar: {
                sameDay: "[danas u] LT",
                nextDay: "[sutra u] LT",
                nextWeek: function () {
                  switch (this.day()) {
                    case 0:
                      return "[u] [nedelju] [u] LT";
                    case 3:
                      return "[u] [sredu] [u] LT";
                    case 6:
                      return "[u] [subotu] [u] LT";
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                      return "[u] dddd [u] LT";
                  }
                },
                lastDay: "[juÄe u] LT",
                lastWeek: function () {
                  return [
                    "[proÅ¡le] [nedelje] [u] LT",
                    "[proÅ¡log] [ponedeljka] [u] LT",
                    "[proÅ¡log] [utorka] [u] LT",
                    "[proÅ¡le] [srede] [u] LT",
                    "[proÅ¡log] [Äetvrtka] [u] LT",
                    "[proÅ¡log] [petka] [u] LT",
                    "[proÅ¡le] [subote] [u] LT"
                  ][this.day()];
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "za %s",
                past: "pre %s",
                s: "nekoliko sekundi",
                ss: t.translate,
                m: t.translate,
                mm: t.translate,
                h: t.translate,
                hh: t.translate,
                d: "dan",
                dd: t.translate,
                M: "mesec",
                MM: t.translate,
                y: "godinu",
                yy: t.translate
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        5893: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("ss", {
              months: "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split(
                "_"
              ),
              monthsShort: "Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo".split(
                "_"
              ),
              weekdays: "Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo".split(
                "_"
              ),
              weekdaysShort: "Lis_Umb_Lsb_Les_Lsi_Lsh_Umg".split("_"),
              weekdaysMin: "Li_Us_Lb_Lt_Ls_Lh_Ug".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY h:mm A",
                LLLL: "dddd, D MMMM YYYY h:mm A"
              },
              calendar: {
                sameDay: "[Namuhla nga] LT",
                nextDay: "[Kusasa nga] LT",
                nextWeek: "dddd [nga] LT",
                lastDay: "[Itolo nga] LT",
                lastWeek: "dddd [leliphelile] [nga] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "nga %s",
                past: "wenteka nga %s",
                s: "emizuzwana lomcane",
                ss: "%d mzuzwana",
                m: "umzuzu",
                mm: "%d emizuzu",
                h: "lihora",
                hh: "%d emahora",
                d: "lilanga",
                dd: "%d emalanga",
                M: "inyanga",
                MM: "%d tinyanga",
                y: "umnyaka",
                yy: "%d iminyaka"
              },
              meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
              meridiem: function (e, t, a) {
                return e < 11
                  ? "ekuseni"
                  : e < 15
                  ? "emini"
                  : e < 19
                  ? "entsambama"
                  : "ebusuku";
              },
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "ekuseni" === t
                    ? e
                    : "emini" === t
                    ? e >= 11
                      ? e
                      : e + 12
                    : "entsambama" === t || "ebusuku" === t
                    ? 0 === e
                      ? 0
                      : e + 12
                    : void 0
                );
              },
              dayOfMonthOrdinalParse: /\d{1,2}/,
              ordinal: "%d",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        8760: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("sv", {
              months: "januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december".split(
                "_"
              ),
              monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split(
                "_"
              ),
              weekdays: "sÃ¶ndag_mÃ¥ndag_tisdag_onsdag_torsdag_fredag_lÃ¶rdag".split(
                "_"
              ),
              weekdaysShort: "sÃ¶n_mÃ¥n_tis_ons_tor_fre_lÃ¶r".split("_"),
              weekdaysMin: "sÃ¶_mÃ¥_ti_on_to_fr_lÃ¶".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY [kl.] HH:mm",
                LLLL: "dddd D MMMM YYYY [kl.] HH:mm",
                lll: "D MMM YYYY HH:mm",
                llll: "ddd D MMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Idag] LT",
                nextDay: "[Imorgon] LT",
                lastDay: "[IgÃ¥r] LT",
                nextWeek: "[PÃ¥] dddd LT",
                lastWeek: "[I] dddd[s] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "om %s",
                past: "fÃ¶r %s sedan",
                s: "nÃ¥gra sekunder",
                ss: "%d sekunder",
                m: "en minut",
                mm: "%d minuter",
                h: "en timme",
                hh: "%d timmar",
                d: "en dag",
                dd: "%d dagar",
                M: "en mÃ¥nad",
                MM: "%d mÃ¥nader",
                y: "ett Ã¥r",
                yy: "%d Ã¥r"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(\:e|\:a)/,
              ordinal: function (e) {
                var t = e % 10;
                return (
                  e +
                  (1 == ~~((e % 100) / 10)
                    ? ":e"
                    : 1 === t || 2 === t
                    ? ":a"
                    : ":e")
                );
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        1172: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("sw", {
              months: "Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba".split(
                "_"
              ),
              monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des".split(
                "_"
              ),
              weekdays: "Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi".split(
                "_"
              ),
              weekdaysShort: "Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos".split("_"),
              weekdaysMin: "J2_J3_J4_J5_Al_Ij_J1".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "hh:mm A",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[leo saa] LT",
                nextDay: "[kesho saa] LT",
                nextWeek: "[wiki ijayo] dddd [saat] LT",
                lastDay: "[jana] LT",
                lastWeek: "[wiki iliyopita] dddd [saat] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s baadaye",
                past: "tokea %s",
                s: "hivi punde",
                ss: "sekunde %d",
                m: "dakika moja",
                mm: "dakika %d",
                h: "saa limoja",
                hh: "masaa %d",
                d: "siku moja",
                dd: "siku %d",
                M: "mwezi mmoja",
                MM: "miezi %d",
                y: "mwaka mmoja",
                yy: "miaka %d"
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        7333: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
                1: "à¯§",
                2: "à¯¨",
                3: "à¯©",
                4: "à¯ª",
                5: "à¯«",
                6: "à¯¬",
                7: "à¯­",
                8: "à¯®",
                9: "à¯¯",
                0: "à¯¦"
              },
              a = {
                "à¯§": "1",
                "à¯¨": "2",
                "à¯©": "3",
                "à¯ª": "4",
                "à¯«": "5",
                "à¯¬": "6",
                "à¯­": "7",
                "à¯®": "8",
                "à¯¯": "9",
                "à¯¦": "0"
              };
            e.defineLocale("ta", {
              months: "à®œà®©à®µà®°à®¿_à®ªà®¿à®ªà¯à®°à®µà®°à®¿_à®®à®¾à®°à¯à®šà¯_à®à®ªà¯à®°à®²à¯_à®®à¯‡_à®œà¯‚à®©à¯_à®œà¯‚à®²à¯ˆ_à®†à®•à®¸à¯à®Ÿà¯_à®šà¯†à®ªà¯à®Ÿà¯†à®®à¯à®ªà®°à¯_à®…à®•à¯à®Ÿà¯‡à®¾à®ªà®°à¯_à®¨à®µà®®à¯à®ªà®°à¯_à®Ÿà®¿à®šà®®à¯à®ªà®°à¯".split(
                "_"
              ),
              monthsShort: "à®œà®©à®µà®°à®¿_à®ªà®¿à®ªà¯à®°à®µà®°à®¿_à®®à®¾à®°à¯à®šà¯_à®à®ªà¯à®°à®²à¯_à®®à¯‡_à®œà¯‚à®©à¯_à®œà¯‚à®²à¯ˆ_à®†à®•à®¸à¯à®Ÿà¯_à®šà¯†à®ªà¯à®Ÿà¯†à®®à¯à®ªà®°à¯_à®…à®•à¯à®Ÿà¯‡à®¾à®ªà®°à¯_à®¨à®µà®®à¯à®ªà®°à¯_à®Ÿà®¿à®šà®®à¯à®ªà®°à¯".split(
                "_"
              ),
              weekdays: "à®žà®¾à®¯à®¿à®±à¯à®±à¯à®•à¯à®•à®¿à®´à®®à¯ˆ_à®¤à®¿à®™à¯à®•à®Ÿà¯à®•à®¿à®´à®®à¯ˆ_à®šà¯†à®µà¯à®µà®¾à®¯à¯à®•à®¿à®´à®®à¯ˆ_à®ªà¯à®¤à®©à¯à®•à®¿à®´à®®à¯ˆ_à®µà®¿à®¯à®¾à®´à®•à¯à®•à®¿à®´à®®à¯ˆ_à®µà¯†à®³à¯à®³à®¿à®•à¯à®•à®¿à®´à®®à¯ˆ_à®šà®©à®¿à®•à¯à®•à®¿à®´à®®à¯ˆ".split(
                "_"
              ),
              weekdaysShort: "à®žà®¾à®¯à®¿à®±à¯_à®¤à®¿à®™à¯à®•à®³à¯_à®šà¯†à®µà¯à®µà®¾à®¯à¯_à®ªà¯à®¤à®©à¯_à®µà®¿à®¯à®¾à®´à®©à¯_à®µà¯†à®³à¯à®³à®¿_à®šà®©à®¿".split(
                "_"
              ),
              weekdaysMin: "à®žà®¾_à®¤à®¿_à®šà¯†_à®ªà¯_à®µà®¿_à®µà¯†_à®š".split(
                "_"
              ),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, HH:mm",
                LLLL: "dddd, D MMMM YYYY, HH:mm"
              },
              calendar: {
                sameDay: "[à®‡à®©à¯à®±à¯] LT",
                nextDay: "[à®¨à®¾à®³à¯ˆ] LT",
                nextWeek: "dddd, LT",
                lastDay: "[à®¨à¯‡à®±à¯à®±à¯] LT",
                lastWeek: "[à®•à®Ÿà®¨à¯à®¤ à®µà®¾à®°à®®à¯] dddd, LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s à®‡à®²à¯",
                past: "%s à®®à¯à®©à¯",
                s: "à®’à®°à¯ à®šà®¿à®² à®µà®¿à®¨à®¾à®Ÿà®¿à®•à®³à¯",
                ss: "%d à®µà®¿à®¨à®¾à®Ÿà®¿à®•à®³à¯",
                m: "à®’à®°à¯ à®¨à®¿à®®à®¿à®Ÿà®®à¯",
                mm: "%d à®¨à®¿à®®à®¿à®Ÿà®™à¯à®•à®³à¯",
                h: "à®’à®°à¯ à®®à®£à®¿ à®¨à¯‡à®°à®®à¯",
                hh: "%d à®®à®£à®¿ à®¨à¯‡à®°à®®à¯",
                d: "à®’à®°à¯ à®¨à®¾à®³à¯",
                dd: "%d à®¨à®¾à®Ÿà¯à®•à®³à¯",
                M: "à®’à®°à¯ à®®à®¾à®¤à®®à¯",
                MM: "%d à®®à®¾à®¤à®™à¯à®•à®³à¯",
                y: "à®’à®°à¯ à®µà®°à¯à®Ÿà®®à¯",
                yy: "%d à®†à®£à¯à®Ÿà¯à®•à®³à¯"
              },
              dayOfMonthOrdinalParse: /\d{1,2}à®µà®¤à¯/,
              ordinal: function (e) {
                return e + "à®µà®¤à¯";
              },
              preparse: function (e) {
                return e.replace(
                  /[à¯§à¯¨à¯©à¯ªà¯«à¯¬à¯­à¯®à¯¯à¯¦]/g,
                  function (e) {
                    return a[e];
                  }
                );
              },
              postformat: function (e) {
                return e.replace(/\d/g, function (e) {
                  return t[e];
                });
              },
              meridiemParse: /à®¯à®¾à®®à®®à¯|à®µà¯ˆà®•à®±à¯ˆ|à®•à®¾à®²à¯ˆ|à®¨à®£à¯à®ªà®•à®²à¯|à®Žà®±à¯à®ªà®¾à®Ÿà¯|à®®à®¾à®²à¯ˆ/,
              meridiem: function (e, t, a) {
                return e < 2
                  ? " à®¯à®¾à®®à®®à¯"
                  : e < 6
                  ? " à®µà¯ˆà®•à®±à¯ˆ"
                  : e < 10
                  ? " à®•à®¾à®²à¯ˆ"
                  : e < 14
                  ? " à®¨à®£à¯à®ªà®•à®²à¯"
                  : e < 18
                  ? " à®Žà®±à¯à®ªà®¾à®Ÿà¯"
                  : e < 22
                  ? " à®®à®¾à®²à¯ˆ"
                  : " à®¯à®¾à®®à®®à¯";
              },
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "à®¯à®¾à®®à®®à¯" === t
                    ? e < 2
                      ? e
                      : e + 12
                    : "à®µà¯ˆà®•à®±à¯ˆ" === t ||
                      "à®•à®¾à®²à¯ˆ" === t ||
                      ("à®¨à®£à¯à®ªà®•à®²à¯" === t && e >= 10)
                    ? e
                    : e + 12
                );
              },
              week: { dow: 0, doy: 6 }
            });
          })(a(381));
        },
        3110: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("te", {
              months: "à°œà°¨à°µà°°à°¿_à°«à°¿à°¬à±à°°à°µà°°à°¿_à°®à°¾à°°à±à°šà°¿_à°à°ªà±à°°à°¿à°²à±_à°®à±‡_à°œà±‚à°¨à±_à°œà±à°²à±ˆ_à°†à°—à°¸à±à°Ÿà±_à°¸à±†à°ªà±à°Ÿà±†à°‚à°¬à°°à±_à°…à°•à±à°Ÿà±‹à°¬à°°à±_à°¨à°µà°‚à°¬à°°à±_à°¡à°¿à°¸à±†à°‚à°¬à°°à±".split(
                "_"
              ),
              monthsShort: "à°œà°¨._à°«à°¿à°¬à±à°°._à°®à°¾à°°à±à°šà°¿_à°à°ªà±à°°à°¿._à°®à±‡_à°œà±‚à°¨à±_à°œà±à°²à±ˆ_à°†à°—._à°¸à±†à°ªà±._à°…à°•à±à°Ÿà±‹._à°¨à°µ._à°¡à°¿à°¸à±†.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "à°†à°¦à°¿à°µà°¾à°°à°‚_à°¸à±‹à°®à°µà°¾à°°à°‚_à°®à°‚à°—à°³à°µà°¾à°°à°‚_à°¬à±à°§à°µà°¾à°°à°‚_à°—à±à°°à±à°µà°¾à°°à°‚_à°¶à±à°•à±à°°à°µà°¾à°°à°‚_à°¶à°¨à°¿à°µà°¾à°°à°‚".split(
                "_"
              ),
              weekdaysShort: "à°†à°¦à°¿_à°¸à±‹à°®_à°®à°‚à°—à°³_à°¬à±à°§_à°—à±à°°à±_à°¶à±à°•à±à°°_à°¶à°¨à°¿".split(
                "_"
              ),
              weekdaysMin: "à°†_à°¸à±‹_à°®à°‚_à°¬à±_à°—à±_à°¶à±_à°¶".split("_"),
              longDateFormat: {
                LT: "A h:mm",
                LTS: "A h:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm",
                LLLL: "dddd, D MMMM YYYY, A h:mm"
              },
              calendar: {
                sameDay: "[à°¨à±‡à°¡à±] LT",
                nextDay: "[à°°à±‡à°ªà±] LT",
                nextWeek: "dddd, LT",
                lastDay: "[à°¨à°¿à°¨à±à°¨] LT",
                lastWeek: "[à°—à°¤] dddd, LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s à°²à±‹",
                past: "%s à°•à±à°°à°¿à°¤à°‚",
                s: "à°•à±Šà°¨à±à°¨à°¿ à°•à±à°·à°£à°¾à°²à±",
                ss: "%d à°¸à±†à°•à°¨à±à°²à±",
                m: "à°’à°• à°¨à°¿à°®à°¿à°·à°‚",
                mm: "%d à°¨à°¿à°®à°¿à°·à°¾à°²à±",
                h: "à°’à°• à°—à°‚à°Ÿ",
                hh: "%d à°—à°‚à°Ÿà°²à±",
                d: "à°’à°• à°°à±‹à°œà±",
                dd: "%d à°°à±‹à°œà±à°²à±",
                M: "à°’à°• à°¨à±†à°²",
                MM: "%d à°¨à±†à°²à°²à±",
                y: "à°’à°• à°¸à°‚à°µà°¤à±à°¸à°°à°‚",
                yy: "%d à°¸à°‚à°µà°¤à±à°¸à°°à°¾à°²à±"
              },
              dayOfMonthOrdinalParse: /\d{1,2}à°µ/,
              ordinal: "%dà°µ",
              meridiemParse: /à°°à°¾à°¤à±à°°à°¿|à°‰à°¦à°¯à°‚|à°®à°§à±à°¯à°¾à°¹à±à°¨à°‚|à°¸à°¾à°¯à°‚à°¤à±à°°à°‚/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "à°°à°¾à°¤à±à°°à°¿" === t
                    ? e < 4
                      ? e
                      : e + 12
                    : "à°‰à°¦à°¯à°‚" === t
                    ? e
                    : "à°®à°§à±à°¯à°¾à°¹à±à°¨à°‚" === t
                    ? e >= 10
                      ? e
                      : e + 12
                    : "à°¸à°¾à°¯à°‚à°¤à±à°°à°‚" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                return e < 4
                  ? "à°°à°¾à°¤à±à°°à°¿"
                  : e < 10
                  ? "à°‰à°¦à°¯à°‚"
                  : e < 17
                  ? "à°®à°§à±à°¯à°¾à°¹à±à°¨à°‚"
                  : e < 20
                  ? "à°¸à°¾à°¯à°‚à°¤à±à°°à°‚"
                  : "à°°à°¾à°¤à±à°°à°¿";
              },
              week: { dow: 0, doy: 6 }
            });
          })(a(381));
        },
        2095: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("tet", {
              months: "Janeiru_Fevereiru_Marsu_Abril_Maiu_JuÃ±u_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru".split(
                "_"
              ),
              monthsShort: "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split(
                "_"
              ),
              weekdays: "Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu".split(
                "_"
              ),
              weekdaysShort: "Dom_Seg_Ters_Kua_Kint_Sest_Sab".split("_"),
              weekdaysMin: "Do_Seg_Te_Ku_Ki_Ses_Sa".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Ohin iha] LT",
                nextDay: "[Aban iha] LT",
                nextWeek: "dddd [iha] LT",
                lastDay: "[Horiseik iha] LT",
                lastWeek: "dddd [semana kotuk] [iha] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "iha %s",
                past: "%s liuba",
                s: "segundu balun",
                ss: "segundu %d",
                m: "minutu ida",
                mm: "minutu %d",
                h: "oras ida",
                hh: "oras %d",
                d: "loron ida",
                dd: "loron %d",
                M: "fulan ida",
                MM: "fulan %d",
                y: "tinan ida",
                yy: "tinan %d"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
              ordinal: function (e) {
                var t = e % 10;
                return (
                  e +
                  (1 == ~~((e % 100) / 10)
                    ? "th"
                    : 1 === t
                    ? "st"
                    : 2 === t
                    ? "nd"
                    : 3 === t
                    ? "rd"
                    : "th")
                );
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        7321: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
              0: "-ÑƒÐ¼",
              1: "-ÑƒÐ¼",
              2: "-ÑŽÐ¼",
              3: "-ÑŽÐ¼",
              4: "-ÑƒÐ¼",
              5: "-ÑƒÐ¼",
              6: "-ÑƒÐ¼",
              7: "-ÑƒÐ¼",
              8: "-ÑƒÐ¼",
              9: "-ÑƒÐ¼",
              10: "-ÑƒÐ¼",
              12: "-ÑƒÐ¼",
              13: "-ÑƒÐ¼",
              20: "-ÑƒÐ¼",
              30: "-ÑŽÐ¼",
              40: "-ÑƒÐ¼",
              50: "-ÑƒÐ¼",
              60: "-ÑƒÐ¼",
              70: "-ÑƒÐ¼",
              80: "-ÑƒÐ¼",
              90: "-ÑƒÐ¼",
              100: "-ÑƒÐ¼"
            };
            e.defineLocale("tg", {
              months: {
                format: "ÑÐ½Ð²Ð°Ñ€Ð¸_Ñ„ÐµÐ²Ñ€Ð°Ð»Ð¸_Ð¼Ð°Ñ€Ñ‚Ð¸_Ð°Ð¿Ñ€ÐµÐ»Ð¸_Ð¼Ð°Ð¹Ð¸_Ð¸ÑŽÐ½Ð¸_Ð¸ÑŽÐ»Ð¸_Ð°Ð²Ð³ÑƒÑÑ‚Ð¸_ÑÐµÐ½Ñ‚ÑÐ±Ñ€Ð¸_Ð¾ÐºÑ‚ÑÐ±Ñ€Ð¸_Ð½Ð¾ÑÐ±Ñ€Ð¸_Ð´ÐµÐºÐ°Ð±Ñ€Ð¸".split(
                  "_"
                ),
                standalone: "ÑÐ½Ð²Ð°Ñ€_Ñ„ÐµÐ²Ñ€Ð°Ð»_Ð¼Ð°Ñ€Ñ‚_Ð°Ð¿Ñ€ÐµÐ»_Ð¼Ð°Ð¹_Ð¸ÑŽÐ½_Ð¸ÑŽÐ»_Ð°Ð²Ð³ÑƒÑÑ‚_ÑÐµÐ½Ñ‚ÑÐ±Ñ€_Ð¾ÐºÑ‚ÑÐ±Ñ€_Ð½Ð¾ÑÐ±Ñ€_Ð´ÐµÐºÐ°Ð±Ñ€".split(
                  "_"
                )
              },
              monthsShort: "ÑÐ½Ð²_Ñ„ÐµÐ²_Ð¼Ð°Ñ€_Ð°Ð¿Ñ€_Ð¼Ð°Ð¹_Ð¸ÑŽÐ½_Ð¸ÑŽÐ»_Ð°Ð²Ð³_ÑÐµÐ½_Ð¾ÐºÑ‚_Ð½Ð¾Ñ_Ð´ÐµÐº".split(
                "_"
              ),
              weekdays: "ÑÐºÑˆÐ°Ð½Ð±Ðµ_Ð´ÑƒÑˆÐ°Ð½Ð±Ðµ_ÑÐµÑˆÐ°Ð½Ð±Ðµ_Ñ‡Ð¾Ñ€ÑˆÐ°Ð½Ð±Ðµ_Ð¿Ð°Ð½Ò·ÑˆÐ°Ð½Ð±Ðµ_Ò·ÑƒÐ¼ÑŠÐ°_ÑˆÐ°Ð½Ð±Ðµ".split(
                "_"
              ),
              weekdaysShort: "ÑÑˆÐ±_Ð´ÑˆÐ±_ÑÑˆÐ±_Ñ‡ÑˆÐ±_Ð¿ÑˆÐ±_Ò·ÑƒÐ¼_ÑˆÐ½Ð±".split(
                "_"
              ),
              weekdaysMin: "ÑÑˆ_Ð´Ñˆ_ÑÑˆ_Ñ‡Ñˆ_Ð¿Ñˆ_Ò·Ð¼_ÑˆÐ±".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[Ð˜Ð¼Ñ€Ó¯Ð· ÑÐ¾Ð°Ñ‚Ð¸] LT",
                nextDay: "[Ð¤Ð°Ñ€Ð´Ð¾ ÑÐ¾Ð°Ñ‚Ð¸] LT",
                lastDay: "[Ð”Ð¸Ñ€Ó¯Ð· ÑÐ¾Ð°Ñ‚Ð¸] LT",
                nextWeek: "dddd[Ð¸] [Ò³Ð°Ñ„Ñ‚Ð°Ð¸ Ð¾ÑÐ½Ð´Ð° ÑÐ¾Ð°Ñ‚Ð¸] LT",
                lastWeek: "dddd[Ð¸] [Ò³Ð°Ñ„Ñ‚Ð°Ð¸ Ð³ÑƒÐ·Ð°ÑˆÑ‚Ð° ÑÐ¾Ð°Ñ‚Ð¸] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "Ð±Ð°ÑŠÐ´Ð¸ %s",
                past: "%s Ð¿ÐµÑˆ",
                s: "ÑÐºÑ‡Ð°Ð½Ð´ ÑÐ¾Ð½Ð¸Ñ",
                m: "ÑÐº Ð´Ð°Ò›Ð¸Ò›Ð°",
                mm: "%d Ð´Ð°Ò›Ð¸Ò›Ð°",
                h: "ÑÐº ÑÐ¾Ð°Ñ‚",
                hh: "%d ÑÐ¾Ð°Ñ‚",
                d: "ÑÐº Ñ€Ó¯Ð·",
                dd: "%d Ñ€Ó¯Ð·",
                M: "ÑÐº Ð¼Ð¾Ò³",
                MM: "%d Ð¼Ð¾Ò³",
                y: "ÑÐº ÑÐ¾Ð»",
                yy: "%d ÑÐ¾Ð»"
              },
              meridiemParse: /ÑˆÐ°Ð±|ÑÑƒÐ±Ò³|Ñ€Ó¯Ð·|Ð±ÐµÐ³Ð¾Ò³/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "ÑˆÐ°Ð±" === t
                    ? e < 4
                      ? e
                      : e + 12
                    : "ÑÑƒÐ±Ò³" === t
                    ? e
                    : "Ñ€Ó¯Ð·" === t
                    ? e >= 11
                      ? e
                      : e + 12
                    : "Ð±ÐµÐ³Ð¾Ò³" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                return e < 4
                  ? "ÑˆÐ°Ð±"
                  : e < 11
                  ? "ÑÑƒÐ±Ò³"
                  : e < 16
                  ? "Ñ€Ó¯Ð·"
                  : e < 19
                  ? "Ð±ÐµÐ³Ð¾Ò³"
                  : "ÑˆÐ°Ð±";
              },
              dayOfMonthOrdinalParse: /\d{1,2}-(ÑƒÐ¼|ÑŽÐ¼)/,
              ordinal: function (e) {
                var a = e % 10,
                  n = e >= 100 ? 100 : null;
                return e + (t[e] || t[a] || t[n]);
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        9041: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("th", {
              months: "à¸¡à¸à¸£à¸²à¸„à¸¡_à¸à¸¸à¸¡à¸ à¸²à¸žà¸±à¸™à¸˜à¹Œ_à¸¡à¸µà¸™à¸²à¸„à¸¡_à¹€à¸¡à¸©à¸²à¸¢à¸™_à¸žà¸¤à¸©à¸ à¸²à¸„à¸¡_à¸¡à¸´à¸–à¸¸à¸™à¸²à¸¢à¸™_à¸à¸£à¸à¸Žà¸²à¸„à¸¡_à¸ªà¸´à¸‡à¸«à¸²à¸„à¸¡_à¸à¸±à¸™à¸¢à¸²à¸¢à¸™_à¸•à¸¸à¸¥à¸²à¸„à¸¡_à¸žà¸¤à¸¨à¸ˆà¸´à¸à¸²à¸¢à¸™_à¸˜à¸±à¸™à¸§à¸²à¸„à¸¡".split(
                "_"
              ),
              monthsShort: "à¸¡.à¸„._à¸.à¸ž._à¸¡à¸µ.à¸„._à¹€à¸¡.à¸¢._à¸ž.à¸„._à¸¡à¸´.à¸¢._à¸.à¸„._à¸ª.à¸„._à¸.à¸¢._à¸•.à¸„._à¸ž.à¸¢._à¸˜.à¸„.".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "à¸­à¸²à¸—à¸´à¸•à¸¢à¹Œ_à¸ˆà¸±à¸™à¸—à¸£à¹Œ_à¸­à¸±à¸‡à¸„à¸²à¸£_à¸žà¸¸à¸˜_à¸žà¸¤à¸«à¸±à¸ªà¸šà¸”à¸µ_à¸¨à¸¸à¸à¸£à¹Œ_à¹€à¸ªà¸²à¸£à¹Œ".split(
                "_"
              ),
              weekdaysShort: "à¸­à¸²à¸—à¸´à¸•à¸¢à¹Œ_à¸ˆà¸±à¸™à¸—à¸£à¹Œ_à¸­à¸±à¸‡à¸„à¸²à¸£_à¸žà¸¸à¸˜_à¸žà¸¤à¸«à¸±à¸ª_à¸¨à¸¸à¸à¸£à¹Œ_à¹€à¸ªà¸²à¸£à¹Œ".split(
                "_"
              ),
              weekdaysMin: "à¸­à¸²._à¸ˆ._à¸­._à¸ž._à¸žà¸¤._à¸¨._à¸ª.".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY à¹€à¸§à¸¥à¸² H:mm",
                LLLL: "à¸§à¸±à¸™ddddà¸—à¸µà¹ˆ D MMMM YYYY à¹€à¸§à¸¥à¸² H:mm"
              },
              meridiemParse: /à¸à¹ˆà¸­à¸™à¹€à¸—à¸µà¹ˆà¸¢à¸‡|à¸«à¸¥à¸±à¸‡à¹€à¸—à¸µà¹ˆà¸¢à¸‡/,
              isPM: function (e) {
                return "à¸«à¸¥à¸±à¸‡à¹€à¸—à¸µà¹ˆà¸¢à¸‡" === e;
              },
              meridiem: function (e, t, a) {
                return e < 12
                  ? "à¸à¹ˆà¸­à¸™à¹€à¸—à¸µà¹ˆà¸¢à¸‡"
                  : "à¸«à¸¥à¸±à¸‡à¹€à¸—à¸µà¹ˆà¸¢à¸‡";
              },
              calendar: {
                sameDay: "[à¸§à¸±à¸™à¸™à¸µà¹‰ à¹€à¸§à¸¥à¸²] LT",
                nextDay: "[à¸žà¸£à¸¸à¹ˆà¸‡à¸™à¸µà¹‰ à¹€à¸§à¸¥à¸²] LT",
                nextWeek: "dddd[à¸«à¸™à¹‰à¸² à¹€à¸§à¸¥à¸²] LT",
                lastDay: "[à¹€à¸¡à¸·à¹ˆà¸­à¸§à¸²à¸™à¸™à¸µà¹‰ à¹€à¸§à¸¥à¸²] LT",
                lastWeek: "[à¸§à¸±à¸™]dddd[à¸—à¸µà¹ˆà¹à¸¥à¹‰à¸§ à¹€à¸§à¸¥à¸²] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "à¸­à¸µà¸ %s",
                past: "%sà¸—à¸µà¹ˆà¹à¸¥à¹‰à¸§",
                s: "à¹„à¸¡à¹ˆà¸à¸µà¹ˆà¸§à¸´à¸™à¸²à¸—à¸µ",
                ss: "%d à¸§à¸´à¸™à¸²à¸—à¸µ",
                m: "1 à¸™à¸²à¸—à¸µ",
                mm: "%d à¸™à¸²à¸—à¸µ",
                h: "1 à¸Šà¸±à¹ˆà¸§à¹‚à¸¡à¸‡",
                hh: "%d à¸Šà¸±à¹ˆà¸§à¹‚à¸¡à¸‡",
                d: "1 à¸§à¸±à¸™",
                dd: "%d à¸§à¸±à¸™",
                w: "1 à¸ªà¸±à¸›à¸”à¸²à¸«à¹Œ",
                ww: "%d à¸ªà¸±à¸›à¸”à¸²à¸«à¹Œ",
                M: "1 à¹€à¸”à¸·à¸­à¸™",
                MM: "%d à¹€à¸”à¸·à¸­à¸™",
                y: "1 à¸›à¸µ",
                yy: "%d à¸›à¸µ"
              }
            });
          })(a(381));
        },
        9005: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
              1: "'inji",
              5: "'inji",
              8: "'inji",
              70: "'inji",
              80: "'inji",
              2: "'nji",
              7: "'nji",
              20: "'nji",
              50: "'nji",
              3: "'Ã¼nji",
              4: "'Ã¼nji",
              100: "'Ã¼nji",
              6: "'njy",
              9: "'unjy",
              10: "'unjy",
              30: "'unjy",
              60: "'ynjy",
              90: "'ynjy"
            };
            e.defineLocale("tk", {
              months: "Ãanwar_Fewral_Mart_Aprel_MaÃ½_IÃ½un_IÃ½ul_Awgust_SentÃ½abr_OktÃ½abr_NoÃ½abr_Dekabr".split(
                "_"
              ),
              monthsShort: "Ãan_Few_Mar_Apr_MaÃ½_IÃ½n_IÃ½l_Awg_Sen_Okt_NoÃ½_Dek".split(
                "_"
              ),
              weekdays: "ÃekÅŸenbe_DuÅŸenbe_SiÅŸenbe_Ã‡arÅŸenbe_PenÅŸenbe_Anna_Åženbe".split(
                "_"
              ),
              weekdaysShort: "Ãek_DuÅŸ_SiÅŸ_Ã‡ar_Pen_Ann_Åžen".split("_"),
              weekdaysMin: "Ãk_DÅŸ_SÅŸ_Ã‡r_Pn_An_Åžn".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[bugÃ¼n sagat] LT",
                nextDay: "[ertir sagat] LT",
                nextWeek: "[indiki] dddd [sagat] LT",
                lastDay: "[dÃ¼Ã½n] LT",
                lastWeek: "[geÃ§en] dddd [sagat] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s soÅˆ",
                past: "%s Ã¶Åˆ",
                s: "birnÃ¤Ã§e sekunt",
                m: "bir minut",
                mm: "%d minut",
                h: "bir sagat",
                hh: "%d sagat",
                d: "bir gÃ¼n",
                dd: "%d gÃ¼n",
                M: "bir aÃ½",
                MM: "%d aÃ½",
                y: "bir Ã½yl",
                yy: "%d Ã½yl"
              },
              ordinal: function (e, a) {
                switch (a) {
                  case "d":
                  case "D":
                  case "Do":
                  case "DD":
                    return e;
                  default:
                    if (0 === e) return e + "'unjy";
                    var n = e % 10,
                      i = (e % 100) - n,
                      r = e >= 100 ? 100 : null;
                    return e + (t[n] || t[i] || t[r]);
                }
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        5768: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("tl-ph", {
              months: "Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split(
                "_"
              ),
              monthsShort: "Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split(
                "_"
              ),
              weekdays: "Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split(
                "_"
              ),
              weekdaysShort: "Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),
              weekdaysMin: "Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "MM/D/YYYY",
                LL: "MMMM D, YYYY",
                LLL: "MMMM D, YYYY HH:mm",
                LLLL: "dddd, MMMM DD, YYYY HH:mm"
              },
              calendar: {
                sameDay: "LT [ngayong araw]",
                nextDay: "[Bukas ng] LT",
                nextWeek: "LT [sa susunod na] dddd",
                lastDay: "LT [kahapon]",
                lastWeek: "LT [noong nakaraang] dddd",
                sameElse: "L"
              },
              relativeTime: {
                future: "sa loob ng %s",
                past: "%s ang nakalipas",
                s: "ilang segundo",
                ss: "%d segundo",
                m: "isang minuto",
                mm: "%d minuto",
                h: "isang oras",
                hh: "%d oras",
                d: "isang araw",
                dd: "%d araw",
                M: "isang buwan",
                MM: "%d buwan",
                y: "isang taon",
                yy: "%d taon"
              },
              dayOfMonthOrdinalParse: /\d{1,2}/,
              ordinal: function (e) {
                return e;
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        9444: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = "pagh_waâ€™_chaâ€™_wej_loS_vagh_jav_Soch_chorgh_Hut".split(
              "_"
            );
            function a(e) {
              var t = e;
              return (t =
                -1 !== e.indexOf("jaj")
                  ? t.slice(0, -3) + "leS"
                  : -1 !== e.indexOf("jar")
                  ? t.slice(0, -3) + "waQ"
                  : -1 !== e.indexOf("DIS")
                  ? t.slice(0, -3) + "nem"
                  : t + " pIq");
            }
            function n(e) {
              var t = e;
              return (t =
                -1 !== e.indexOf("jaj")
                  ? t.slice(0, -3) + "Huâ€™"
                  : -1 !== e.indexOf("jar")
                  ? t.slice(0, -3) + "wen"
                  : -1 !== e.indexOf("DIS")
                  ? t.slice(0, -3) + "ben"
                  : t + " ret");
            }
            function i(e, t, a, n) {
              var i = r(e);
              switch (a) {
                case "ss":
                  return i + " lup";
                case "mm":
                  return i + " tup";
                case "hh":
                  return i + " rep";
                case "dd":
                  return i + " jaj";
                case "MM":
                  return i + " jar";
                case "yy":
                  return i + " DIS";
              }
            }
            function r(e) {
              var a = Math.floor((e % 1e3) / 100),
                n = Math.floor((e % 100) / 10),
                i = e % 10,
                r = "";
              return (
                a > 0 && (r += t[a] + "vatlh"),
                n > 0 && (r += ("" !== r ? " " : "") + t[n] + "maH"),
                i > 0 && (r += ("" !== r ? " " : "") + t[i]),
                "" === r ? "pagh" : r
              );
            }
            e.defineLocale("tlh", {
              months: "teraâ€™ jar waâ€™_teraâ€™ jar chaâ€™_teraâ€™ jar wej_teraâ€™ jar loS_teraâ€™ jar vagh_teraâ€™ jar jav_teraâ€™ jar Soch_teraâ€™ jar chorgh_teraâ€™ jar Hut_teraâ€™ jar waâ€™maH_teraâ€™ jar waâ€™maH waâ€™_teraâ€™ jar waâ€™maH chaâ€™".split(
                "_"
              ),
              monthsShort: "jar waâ€™_jar chaâ€™_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar waâ€™maH_jar waâ€™maH waâ€™_jar waâ€™maH chaâ€™".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split(
                "_"
              ),
              weekdaysShort: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split(
                "_"
              ),
              weekdaysMin: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split(
                "_"
              ),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[DaHjaj] LT",
                nextDay: "[waâ€™leS] LT",
                nextWeek: "LLL",
                lastDay: "[waâ€™Huâ€™] LT",
                lastWeek: "LLL",
                sameElse: "L"
              },
              relativeTime: {
                future: a,
                past: n,
                s: "puS lup",
                ss: i,
                m: "waâ€™ tup",
                mm: i,
                h: "waâ€™ rep",
                hh: i,
                d: "waâ€™ jaj",
                dd: i,
                M: "waâ€™ jar",
                MM: i,
                y: "waâ€™ DIS",
                yy: i
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        2397: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = {
              1: "'inci",
              5: "'inci",
              8: "'inci",
              70: "'inci",
              80: "'inci",
              2: "'nci",
              7: "'nci",
              20: "'nci",
              50: "'nci",
              3: "'Ã¼ncÃ¼",
              4: "'Ã¼ncÃ¼",
              100: "'Ã¼ncÃ¼",
              6: "'ncÄ±",
              9: "'uncu",
              10: "'uncu",
              30: "'uncu",
              60: "'Ä±ncÄ±",
              90: "'Ä±ncÄ±"
            };
            e.defineLocale("tr", {
              months: "Ocak_Åžubat_Mart_Nisan_MayÄ±s_Haziran_Temmuz_AÄŸustos_EylÃ¼l_Ekim_KasÄ±m_AralÄ±k".split(
                "_"
              ),
              monthsShort: "Oca_Åžub_Mar_Nis_May_Haz_Tem_AÄŸu_Eyl_Eki_Kas_Ara".split(
                "_"
              ),
              weekdays: "Pazar_Pazartesi_SalÄ±_Ã‡arÅŸamba_PerÅŸembe_Cuma_Cumartesi".split(
                "_"
              ),
              weekdaysShort: "Paz_Pts_Sal_Ã‡ar_Per_Cum_Cts".split("_"),
              weekdaysMin: "Pz_Pt_Sa_Ã‡a_Pe_Cu_Ct".split("_"),
              meridiem: function (e, t, a) {
                return e < 12 ? (a ? "Ã¶Ã¶" : "Ã–Ã–") : a ? "Ã¶s" : "Ã–S";
              },
              meridiemParse: /Ã¶Ã¶|Ã–Ã–|Ã¶s|Ã–S/,
              isPM: function (e) {
                return "Ã¶s" === e || "Ã–S" === e;
              },
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[bugÃ¼n saat] LT",
                nextDay: "[yarÄ±n saat] LT",
                nextWeek: "[gelecek] dddd [saat] LT",
                lastDay: "[dÃ¼n] LT",
                lastWeek: "[geÃ§en] dddd [saat] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s sonra",
                past: "%s Ã¶nce",
                s: "birkaÃ§ saniye",
                ss: "%d saniye",
                m: "bir dakika",
                mm: "%d dakika",
                h: "bir saat",
                hh: "%d saat",
                d: "bir gÃ¼n",
                dd: "%d gÃ¼n",
                w: "bir hafta",
                ww: "%d hafta",
                M: "bir ay",
                MM: "%d ay",
                y: "bir yÄ±l",
                yy: "%d yÄ±l"
              },
              ordinal: function (e, a) {
                switch (a) {
                  case "d":
                  case "D":
                  case "Do":
                  case "DD":
                    return e;
                  default:
                    if (0 === e) return e + "'Ä±ncÄ±";
                    var n = e % 10,
                      i = (e % 100) - n,
                      r = e >= 100 ? 100 : null;
                    return e + (t[n] || t[i] || t[r]);
                }
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        8254: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t, a, n) {
              var i = {
                s: ["viensas secunds", "'iensas secunds"],
                ss: [e + " secunds", e + " secunds"],
                m: ["'n mÃ­ut", "'iens mÃ­ut"],
                mm: [e + " mÃ­uts", e + " mÃ­uts"],
                h: ["'n Ã¾ora", "'iensa Ã¾ora"],
                hh: [e + " Ã¾oras", e + " Ã¾oras"],
                d: ["'n ziua", "'iensa ziua"],
                dd: [e + " ziuas", e + " ziuas"],
                M: ["'n mes", "'iens mes"],
                MM: [e + " mesen", e + " mesen"],
                y: ["'n ar", "'iens ar"],
                yy: [e + " ars", e + " ars"]
              };
              return n || t ? i[a][0] : i[a][1];
            }
            e.defineLocale("tzl", {
              months: "Januar_Fevraglh_MarÃ§_AvrÃ¯u_Mai_GÃ¼n_Julia_Guscht_Setemvar_ListopÃ¤ts_Noemvar_Zecemvar".split(
                "_"
              ),
              monthsShort: "Jan_Fev_Mar_Avr_Mai_GÃ¼n_Jul_Gus_Set_Lis_Noe_Zec".split(
                "_"
              ),
              weekdays: "SÃºladi_LÃºneÃ§i_Maitzi_MÃ¡rcuri_XhÃºadi_ViÃ©nerÃ§i_SÃ¡turi".split(
                "_"
              ),
              weekdaysShort: "SÃºl_LÃºn_Mai_MÃ¡r_XhÃº_ViÃ©_SÃ¡t".split("_"),
              weekdaysMin: "SÃº_LÃº_Ma_MÃ¡_Xh_Vi_SÃ¡".split("_"),
              longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM [dallas] YYYY",
                LLL: "D. MMMM [dallas] YYYY HH.mm",
                LLLL: "dddd, [li] D. MMMM [dallas] YYYY HH.mm"
              },
              meridiemParse: /d\'o|d\'a/i,
              isPM: function (e) {
                return "d'o" === e.toLowerCase();
              },
              meridiem: function (e, t, a) {
                return e > 11 ? (a ? "d'o" : "D'O") : a ? "d'a" : "D'A";
              },
              calendar: {
                sameDay: "[oxhi Ã ] LT",
                nextDay: "[demÃ  Ã ] LT",
                nextWeek: "dddd [Ã ] LT",
                lastDay: "[ieiri Ã ] LT",
                lastWeek: "[sÃ¼r el] dddd [lasteu Ã ] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "osprei %s",
                past: "ja%s",
                s: t,
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
              },
              dayOfMonthOrdinalParse: /\d{1,2}\./,
              ordinal: "%d.",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        699: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("tzm-latn", {
              months: "innayr_brË¤ayrË¤_marË¤sË¤_ibrir_mayyw_ywnyw_ywlywz_É£wÅ¡t_Å¡wtanbir_ktË¤wbrË¤_nwwanbir_dwjnbir".split(
                "_"
              ),
              monthsShort: "innayr_brË¤ayrË¤_marË¤sË¤_ibrir_mayyw_ywnyw_ywlywz_É£wÅ¡t_Å¡wtanbir_ktË¤wbrË¤_nwwanbir_dwjnbir".split(
                "_"
              ),
              weekdays: "asamas_aynas_asinas_akras_akwas_asimwas_asiá¸yas".split(
                "_"
              ),
              weekdaysShort: "asamas_aynas_asinas_akras_akwas_asimwas_asiá¸yas".split(
                "_"
              ),
              weekdaysMin: "asamas_aynas_asinas_akras_akwas_asimwas_asiá¸yas".split(
                "_"
              ),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[asdkh g] LT",
                nextDay: "[aska g] LT",
                nextWeek: "dddd [g] LT",
                lastDay: "[assant g] LT",
                lastWeek: "dddd [g] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "dadkh s yan %s",
                past: "yan %s",
                s: "imik",
                ss: "%d imik",
                m: "minuá¸",
                mm: "%d minuá¸",
                h: "saÉ›a",
                hh: "%d tassaÉ›in",
                d: "ass",
                dd: "%d ossan",
                M: "ayowr",
                MM: "%d iyyirn",
                y: "asgas",
                yy: "%d isgasn"
              },
              week: { dow: 6, doy: 12 }
            });
          })(a(381));
        },
        1106: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("tzm", {
              months: "âµ‰âµâµâ´°âµ¢âµ”_â´±âµ•â´°âµ¢âµ•_âµŽâ´°âµ•âµš_âµ‰â´±âµ”âµ‰âµ”_âµŽâ´°âµ¢âµ¢âµ“_âµ¢âµ“âµâµ¢âµ“_âµ¢âµ“âµâµ¢âµ“âµ£_âµ–âµ“âµ›âµœ_âµ›âµ“âµœâ´°âµâ´±âµ‰âµ”_â´½âµŸâµ“â´±âµ•_âµâµ“âµ¡â´°âµâ´±âµ‰âµ”_â´·âµ“âµŠâµâ´±âµ‰âµ”".split(
                "_"
              ),
              monthsShort: "âµ‰âµâµâ´°âµ¢âµ”_â´±âµ•â´°âµ¢âµ•_âµŽâ´°âµ•âµš_âµ‰â´±âµ”âµ‰âµ”_âµŽâ´°âµ¢âµ¢âµ“_âµ¢âµ“âµâµ¢âµ“_âµ¢âµ“âµâµ¢âµ“âµ£_âµ–âµ“âµ›âµœ_âµ›âµ“âµœâ´°âµâ´±âµ‰âµ”_â´½âµŸâµ“â´±âµ•_âµâµ“âµ¡â´°âµâ´±âµ‰âµ”_â´·âµ“âµŠâµâ´±âµ‰âµ”".split(
                "_"
              ),
              weekdays: "â´°âµ™â´°âµŽâ´°âµ™_â´°âµ¢âµâ´°âµ™_â´°âµ™âµ‰âµâ´°âµ™_â´°â´½âµ”â´°âµ™_â´°â´½âµ¡â´°âµ™_â´°âµ™âµ‰âµŽâµ¡â´°âµ™_â´°âµ™âµ‰â´¹âµ¢â´°âµ™".split(
                "_"
              ),
              weekdaysShort: "â´°âµ™â´°âµŽâ´°âµ™_â´°âµ¢âµâ´°âµ™_â´°âµ™âµ‰âµâ´°âµ™_â´°â´½âµ”â´°âµ™_â´°â´½âµ¡â´°âµ™_â´°âµ™âµ‰âµŽâµ¡â´°âµ™_â´°âµ™âµ‰â´¹âµ¢â´°âµ™".split(
                "_"
              ),
              weekdaysMin: "â´°âµ™â´°âµŽâ´°âµ™_â´°âµ¢âµâ´°âµ™_â´°âµ™âµ‰âµâ´°âµ™_â´°â´½âµ”â´°âµ™_â´°â´½âµ¡â´°âµ™_â´°âµ™âµ‰âµŽâµ¡â´°âµ™_â´°âµ™âµ‰â´¹âµ¢â´°âµ™".split(
                "_"
              ),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[â´°âµ™â´·âµ… â´´] LT",
                nextDay: "[â´°âµ™â´½â´° â´´] LT",
                nextWeek: "dddd [â´´] LT",
                lastDay: "[â´°âµšâ´°âµâµœ â´´] LT",
                lastWeek: "dddd [â´´] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "â´·â´°â´·âµ… âµ™ âµ¢â´°âµ %s",
                past: "âµ¢â´°âµ %s",
                s: "âµ‰âµŽâµ‰â´½",
                ss: "%d âµ‰âµŽâµ‰â´½",
                m: "âµŽâµ‰âµâµ“â´º",
                mm: "%d âµŽâµ‰âµâµ“â´º",
                h: "âµ™â´°âµ„â´°",
                hh: "%d âµœâ´°âµ™âµ™â´°âµ„âµ‰âµ",
                d: "â´°âµ™âµ™",
                dd: "%d oâµ™âµ™â´°âµ",
                M: "â´°âµ¢oâµ“âµ”",
                MM: "%d âµ‰âµ¢âµ¢âµ‰âµ”âµ",
                y: "â´°âµ™â´³â´°âµ™",
                yy: "%d âµ‰âµ™â´³â´°âµ™âµ"
              },
              week: { dow: 6, doy: 12 }
            });
          })(a(381));
        },
        9288: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("ug-cn", {
              months: "ÙŠØ§Ù†Û‹Ø§Ø±_ÙÛÛ‹Ø±Ø§Ù„_Ù…Ø§Ø±Øª_Ø¦Ø§Ù¾Ø±ÛÙ„_Ù…Ø§ÙŠ_Ø¦Ù‰ÙŠÛ‡Ù†_Ø¦Ù‰ÙŠÛ‡Ù„_Ø¦Ø§Û‹ØºÛ‡Ø³Øª_Ø³ÛÙ†ØªÛ•Ø¨Ù‰Ø±_Ø¦Û†ÙƒØªÛ•Ø¨Ù‰Ø±_Ù†ÙˆÙŠØ§Ø¨Ù‰Ø±_Ø¯ÛÙƒØ§Ø¨Ù‰Ø±".split(
                "_"
              ),
              monthsShort: "ÙŠØ§Ù†Û‹Ø§Ø±_ÙÛÛ‹Ø±Ø§Ù„_Ù…Ø§Ø±Øª_Ø¦Ø§Ù¾Ø±ÛÙ„_Ù…Ø§ÙŠ_Ø¦Ù‰ÙŠÛ‡Ù†_Ø¦Ù‰ÙŠÛ‡Ù„_Ø¦Ø§Û‹ØºÛ‡Ø³Øª_Ø³ÛÙ†ØªÛ•Ø¨Ù‰Ø±_Ø¦Û†ÙƒØªÛ•Ø¨Ù‰Ø±_Ù†ÙˆÙŠØ§Ø¨Ù‰Ø±_Ø¯ÛÙƒØ§Ø¨Ù‰Ø±".split(
                "_"
              ),
              weekdays: "ÙŠÛ•ÙƒØ´Û•Ù†Ø¨Û•_Ø¯ÛˆØ´Û•Ù†Ø¨Û•_Ø³Û•ÙŠØ´Û•Ù†Ø¨Û•_Ú†Ø§Ø±Ø´Û•Ù†Ø¨Û•_Ù¾Û•ÙŠØ´Û•Ù†Ø¨Û•_Ø¬ÛˆÙ…Û•_Ø´Û•Ù†Ø¨Û•".split(
                "_"
              ),
              weekdaysShort: "ÙŠÛ•_Ø¯Ûˆ_Ø³Û•_Ú†Ø§_Ù¾Û•_Ø¬Ûˆ_Ø´Û•".split("_"),
              weekdaysMin: "ÙŠÛ•_Ø¯Ûˆ_Ø³Û•_Ú†Ø§_Ù¾Û•_Ø¬Ûˆ_Ø´Û•".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "YYYY-ÙŠÙ‰Ù„Ù‰M-Ø¦Ø§ÙŠÙ†Ù‰Ú­D-ÙƒÛˆÙ†Ù‰",
                LLL: "YYYY-ÙŠÙ‰Ù„Ù‰M-Ø¦Ø§ÙŠÙ†Ù‰Ú­D-ÙƒÛˆÙ†Ù‰ØŒ HH:mm",
                LLLL: "ddddØŒ YYYY-ÙŠÙ‰Ù„Ù‰M-Ø¦Ø§ÙŠÙ†Ù‰Ú­D-ÙƒÛˆÙ†Ù‰ØŒ HH:mm"
              },
              meridiemParse: /ÙŠÛØ±Ù‰Ù… ÙƒÛÚ†Û•|Ø³Û•Ú¾Û•Ø±|Ú†ÛˆØ´ØªÙ‰Ù† Ø¨Û‡Ø±Û‡Ù†|Ú†ÛˆØ´|Ú†ÛˆØ´ØªÙ‰Ù† ÙƒÛÙŠÙ‰Ù†|ÙƒÛ•Ú†/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "ÙŠÛØ±Ù‰Ù… ÙƒÛÚ†Û•" === t ||
                  "Ø³Û•Ú¾Û•Ø±" === t ||
                  "Ú†ÛˆØ´ØªÙ‰Ù† Ø¨Û‡Ø±Û‡Ù†" === t
                    ? e
                    : "Ú†ÛˆØ´ØªÙ‰Ù† ÙƒÛÙŠÙ‰Ù†" === t || "ÙƒÛ•Ú†" === t
                    ? e + 12
                    : e >= 11
                    ? e
                    : e + 12
                );
              },
              meridiem: function (e, t, a) {
                var n = 100 * e + t;
                return n < 600
                  ? "ÙŠÛØ±Ù‰Ù… ÙƒÛÚ†Û•"
                  : n < 900
                  ? "Ø³Û•Ú¾Û•Ø±"
                  : n < 1130
                  ? "Ú†ÛˆØ´ØªÙ‰Ù† Ø¨Û‡Ø±Û‡Ù†"
                  : n < 1230
                  ? "Ú†ÛˆØ´"
                  : n < 1800
                  ? "Ú†ÛˆØ´ØªÙ‰Ù† ÙƒÛÙŠÙ‰Ù†"
                  : "ÙƒÛ•Ú†";
              },
              calendar: {
                sameDay: "[Ø¨ÛˆÚ¯ÛˆÙ† Ø³Ø§Ø¦Û•Øª] LT",
                nextDay: "[Ø¦Û•ØªÛ• Ø³Ø§Ø¦Û•Øª] LT",
                nextWeek: "[ÙƒÛÙ„Û•Ø±ÙƒÙ‰] dddd [Ø³Ø§Ø¦Û•Øª] LT",
                lastDay: "[ØªÛ†Ù†ÛˆÚ¯ÛˆÙ†] LT",
                lastWeek: "[Ø¦Ø§Ù„Ø¯Ù‰Ù†Ù‚Ù‰] dddd [Ø³Ø§Ø¦Û•Øª] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s ÙƒÛÙŠÙ‰Ù†",
                past: "%s Ø¨Û‡Ø±Û‡Ù†",
                s: "Ù†Û•Ú†Ú†Û• Ø³ÛÙƒÙˆÙ†Øª",
                ss: "%d Ø³ÛÙƒÙˆÙ†Øª",
                m: "Ø¨Ù‰Ø± Ù…Ù‰Ù†Û‡Øª",
                mm: "%d Ù…Ù‰Ù†Û‡Øª",
                h: "Ø¨Ù‰Ø± Ø³Ø§Ø¦Û•Øª",
                hh: "%d Ø³Ø§Ø¦Û•Øª",
                d: "Ø¨Ù‰Ø± ÙƒÛˆÙ†",
                dd: "%d ÙƒÛˆÙ†",
                M: "Ø¨Ù‰Ø± Ø¦Ø§ÙŠ",
                MM: "%d Ø¦Ø§ÙŠ",
                y: "Ø¨Ù‰Ø± ÙŠÙ‰Ù„",
                yy: "%d ÙŠÙ‰Ù„"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(-ÙƒÛˆÙ†Ù‰|-Ø¦Ø§ÙŠ|-Ú¾Û•Ù¾ØªÛ•)/,
              ordinal: function (e, t) {
                switch (t) {
                  case "d":
                  case "D":
                  case "DDD":
                    return e + "-ÙƒÛˆÙ†Ù‰";
                  case "w":
                  case "W":
                    return e + "-Ú¾Û•Ù¾ØªÛ•";
                  default:
                    return e;
                }
              },
              preparse: function (e) {
                return e.replace(/ØŒ/g, ",");
              },
              postformat: function (e) {
                return e.replace(/,/g, "ØŒ");
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        7691: function (e, t, a) {
          !(function (e) {
            "use strict";
            function t(e, t) {
              var a = e.split("_");
              return t % 10 == 1 && t % 100 != 11
                ? a[0]
                : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20)
                ? a[1]
                : a[2];
            }
            function a(e, a, n) {
              return "m" === n
                ? a
                  ? "Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð°"
                  : "Ñ…Ð²Ð¸Ð»Ð¸Ð½Ñƒ"
                : "h" === n
                ? a
                  ? "Ð³Ð¾Ð´Ð¸Ð½Ð°"
                  : "Ð³Ð¾Ð´Ð¸Ð½Ñƒ"
                : e +
                  " " +
                  t(
                    {
                      ss: a
                        ? "ÑÐµÐºÑƒÐ½Ð´Ð°_ÑÐµÐºÑƒÐ½Ð´Ð¸_ÑÐµÐºÑƒÐ½Ð´"
                        : "ÑÐµÐºÑƒÐ½Ð´Ñƒ_ÑÐµÐºÑƒÐ½Ð´Ð¸_ÑÐµÐºÑƒÐ½Ð´",
                      mm: a
                        ? "Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð°_Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸_Ñ…Ð²Ð¸Ð»Ð¸Ð½"
                        : "Ñ…Ð²Ð¸Ð»Ð¸Ð½Ñƒ_Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸_Ñ…Ð²Ð¸Ð»Ð¸Ð½",
                      hh: a
                        ? "Ð³Ð¾Ð´Ð¸Ð½Ð°_Ð³Ð¾Ð´Ð¸Ð½Ð¸_Ð³Ð¾Ð´Ð¸Ð½"
                        : "Ð³Ð¾Ð´Ð¸Ð½Ñƒ_Ð³Ð¾Ð´Ð¸Ð½Ð¸_Ð³Ð¾Ð´Ð¸Ð½",
                      dd: "Ð´ÐµÐ½ÑŒ_Ð´Ð½Ñ–_Ð´Ð½Ñ–Ð²",
                      MM: "Ð¼Ñ–ÑÑÑ†ÑŒ_Ð¼Ñ–ÑÑÑ†Ñ–_Ð¼Ñ–ÑÑÑ†Ñ–Ð²",
                      yy: "Ñ€Ñ–Ðº_Ñ€Ð¾ÐºÐ¸_Ñ€Ð¾ÐºÑ–Ð²"
                    }[n],
                    +e
                  );
            }
            function n(e, t) {
              var a = {
                nominative: "Ð½ÐµÐ´Ñ–Ð»Ñ_Ð¿Ð¾Ð½ÐµÐ´Ñ–Ð»Ð¾Ðº_Ð²Ñ–Ð²Ñ‚Ð¾Ñ€Ð¾Ðº_ÑÐµÑ€ÐµÐ´Ð°_Ñ‡ÐµÑ‚Ð²ÐµÑ€_Ð¿â€™ÑÑ‚Ð½Ð¸Ñ†Ñ_ÑÑƒÐ±Ð¾Ñ‚Ð°".split(
                  "_"
                ),
                accusative: "Ð½ÐµÐ´Ñ–Ð»ÑŽ_Ð¿Ð¾Ð½ÐµÐ´Ñ–Ð»Ð¾Ðº_Ð²Ñ–Ð²Ñ‚Ð¾Ñ€Ð¾Ðº_ÑÐµÑ€ÐµÐ´Ñƒ_Ñ‡ÐµÑ‚Ð²ÐµÑ€_Ð¿â€™ÑÑ‚Ð½Ð¸Ñ†ÑŽ_ÑÑƒÐ±Ð¾Ñ‚Ñƒ".split(
                  "_"
                ),
                genitive: "Ð½ÐµÐ´Ñ–Ð»Ñ–_Ð¿Ð¾Ð½ÐµÐ´Ñ–Ð»ÐºÐ°_Ð²Ñ–Ð²Ñ‚Ð¾Ñ€ÐºÐ°_ÑÐµÑ€ÐµÐ´Ð¸_Ñ‡ÐµÑ‚Ð²ÐµÑ€Ð³Ð°_Ð¿â€™ÑÑ‚Ð½Ð¸Ñ†Ñ–_ÑÑƒÐ±Ð¾Ñ‚Ð¸".split(
                  "_"
                )
              };
              return !0 === e
                ? a.nominative.slice(1, 7).concat(a.nominative.slice(0, 1))
                : e
                ? a[
                    /(\[[Ð’Ð²Ð£Ñƒ]\]) ?dddd/.test(t)
                      ? "accusative"
                      : /\[?(?:Ð¼Ð¸Ð½ÑƒÐ»Ð¾Ñ—|Ð½Ð°ÑÑ‚ÑƒÐ¿Ð½Ð¾Ñ—)? ?\] ?dddd/.test(
                          t
                        )
                      ? "genitive"
                      : "nominative"
                  ][e.day()]
                : a.nominative;
            }
            function i(e) {
              return function () {
                return e + "Ð¾" + (11 === this.hours() ? "Ð±" : "") + "] LT";
              };
            }
            e.defineLocale("uk", {
              months: {
                format: "ÑÑ–Ñ‡Ð½Ñ_Ð»ÑŽÑ‚Ð¾Ð³Ð¾_Ð±ÐµÑ€ÐµÐ·Ð½Ñ_ÐºÐ²Ñ–Ñ‚Ð½Ñ_Ñ‚Ñ€Ð°Ð²Ð½Ñ_Ñ‡ÐµÑ€Ð²Ð½Ñ_Ð»Ð¸Ð¿Ð½Ñ_ÑÐµÑ€Ð¿Ð½Ñ_Ð²ÐµÑ€ÐµÑÐ½Ñ_Ð¶Ð¾Ð²Ñ‚Ð½Ñ_Ð»Ð¸ÑÑ‚Ð¾Ð¿Ð°Ð´Ð°_Ð³Ñ€ÑƒÐ´Ð½Ñ".split(
                  "_"
                ),
                standalone: "ÑÑ–Ñ‡ÐµÐ½ÑŒ_Ð»ÑŽÑ‚Ð¸Ð¹_Ð±ÐµÑ€ÐµÐ·ÐµÐ½ÑŒ_ÐºÐ²Ñ–Ñ‚ÐµÐ½ÑŒ_Ñ‚Ñ€Ð°Ð²ÐµÐ½ÑŒ_Ñ‡ÐµÑ€Ð²ÐµÐ½ÑŒ_Ð»Ð¸Ð¿ÐµÐ½ÑŒ_ÑÐµÑ€Ð¿ÐµÐ½ÑŒ_Ð²ÐµÑ€ÐµÑÐµÐ½ÑŒ_Ð¶Ð¾Ð²Ñ‚ÐµÐ½ÑŒ_Ð»Ð¸ÑÑ‚Ð¾Ð¿Ð°Ð´_Ð³Ñ€ÑƒÐ´ÐµÐ½ÑŒ".split(
                  "_"
                )
              },
              monthsShort: "ÑÑ–Ñ‡_Ð»ÑŽÑ‚_Ð±ÐµÑ€_ÐºÐ²Ñ–Ñ‚_Ñ‚Ñ€Ð°Ð²_Ñ‡ÐµÑ€Ð²_Ð»Ð¸Ð¿_ÑÐµÑ€Ð¿_Ð²ÐµÑ€_Ð¶Ð¾Ð²Ñ‚_Ð»Ð¸ÑÑ‚_Ð³Ñ€ÑƒÐ´".split(
                "_"
              ),
              weekdays: n,
              weekdaysShort: "Ð½Ð´_Ð¿Ð½_Ð²Ñ‚_ÑÑ€_Ñ‡Ñ‚_Ð¿Ñ‚_ÑÐ±".split("_"),
              weekdaysMin: "Ð½Ð´_Ð¿Ð½_Ð²Ñ‚_ÑÑ€_Ñ‡Ñ‚_Ð¿Ñ‚_ÑÐ±".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY Ñ€.",
                LLL: "D MMMM YYYY Ñ€., HH:mm",
                LLLL: "dddd, D MMMM YYYY Ñ€., HH:mm"
              },
              calendar: {
                sameDay: i("[Ð¡ÑŒÐ¾Ð³Ð¾Ð´Ð½Ñ– "),
                nextDay: i("[Ð—Ð°Ð²Ñ‚Ñ€Ð° "),
                lastDay: i("[Ð’Ñ‡Ð¾Ñ€Ð° "),
                nextWeek: i("[Ð£] dddd ["),
                lastWeek: function () {
                  switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                      return i("[ÐœÐ¸Ð½ÑƒÐ»Ð¾Ñ—] dddd [").call(this);
                    case 1:
                    case 2:
                    case 4:
                      return i("[ÐœÐ¸Ð½ÑƒÐ»Ð¾Ð³Ð¾] dddd [").call(this);
                  }
                },
                sameElse: "L"
              },
              relativeTime: {
                future: "Ð·Ð° %s",
                past: "%s Ñ‚Ð¾Ð¼Ñƒ",
                s: "Ð´ÐµÐºÑ–Ð»ÑŒÐºÐ° ÑÐµÐºÑƒÐ½Ð´",
                ss: a,
                m: a,
                mm: a,
                h: "Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
                hh: a,
                d: "Ð´ÐµÐ½ÑŒ",
                dd: a,
                M: "Ð¼Ñ–ÑÑÑ†ÑŒ",
                MM: a,
                y: "Ñ€Ñ–Ðº",
                yy: a
              },
              meridiemParse: /Ð½Ð¾Ñ‡Ñ–|Ñ€Ð°Ð½ÐºÑƒ|Ð´Ð½Ñ|Ð²ÐµÑ‡Ð¾Ñ€Ð°/,
              isPM: function (e) {
                return /^(Ð´Ð½Ñ|Ð²ÐµÑ‡Ð¾Ñ€Ð°)$/.test(e);
              },
              meridiem: function (e, t, a) {
                return e < 4
                  ? "Ð½Ð¾Ñ‡Ñ–"
                  : e < 12
                  ? "Ñ€Ð°Ð½ÐºÑƒ"
                  : e < 17
                  ? "Ð´Ð½Ñ"
                  : "Ð²ÐµÑ‡Ð¾Ñ€Ð°";
              },
              dayOfMonthOrdinalParse: /\d{1,2}-(Ð¹|Ð³Ð¾)/,
              ordinal: function (e, t) {
                switch (t) {
                  case "M":
                  case "d":
                  case "DDD":
                  case "w":
                  case "W":
                    return e + "-Ð¹";
                  case "D":
                    return e + "-Ð³Ð¾";
                  default:
                    return e;
                }
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        3795: function (e, t, a) {
          !(function (e) {
            "use strict";
            var t = [
                "Ø¬Ù†ÙˆØ±ÛŒ",
                "ÙØ±ÙˆØ±ÛŒ",
                "Ù…Ø§Ø±Ú†",
                "Ø§Ù¾Ø±ÛŒÙ„",
                "Ù…Ø¦ÛŒ",
                "Ø¬ÙˆÙ†",
                "Ø¬ÙˆÙ„Ø§Ø¦ÛŒ",
                "Ø§Ú¯Ø³Øª",
                "Ø³ØªÙ…Ø¨Ø±",
                "Ø§Ú©ØªÙˆØ¨Ø±",
                "Ù†ÙˆÙ…Ø¨Ø±",
                "Ø¯Ø³Ù…Ø¨Ø±"
              ],
              a = [
                "Ø§ØªÙˆØ§Ø±",
                "Ù¾ÛŒØ±",
                "Ù…Ù†Ú¯Ù„",
                "Ø¨Ø¯Ú¾",
                "Ø¬Ù…Ø¹Ø±Ø§Øª",
                "Ø¬Ù…Ø¹Û",
                "ÛÙØªÛ"
              ];
            e.defineLocale("ur", {
              months: t,
              monthsShort: t,
              weekdays: a,
              weekdaysShort: a,
              weekdaysMin: a,
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "ddddØŒ D MMMM YYYY HH:mm"
              },
              meridiemParse: /ØµØ¨Ø­|Ø´Ø§Ù…/,
              isPM: function (e) {
                return "Ø´Ø§Ù…" === e;
              },
              meridiem: function (e, t, a) {
                return e < 12 ? "ØµØ¨Ø­" : "Ø´Ø§Ù…";
              },
              calendar: {
                sameDay: "[Ø¢Ø¬ Ø¨ÙˆÙ‚Øª] LT",
                nextDay: "[Ú©Ù„ Ø¨ÙˆÙ‚Øª] LT",
                nextWeek: "dddd [Ø¨ÙˆÙ‚Øª] LT",
                lastDay: "[Ú¯Ø°Ø´ØªÛ Ø±ÙˆØ² Ø¨ÙˆÙ‚Øª] LT",
                lastWeek: "[Ú¯Ø°Ø´ØªÛ] dddd [Ø¨ÙˆÙ‚Øª] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s Ø¨Ø¹Ø¯",
                past: "%s Ù‚Ø¨Ù„",
                s: "Ú†Ù†Ø¯ Ø³ÛŒÚ©Ù†Úˆ",
                ss: "%d Ø³ÛŒÚ©Ù†Úˆ",
                m: "Ø§ÛŒÚ© Ù…Ù†Ù¹",
                mm: "%d Ù…Ù†Ù¹",
                h: "Ø§ÛŒÚ© Ú¯Ú¾Ù†Ù¹Û",
                hh: "%d Ú¯Ú¾Ù†Ù¹Û’",
                d: "Ø§ÛŒÚ© Ø¯Ù†",
                dd: "%d Ø¯Ù†",
                M: "Ø§ÛŒÚ© Ù…Ø§Û",
                MM: "%d Ù…Ø§Û",
                y: "Ø§ÛŒÚ© Ø³Ø§Ù„",
                yy: "%d Ø³Ø§Ù„"
              },
              preparse: function (e) {
                return e.replace(/ØŒ/g, ",");
              },
              postformat: function (e) {
                return e.replace(/,/g, "ØŒ");
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        588: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("uz-latn", {
              months: "Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr".split(
                "_"
              ),
              monthsShort: "Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek".split(
                "_"
              ),
              weekdays: "Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba".split(
                "_"
              ),
              weekdaysShort: "Yak_Dush_Sesh_Chor_Pay_Jum_Shan".split("_"),
              weekdaysMin: "Ya_Du_Se_Cho_Pa_Ju_Sha".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "D MMMM YYYY, dddd HH:mm"
              },
              calendar: {
                sameDay: "[Bugun soat] LT [da]",
                nextDay: "[Ertaga] LT [da]",
                nextWeek: "dddd [kuni soat] LT [da]",
                lastDay: "[Kecha soat] LT [da]",
                lastWeek: "[O'tgan] dddd [kuni soat] LT [da]",
                sameElse: "L"
              },
              relativeTime: {
                future: "Yaqin %s ichida",
                past: "Bir necha %s oldin",
                s: "soniya",
                ss: "%d soniya",
                m: "bir daqiqa",
                mm: "%d daqiqa",
                h: "bir soat",
                hh: "%d soat",
                d: "bir kun",
                dd: "%d kun",
                M: "bir oy",
                MM: "%d oy",
                y: "bir yil",
                yy: "%d yil"
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        6791: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("uz", {
              months: "ÑÐ½Ð²Ð°Ñ€_Ñ„ÐµÐ²Ñ€Ð°Ð»_Ð¼Ð°Ñ€Ñ‚_Ð°Ð¿Ñ€ÐµÐ»_Ð¼Ð°Ð¹_Ð¸ÑŽÐ½_Ð¸ÑŽÐ»_Ð°Ð²Ð³ÑƒÑÑ‚_ÑÐµÐ½Ñ‚ÑÐ±Ñ€_Ð¾ÐºÑ‚ÑÐ±Ñ€_Ð½Ð¾ÑÐ±Ñ€_Ð´ÐµÐºÐ°Ð±Ñ€".split(
                "_"
              ),
              monthsShort: "ÑÐ½Ð²_Ñ„ÐµÐ²_Ð¼Ð°Ñ€_Ð°Ð¿Ñ€_Ð¼Ð°Ð¹_Ð¸ÑŽÐ½_Ð¸ÑŽÐ»_Ð°Ð²Ð³_ÑÐµÐ½_Ð¾ÐºÑ‚_Ð½Ð¾Ñ_Ð´ÐµÐº".split(
                "_"
              ),
              weekdays: "Ð¯ÐºÑˆÐ°Ð½Ð±Ð°_Ð”ÑƒÑˆÐ°Ð½Ð±Ð°_Ð¡ÐµÑˆÐ°Ð½Ð±Ð°_Ð§Ð¾Ñ€ÑˆÐ°Ð½Ð±Ð°_ÐŸÐ°Ð¹ÑˆÐ°Ð½Ð±Ð°_Ð–ÑƒÐ¼Ð°_Ð¨Ð°Ð½Ð±Ð°".split(
                "_"
              ),
              weekdaysShort: "Ð¯ÐºÑˆ_Ð”ÑƒÑˆ_Ð¡ÐµÑˆ_Ð§Ð¾Ñ€_ÐŸÐ°Ð¹_Ð–ÑƒÐ¼_Ð¨Ð°Ð½".split(
                "_"
              ),
              weekdaysMin: "Ð¯Ðº_Ð”Ñƒ_Ð¡Ðµ_Ð§Ð¾_ÐŸÐ°_Ð–Ñƒ_Ð¨Ð°".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "D MMMM YYYY, dddd HH:mm"
              },
              calendar: {
                sameDay: "[Ð‘ÑƒÐ³ÑƒÐ½ ÑÐ¾Ð°Ñ‚] LT [Ð´Ð°]",
                nextDay: "[Ð­Ñ€Ñ‚Ð°Ð³Ð°] LT [Ð´Ð°]",
                nextWeek: "dddd [ÐºÑƒÐ½Ð¸ ÑÐ¾Ð°Ñ‚] LT [Ð´Ð°]",
                lastDay: "[ÐšÐµÑ‡Ð° ÑÐ¾Ð°Ñ‚] LT [Ð´Ð°]",
                lastWeek: "[Ð£Ñ‚Ð³Ð°Ð½] dddd [ÐºÑƒÐ½Ð¸ ÑÐ¾Ð°Ñ‚] LT [Ð´Ð°]",
                sameElse: "L"
              },
              relativeTime: {
                future: "Ð¯ÐºÐ¸Ð½ %s Ð¸Ñ‡Ð¸Ð´Ð°",
                past: "Ð‘Ð¸Ñ€ Ð½ÐµÑ‡Ð° %s Ð¾Ð»Ð´Ð¸Ð½",
                s: "Ñ„ÑƒÑ€ÑÐ°Ñ‚",
                ss: "%d Ñ„ÑƒÑ€ÑÐ°Ñ‚",
                m: "Ð±Ð¸Ñ€ Ð´Ð°ÐºÐ¸ÐºÐ°",
                mm: "%d Ð´Ð°ÐºÐ¸ÐºÐ°",
                h: "Ð±Ð¸Ñ€ ÑÐ¾Ð°Ñ‚",
                hh: "%d ÑÐ¾Ð°Ñ‚",
                d: "Ð±Ð¸Ñ€ ÐºÑƒÐ½",
                dd: "%d ÐºÑƒÐ½",
                M: "Ð±Ð¸Ñ€ Ð¾Ð¹",
                MM: "%d Ð¾Ð¹",
                y: "Ð±Ð¸Ñ€ Ð¹Ð¸Ð»",
                yy: "%d Ð¹Ð¸Ð»"
              },
              week: { dow: 1, doy: 7 }
            });
          })(a(381));
        },
        5666: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("vi", {
              months: "thÃ¡ng 1_thÃ¡ng 2_thÃ¡ng 3_thÃ¡ng 4_thÃ¡ng 5_thÃ¡ng 6_thÃ¡ng 7_thÃ¡ng 8_thÃ¡ng 9_thÃ¡ng 10_thÃ¡ng 11_thÃ¡ng 12".split(
                "_"
              ),
              monthsShort: "Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "chá»§ nháº­t_thá»© hai_thá»© ba_thá»© tÆ°_thá»© nÄƒm_thá»© sÃ¡u_thá»© báº£y".split(
                "_"
              ),
              weekdaysShort: "CN_T2_T3_T4_T5_T6_T7".split("_"),
              weekdaysMin: "CN_T2_T3_T4_T5_T6_T7".split("_"),
              weekdaysParseExact: !0,
              meridiemParse: /sa|ch/i,
              isPM: function (e) {
                return /^ch$/i.test(e);
              },
              meridiem: function (e, t, a) {
                return e < 12 ? (a ? "sa" : "SA") : a ? "ch" : "CH";
              },
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM [nÄƒm] YYYY",
                LLL: "D MMMM [nÄƒm] YYYY HH:mm",
                LLLL: "dddd, D MMMM [nÄƒm] YYYY HH:mm",
                l: "DD/M/YYYY",
                ll: "D MMM YYYY",
                lll: "D MMM YYYY HH:mm",
                llll: "ddd, D MMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[HÃ´m nay lÃºc] LT",
                nextDay: "[NgÃ y mai lÃºc] LT",
                nextWeek: "dddd [tuáº§n tá»›i lÃºc] LT",
                lastDay: "[HÃ´m qua lÃºc] LT",
                lastWeek: "dddd [tuáº§n trÆ°á»›c lÃºc] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "%s tá»›i",
                past: "%s trÆ°á»›c",
                s: "vÃ i giÃ¢y",
                ss: "%d giÃ¢y",
                m: "má»™t phÃºt",
                mm: "%d phÃºt",
                h: "má»™t giá»",
                hh: "%d giá»",
                d: "má»™t ngÃ y",
                dd: "%d ngÃ y",
                w: "má»™t tuáº§n",
                ww: "%d tuáº§n",
                M: "má»™t thÃ¡ng",
                MM: "%d thÃ¡ng",
                y: "má»™t nÄƒm",
                yy: "%d nÄƒm"
              },
              dayOfMonthOrdinalParse: /\d{1,2}/,
              ordinal: function (e) {
                return e;
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        4378: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("x-pseudo", {
              months: "J~Ã¡Ã±ÃºÃ¡~rÃ½_F~Ã©brÃº~Ã¡rÃ½_~MÃ¡rc~h_Ãp~rÃ­l_~MÃ¡Ã½_~JÃºÃ±Ã©~_JÃºl~Ã½_ÃÃº~gÃºst~_SÃ©p~tÃ©mb~Ã©r_Ã“~ctÃ³b~Ã©r_Ã‘~Ã³vÃ©m~bÃ©r_~DÃ©cÃ©~mbÃ©r".split(
                "_"
              ),
              monthsShort: "J~Ã¡Ã±_~FÃ©b_~MÃ¡r_~Ãpr_~MÃ¡Ã½_~JÃºÃ±_~JÃºl_~ÃÃºg_~SÃ©p_~Ã“ct_~Ã‘Ã³v_~DÃ©c".split(
                "_"
              ),
              monthsParseExact: !0,
              weekdays: "S~ÃºÃ±dÃ¡~Ã½_MÃ³~Ã±dÃ¡Ã½~_TÃºÃ©~sdÃ¡Ã½~_WÃ©d~Ã±Ã©sd~Ã¡Ã½_T~hÃºrs~dÃ¡Ã½_~FrÃ­d~Ã¡Ã½_S~Ã¡tÃºr~dÃ¡Ã½".split(
                "_"
              ),
              weekdaysShort: "S~ÃºÃ±_~MÃ³Ã±_~TÃºÃ©_~WÃ©d_~ThÃº_~FrÃ­_~SÃ¡t".split(
                "_"
              ),
              weekdaysMin: "S~Ãº_MÃ³~_TÃº_~WÃ©_T~h_Fr~_SÃ¡".split("_"),
              weekdaysParseExact: !0,
              longDateFormat: {
                LT: "HH:mm",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
              },
              calendar: {
                sameDay: "[T~Ã³dÃ¡~Ã½ Ã¡t] LT",
                nextDay: "[T~Ã³mÃ³~rrÃ³~w Ã¡t] LT",
                nextWeek: "dddd [Ã¡t] LT",
                lastDay: "[Ã~Ã©st~Ã©rdÃ¡~Ã½ Ã¡t] LT",
                lastWeek: "[L~Ã¡st] dddd [Ã¡t] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "Ã­~Ã± %s",
                past: "%s Ã¡~gÃ³",
                s: "Ã¡ ~fÃ©w ~sÃ©cÃ³~Ã±ds",
                ss: "%d s~Ã©cÃ³Ã±~ds",
                m: "Ã¡ ~mÃ­Ã±~ÃºtÃ©",
                mm: "%d m~Ã­Ã±Ãº~tÃ©s",
                h: "Ã¡~Ã± hÃ³~Ãºr",
                hh: "%d h~Ã³Ãºrs",
                d: "Ã¡ ~dÃ¡Ã½",
                dd: "%d d~Ã¡Ã½s",
                M: "Ã¡ ~mÃ³Ã±~th",
                MM: "%d m~Ã³Ã±t~hs",
                y: "Ã¡ ~Ã½Ã©Ã¡r",
                yy: "%d Ã½~Ã©Ã¡rs"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
              ordinal: function (e) {
                var t = e % 10;
                return (
                  e +
                  (1 == ~~((e % 100) / 10)
                    ? "th"
                    : 1 === t
                    ? "st"
                    : 2 === t
                    ? "nd"
                    : 3 === t
                    ? "rd"
                    : "th")
                );
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        5805: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("yo", {
              months: "Sáº¹Ìráº¹Ì_EÌ€reÌ€leÌ€_áº¸ráº¹Ì€naÌ€_IÌ€gbeÌ_EÌ€bibi_OÌ€kuÌ€du_Agáº¹mo_OÌ€guÌn_Owewe_á»ŒÌ€waÌ€raÌ€_BeÌluÌ_á»ŒÌ€páº¹Ì€Ì€".split(
                "_"
              ),
              monthsShort: "Sáº¹Ìr_EÌ€rl_áº¸rn_IÌ€gb_EÌ€bi_OÌ€kuÌ€_Agáº¹_OÌ€guÌ_Owe_á»ŒÌ€waÌ€_BeÌl_á»ŒÌ€páº¹Ì€Ì€".split(
                "_"
              ),
              weekdays: "AÌ€iÌ€kuÌ_AjeÌ_IÌ€sáº¹Ìgun_á»Œjá»ÌruÌ_á»Œjá»Ìbá»_áº¸tiÌ€_AÌ€baÌmáº¹Ìta".split(
                "_"
              ),
              weekdaysShort: "AÌ€iÌ€k_AjeÌ_IÌ€sáº¹Ì_á»Œjr_á»Œjb_áº¸tiÌ€_AÌ€baÌ".split(
                "_"
              ),
              weekdaysMin: "AÌ€iÌ€_Aj_IÌ€s_á»Œr_á»Œb_áº¸t_AÌ€b".split("_"),
              longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY h:mm A",
                LLLL: "dddd, D MMMM YYYY h:mm A"
              },
              calendar: {
                sameDay: "[OÌ€niÌ€ ni] LT",
                nextDay: "[á»ŒÌ€la ni] LT",
                nextWeek: "dddd [á»Œsáº¹Ì€ toÌn'bá»] [ni] LT",
                lastDay: "[AÌ€na ni] LT",
                lastWeek: "dddd [á»Œsáº¹Ì€ toÌlá»Ì] [ni] LT",
                sameElse: "L"
              },
              relativeTime: {
                future: "niÌ %s",
                past: "%s ká»jaÌ",
                s: "iÌ€sáº¹juÌ aayaÌ die",
                ss: "aayaÌ %d",
                m: "iÌ€sáº¹juÌ kan",
                mm: "iÌ€sáº¹juÌ %d",
                h: "waÌkati kan",
                hh: "waÌkati %d",
                d: "á»já»Ì kan",
                dd: "á»já»Ì %d",
                M: "osuÌ€ kan",
                MM: "osuÌ€ %d",
                y: "á»duÌn kan",
                yy: "á»duÌn %d"
              },
              dayOfMonthOrdinalParse: /á»já»Ì\s\d{1,2}/,
              ordinal: "á»já»Ì %d",
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        3839: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("zh-cn", {
              months: "ä¸€æœˆ_äºŒæœˆ_ä¸‰æœˆ_å››æœˆ_äº”æœˆ_å…­æœˆ_ä¸ƒæœˆ_å…«æœˆ_ä¹æœˆ_åæœˆ_åä¸€æœˆ_åäºŒæœˆ".split(
                "_"
              ),
              monthsShort: "1æœˆ_2æœˆ_3æœˆ_4æœˆ_5æœˆ_6æœˆ_7æœˆ_8æœˆ_9æœˆ_10æœˆ_11æœˆ_12æœˆ".split(
                "_"
              ),
              weekdays: "æ˜ŸæœŸæ—¥_æ˜ŸæœŸä¸€_æ˜ŸæœŸäºŒ_æ˜ŸæœŸä¸‰_æ˜ŸæœŸå››_æ˜ŸæœŸäº”_æ˜ŸæœŸå…­".split(
                "_"
              ),
              weekdaysShort: "å‘¨æ—¥_å‘¨ä¸€_å‘¨äºŒ_å‘¨ä¸‰_å‘¨å››_å‘¨äº”_å‘¨å…­".split(
                "_"
              ),
              weekdaysMin: "æ—¥_ä¸€_äºŒ_ä¸‰_å››_äº”_å…­".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY/MM/DD",
                LL: "YYYYå¹´MæœˆDæ—¥",
                LLL: "YYYYå¹´MæœˆDæ—¥Ahç‚¹mmåˆ†",
                LLLL: "YYYYå¹´MæœˆDæ—¥ddddAhç‚¹mmåˆ†",
                l: "YYYY/M/D",
                ll: "YYYYå¹´MæœˆDæ—¥",
                lll: "YYYYå¹´MæœˆDæ—¥ HH:mm",
                llll: "YYYYå¹´MæœˆDæ—¥dddd HH:mm"
              },
              meridiemParse: /å‡Œæ™¨|æ—©ä¸Š|ä¸Šåˆ|ä¸­åˆ|ä¸‹åˆ|æ™šä¸Š/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "å‡Œæ™¨" === t || "æ—©ä¸Š" === t || "ä¸Šåˆ" === t
                    ? e
                    : "ä¸‹åˆ" === t || "æ™šä¸Š" === t
                    ? e + 12
                    : e >= 11
                    ? e
                    : e + 12
                );
              },
              meridiem: function (e, t, a) {
                var n = 100 * e + t;
                return n < 600
                  ? "å‡Œæ™¨"
                  : n < 900
                  ? "æ—©ä¸Š"
                  : n < 1130
                  ? "ä¸Šåˆ"
                  : n < 1230
                  ? "ä¸­åˆ"
                  : n < 1800
                  ? "ä¸‹åˆ"
                  : "æ™šä¸Š";
              },
              calendar: {
                sameDay: "[ä»Šå¤©]LT",
                nextDay: "[æ˜Žå¤©]LT",
                nextWeek: function (e) {
                  return e.week() !== this.week() ? "[ä¸‹]dddLT" : "[æœ¬]dddLT";
                },
                lastDay: "[æ˜¨å¤©]LT",
                lastWeek: function (e) {
                  return this.week() !== e.week() ? "[ä¸Š]dddLT" : "[æœ¬]dddLT";
                },
                sameElse: "L"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(æ—¥|æœˆ|å‘¨)/,
              ordinal: function (e, t) {
                switch (t) {
                  case "d":
                  case "D":
                  case "DDD":
                    return e + "æ—¥";
                  case "M":
                    return e + "æœˆ";
                  case "w":
                  case "W":
                    return e + "å‘¨";
                  default:
                    return e;
                }
              },
              relativeTime: {
                future: "%såŽ",
                past: "%så‰",
                s: "å‡ ç§’",
                ss: "%d ç§’",
                m: "1 åˆ†é’Ÿ",
                mm: "%d åˆ†é’Ÿ",
                h: "1 å°æ—¶",
                hh: "%d å°æ—¶",
                d: "1 å¤©",
                dd: "%d å¤©",
                w: "1 å‘¨",
                ww: "%d å‘¨",
                M: "1 ä¸ªæœˆ",
                MM: "%d ä¸ªæœˆ",
                y: "1 å¹´",
                yy: "%d å¹´"
              },
              week: { dow: 1, doy: 4 }
            });
          })(a(381));
        },
        5726: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("zh-hk", {
              months: "ä¸€æœˆ_äºŒæœˆ_ä¸‰æœˆ_å››æœˆ_äº”æœˆ_å…­æœˆ_ä¸ƒæœˆ_å…«æœˆ_ä¹æœˆ_åæœˆ_åä¸€æœˆ_åäºŒæœˆ".split(
                "_"
              ),
              monthsShort: "1æœˆ_2æœˆ_3æœˆ_4æœˆ_5æœˆ_6æœˆ_7æœˆ_8æœˆ_9æœˆ_10æœˆ_11æœˆ_12æœˆ".split(
                "_"
              ),
              weekdays: "æ˜ŸæœŸæ—¥_æ˜ŸæœŸä¸€_æ˜ŸæœŸäºŒ_æ˜ŸæœŸä¸‰_æ˜ŸæœŸå››_æ˜ŸæœŸäº”_æ˜ŸæœŸå…­".split(
                "_"
              ),
              weekdaysShort: "é€±æ—¥_é€±ä¸€_é€±äºŒ_é€±ä¸‰_é€±å››_é€±äº”_é€±å…­".split(
                "_"
              ),
              weekdaysMin: "æ—¥_ä¸€_äºŒ_ä¸‰_å››_äº”_å…­".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY/MM/DD",
                LL: "YYYYå¹´MæœˆDæ—¥",
                LLL: "YYYYå¹´MæœˆDæ—¥ HH:mm",
                LLLL: "YYYYå¹´MæœˆDæ—¥dddd HH:mm",
                l: "YYYY/M/D",
                ll: "YYYYå¹´MæœˆDæ—¥",
                lll: "YYYYå¹´MæœˆDæ—¥ HH:mm",
                llll: "YYYYå¹´MæœˆDæ—¥dddd HH:mm"
              },
              meridiemParse: /å‡Œæ™¨|æ—©ä¸Š|ä¸Šåˆ|ä¸­åˆ|ä¸‹åˆ|æ™šä¸Š/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "å‡Œæ™¨" === t || "æ—©ä¸Š" === t || "ä¸Šåˆ" === t
                    ? e
                    : "ä¸­åˆ" === t
                    ? e >= 11
                      ? e
                      : e + 12
                    : "ä¸‹åˆ" === t || "æ™šä¸Š" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                var n = 100 * e + t;
                return n < 600
                  ? "å‡Œæ™¨"
                  : n < 900
                  ? "æ—©ä¸Š"
                  : n < 1200
                  ? "ä¸Šåˆ"
                  : 1200 === n
                  ? "ä¸­åˆ"
                  : n < 1800
                  ? "ä¸‹åˆ"
                  : "æ™šä¸Š";
              },
              calendar: {
                sameDay: "[ä»Šå¤©]LT",
                nextDay: "[æ˜Žå¤©]LT",
                nextWeek: "[ä¸‹]ddddLT",
                lastDay: "[æ˜¨å¤©]LT",
                lastWeek: "[ä¸Š]ddddLT",
                sameElse: "L"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(æ—¥|æœˆ|é€±)/,
              ordinal: function (e, t) {
                switch (t) {
                  case "d":
                  case "D":
                  case "DDD":
                    return e + "æ—¥";
                  case "M":
                    return e + "æœˆ";
                  case "w":
                  case "W":
                    return e + "é€±";
                  default:
                    return e;
                }
              },
              relativeTime: {
                future: "%så¾Œ",
                past: "%så‰",
                s: "å¹¾ç§’",
                ss: "%d ç§’",
                m: "1 åˆ†é˜",
                mm: "%d åˆ†é˜",
                h: "1 å°æ™‚",
                hh: "%d å°æ™‚",
                d: "1 å¤©",
                dd: "%d å¤©",
                M: "1 å€‹æœˆ",
                MM: "%d å€‹æœˆ",
                y: "1 å¹´",
                yy: "%d å¹´"
              }
            });
          })(a(381));
        },
        9913: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("zh-mo", {
              months: "ä¸€æœˆ_äºŒæœˆ_ä¸‰æœˆ_å››æœˆ_äº”æœˆ_å…­æœˆ_ä¸ƒæœˆ_å…«æœˆ_ä¹æœˆ_åæœˆ_åä¸€æœˆ_åäºŒæœˆ".split(
                "_"
              ),
              monthsShort: "1æœˆ_2æœˆ_3æœˆ_4æœˆ_5æœˆ_6æœˆ_7æœˆ_8æœˆ_9æœˆ_10æœˆ_11æœˆ_12æœˆ".split(
                "_"
              ),
              weekdays: "æ˜ŸæœŸæ—¥_æ˜ŸæœŸä¸€_æ˜ŸæœŸäºŒ_æ˜ŸæœŸä¸‰_æ˜ŸæœŸå››_æ˜ŸæœŸäº”_æ˜ŸæœŸå…­".split(
                "_"
              ),
              weekdaysShort: "é€±æ—¥_é€±ä¸€_é€±äºŒ_é€±ä¸‰_é€±å››_é€±äº”_é€±å…­".split(
                "_"
              ),
              weekdaysMin: "æ—¥_ä¸€_äºŒ_ä¸‰_å››_äº”_å…­".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "YYYYå¹´MæœˆDæ—¥",
                LLL: "YYYYå¹´MæœˆDæ—¥ HH:mm",
                LLLL: "YYYYå¹´MæœˆDæ—¥dddd HH:mm",
                l: "D/M/YYYY",
                ll: "YYYYå¹´MæœˆDæ—¥",
                lll: "YYYYå¹´MæœˆDæ—¥ HH:mm",
                llll: "YYYYå¹´MæœˆDæ—¥dddd HH:mm"
              },
              meridiemParse: /å‡Œæ™¨|æ—©ä¸Š|ä¸Šåˆ|ä¸­åˆ|ä¸‹åˆ|æ™šä¸Š/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "å‡Œæ™¨" === t || "æ—©ä¸Š" === t || "ä¸Šåˆ" === t
                    ? e
                    : "ä¸­åˆ" === t
                    ? e >= 11
                      ? e
                      : e + 12
                    : "ä¸‹åˆ" === t || "æ™šä¸Š" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                var n = 100 * e + t;
                return n < 600
                  ? "å‡Œæ™¨"
                  : n < 900
                  ? "æ—©ä¸Š"
                  : n < 1130
                  ? "ä¸Šåˆ"
                  : n < 1230
                  ? "ä¸­åˆ"
                  : n < 1800
                  ? "ä¸‹åˆ"
                  : "æ™šä¸Š";
              },
              calendar: {
                sameDay: "[ä»Šå¤©] LT",
                nextDay: "[æ˜Žå¤©] LT",
                nextWeek: "[ä¸‹]dddd LT",
                lastDay: "[æ˜¨å¤©] LT",
                lastWeek: "[ä¸Š]dddd LT",
                sameElse: "L"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(æ—¥|æœˆ|é€±)/,
              ordinal: function (e, t) {
                switch (t) {
                  case "d":
                  case "D":
                  case "DDD":
                    return e + "æ—¥";
                  case "M":
                    return e + "æœˆ";
                  case "w":
                  case "W":
                    return e + "é€±";
                  default:
                    return e;
                }
              },
              relativeTime: {
                future: "%så…§",
                past: "%så‰",
                s: "å¹¾ç§’",
                ss: "%d ç§’",
                m: "1 åˆ†é˜",
                mm: "%d åˆ†é˜",
                h: "1 å°æ™‚",
                hh: "%d å°æ™‚",
                d: "1 å¤©",
                dd: "%d å¤©",
                M: "1 å€‹æœˆ",
                MM: "%d å€‹æœˆ",
                y: "1 å¹´",
                yy: "%d å¹´"
              }
            });
          })(a(381));
        },
        4152: function (e, t, a) {
          !(function (e) {
            "use strict";
            e.defineLocale("zh-tw", {
              months: "ä¸€æœˆ_äºŒæœˆ_ä¸‰æœˆ_å››æœˆ_äº”æœˆ_å…­æœˆ_ä¸ƒæœˆ_å…«æœˆ_ä¹æœˆ_åæœˆ_åä¸€æœˆ_åäºŒæœˆ".split(
                "_"
              ),
              monthsShort: "1æœˆ_2æœˆ_3æœˆ_4æœˆ_5æœˆ_6æœˆ_7æœˆ_8æœˆ_9æœˆ_10æœˆ_11æœˆ_12æœˆ".split(
                "_"
              ),
              weekdays: "æ˜ŸæœŸæ—¥_æ˜ŸæœŸä¸€_æ˜ŸæœŸäºŒ_æ˜ŸæœŸä¸‰_æ˜ŸæœŸå››_æ˜ŸæœŸäº”_æ˜ŸæœŸå…­".split(
                "_"
              ),
              weekdaysShort: "é€±æ—¥_é€±ä¸€_é€±äºŒ_é€±ä¸‰_é€±å››_é€±äº”_é€±å…­".split(
                "_"
              ),
              weekdaysMin: "æ—¥_ä¸€_äºŒ_ä¸‰_å››_äº”_å…­".split("_"),
              longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY/MM/DD",
                LL: "YYYYå¹´MæœˆDæ—¥",
                LLL: "YYYYå¹´MæœˆDæ—¥ HH:mm",
                LLLL: "YYYYå¹´MæœˆDæ—¥dddd HH:mm",
                l: "YYYY/M/D",
                ll: "YYYYå¹´MæœˆDæ—¥",
                lll: "YYYYå¹´MæœˆDæ—¥ HH:mm",
                llll: "YYYYå¹´MæœˆDæ—¥dddd HH:mm"
              },
              meridiemParse: /å‡Œæ™¨|æ—©ä¸Š|ä¸Šåˆ|ä¸­åˆ|ä¸‹åˆ|æ™šä¸Š/,
              meridiemHour: function (e, t) {
                return (
                  12 === e && (e = 0),
                  "å‡Œæ™¨" === t || "æ—©ä¸Š" === t || "ä¸Šåˆ" === t
                    ? e
                    : "ä¸­åˆ" === t
                    ? e >= 11
                      ? e
                      : e + 12
                    : "ä¸‹åˆ" === t || "æ™šä¸Š" === t
                    ? e + 12
                    : void 0
                );
              },
              meridiem: function (e, t, a) {
                var n = 100 * e + t;
                return n < 600
                  ? "å‡Œæ™¨"
                  : n < 900
                  ? "æ—©ä¸Š"
                  : n < 1130
                  ? "ä¸Šåˆ"
                  : n < 1230
                  ? "ä¸­åˆ"
                  : n < 1800
                  ? "ä¸‹åˆ"
                  : "æ™šä¸Š";
              },
              calendar: {
                sameDay: "[ä»Šå¤©] LT",
                nextDay: "[æ˜Žå¤©] LT",
                nextWeek: "[ä¸‹]dddd LT",
                lastDay: "[æ˜¨å¤©] LT",
                lastWeek: "[ä¸Š]dddd LT",
                sameElse: "L"
              },
              dayOfMonthOrdinalParse: /\d{1,2}(æ—¥|æœˆ|é€±)/,
              ordinal: function (e, t) {
                switch (t) {
                  case "d":
                  case "D":
                  case "DDD":
                    return e + "æ—¥";
                  case "M":
                    return e + "æœˆ";
                  case "w":
                  case "W":
                    return e + "é€±";
                  default:
                    return e;
                }
              },
              relativeTime: {
                future: "%så¾Œ",
                past: "%så‰",
                s: "å¹¾ç§’",
                ss: "%d ç§’",
                m: "1 åˆ†é˜",
                mm: "%d åˆ†é˜",
                h: "1 å°æ™‚",
                hh: "%d å°æ™‚",
                d: "1 å¤©",
                dd: "%d å¤©",
                M: "1 å€‹æœˆ",
                MM: "%d å€‹æœˆ",
                y: "1 å¹´",
                yy: "%d å¹´"
              }
            });
          })(a(381));
        },
        6700: (e, t, a) => {
          var n = {
            "./af": 2786,
            "./af.js": 2786,
            "./ar": 867,
            "./ar-dz": 4130,
            "./ar-dz.js": 4130,
            "./ar-kw": 6135,
            "./ar-kw.js": 6135,
            "./ar-ly": 6440,
            "./ar-ly.js": 6440,
            "./ar-ma": 7702,
            "./ar-ma.js": 7702,
            "./ar-sa": 6040,
            "./ar-sa.js": 6040,
            "./ar-tn": 7100,
            "./ar-tn.js": 7100,
            "./ar.js": 867,
            "./az": 1083,
            "./az.js": 1083,
            "./be": 9808,
            "./be.js": 9808,
            "./bg": 8338,
            "./bg.js": 8338,
            "./bm": 7438,
            "./bm.js": 7438,
            "./bn": 8905,
            "./bn-bd": 6225,
            "./bn-bd.js": 6225,
            "./bn.js": 8905,
            "./bo": 1560,
            "./bo.js": 1560,
            "./br": 1278,
            "./br.js": 1278,
            "./bs": 622,
            "./bs.js": 622,
            "./ca": 2468,
            "./ca.js": 2468,
            "./cs": 5822,
            "./cs.js": 5822,
            "./cv": 9794,
            "./cv.js": 9794,
            "./cy": 7373,
            "./cy.js": 7373,
            "./da": 4780,
            "./da.js": 4780,
            "./de": 9740,
            "./de-at": 4001,
            "./de-at.js": 4001,
            "./de-ch": 894,
            "./de-ch.js": 894,
            "./de.js": 9740,
            "./dv": 5300,
            "./dv.js": 5300,
            "./el": 837,
            "./el.js": 837,
            "./en-au": 8348,
            "./en-au.js": 8348,
            "./en-ca": 7925,
            "./en-ca.js": 7925,
            "./en-gb": 2243,
            "./en-gb.js": 2243,
            "./en-ie": 6436,
            "./en-ie.js": 6436,
            "./en-il": 7207,
            "./en-il.js": 7207,
            "./en-in": 4175,
            "./en-in.js": 4175,
            "./en-nz": 6319,
            "./en-nz.js": 6319,
            "./en-sg": 1662,
            "./en-sg.js": 1662,
            "./eo": 2915,
            "./eo.js": 2915,
            "./es": 5655,
            "./es-do": 5251,
            "./es-do.js": 5251,
            "./es-mx": 6112,
            "./es-mx.js": 6112,
            "./es-us": 1146,
            "./es-us.js": 1146,
            "./es.js": 5655,
            "./et": 5603,
            "./et.js": 5603,
            "./eu": 7763,
            "./eu.js": 7763,
            "./fa": 6959,
            "./fa.js": 6959,
            "./fi": 1897,
            "./fi.js": 1897,
            "./fil": 2549,
            "./fil.js": 2549,
            "./fo": 4694,
            "./fo.js": 4694,
            "./fr": 4470,
            "./fr-ca": 3049,
            "./fr-ca.js": 3049,
            "./fr-ch": 2330,
            "./fr-ch.js": 2330,
            "./fr.js": 4470,
            "./fy": 5044,
            "./fy.js": 5044,
            "./ga": 9295,
            "./ga.js": 9295,
            "./gd": 2101,
            "./gd.js": 2101,
            "./gl": 8794,
            "./gl.js": 8794,
            "./gom-deva": 7884,
            "./gom-deva.js": 7884,
            "./gom-latn": 3168,
            "./gom-latn.js": 3168,
            "./gu": 5349,
            "./gu.js": 5349,
            "./he": 4206,
            "./he.js": 4206,
            "./hi": 94,
            "./hi.js": 94,
            "./hr": 316,
            "./hr.js": 316,
            "./hu": 2138,
            "./hu.js": 2138,
            "./hy-am": 1423,
            "./hy-am.js": 1423,
            "./id": 9218,
            "./id.js": 9218,
            "./is": 135,
            "./is.js": 135,
            "./it": 626,
            "./it-ch": 150,
            "./it-ch.js": 150,
            "./it.js": 626,
            "./ja": 9183,
            "./ja.js": 9183,
            "./jv": 4286,
            "./jv.js": 4286,
            "./ka": 2105,
            "./ka.js": 2105,
            "./kk": 7772,
            "./kk.js": 7772,
            "./km": 8758,
            "./km.js": 8758,
            "./kn": 9282,
            "./kn.js": 9282,
            "./ko": 3730,
            "./ko.js": 3730,
            "./ku": 1408,
            "./ku.js": 1408,
            "./ky": 3291,
            "./ky.js": 3291,
            "./lb": 6841,
            "./lb.js": 6841,
            "./lo": 5466,
            "./lo.js": 5466,
            "./lt": 7010,
            "./lt.js": 7010,
            "./lv": 7595,
            "./lv.js": 7595,
            "./me": 9861,
            "./me.js": 9861,
            "./mi": 5493,
            "./mi.js": 5493,
            "./mk": 5966,
            "./mk.js": 5966,
            "./ml": 7341,
            "./ml.js": 7341,
            "./mn": 5115,
            "./mn.js": 5115,
            "./mr": 370,
            "./mr.js": 370,
            "./ms": 9847,
            "./ms-my": 1237,
            "./ms-my.js": 1237,
            "./ms.js": 9847,
            "./mt": 2126,
            "./mt.js": 2126,
            "./my": 6165,
            "./my.js": 6165,
            "./nb": 4924,
            "./nb.js": 4924,
            "./ne": 6744,
            "./ne.js": 6744,
            "./nl": 3901,
            "./nl-be": 9814,
            "./nl-be.js": 9814,
            "./nl.js": 3901,
            "./nn": 3877,
            "./nn.js": 3877,
            "./oc-lnc": 2135,
            "./oc-lnc.js": 2135,
            "./pa-in": 5858,
            "./pa-in.js": 5858,
            "./pl": 4495,
            "./pl.js": 4495,
            "./pt": 9520,
            "./pt-br": 7971,
            "./pt-br.js": 7971,
            "./pt.js": 9520,
            "./ro": 6459,
            "./ro.js": 6459,
            "./ru": 1793,
            "./ru.js": 1793,
            "./sd": 950,
            "./sd.js": 950,
            "./se": 490,
            "./se.js": 490,
            "./si": 124,
            "./si.js": 124,
            "./sk": 4249,
            "./sk.js": 4249,
            "./sl": 4985,
            "./sl.js": 4985,
            "./sq": 1104,
            "./sq.js": 1104,
            "./sr": 9131,
            "./sr-cyrl": 9915,
            "./sr-cyrl.js": 9915,
            "./sr.js": 9131,
            "./ss": 5893,
            "./ss.js": 5893,
            "./sv": 8760,
            "./sv.js": 8760,
            "./sw": 1172,
            "./sw.js": 1172,
            "./ta": 7333,
            "./ta.js": 7333,
            "./te": 3110,
            "./te.js": 3110,
            "./tet": 2095,
            "./tet.js": 2095,
            "./tg": 7321,
            "./tg.js": 7321,
            "./th": 9041,
            "./th.js": 9041,
            "./tk": 9005,
            "./tk.js": 9005,
            "./tl-ph": 5768,
            "./tl-ph.js": 5768,
            "./tlh": 9444,
            "./tlh.js": 9444,
            "./tr": 2397,
            "./tr.js": 2397,
            "./tzl": 8254,
            "./tzl.js": 8254,
            "./tzm": 1106,
            "./tzm-latn": 699,
            "./tzm-latn.js": 699,
            "./tzm.js": 1106,
            "./ug-cn": 9288,
            "./ug-cn.js": 9288,
            "./uk": 7691,
            "./uk.js": 7691,
            "./ur": 3795,
            "./ur.js": 3795,
            "./uz": 6791,
            "./uz-latn": 588,
            "./uz-latn.js": 588,
            "./uz.js": 6791,
            "./vi": 5666,
            "./vi.js": 5666,
            "./x-pseudo": 4378,
            "./x-pseudo.js": 4378,
            "./yo": 5805,
            "./yo.js": 5805,
            "./zh-cn": 3839,
            "./zh-cn.js": 3839,
            "./zh-hk": 5726,
            "./zh-hk.js": 5726,
            "./zh-mo": 9913,
            "./zh-mo.js": 9913,
            "./zh-tw": 4152,
            "./zh-tw.js": 4152
          };
          function i(e) {
            var t = r(e);
            return a(t);
          }
          function r(e) {
            if (!a.o(n, e)) {
              var t = new Error("Cannot find module '" + e + "'");
              throw ((t.code = "MODULE_NOT_FOUND"), t);
            }
            return n[e];
          }
          (i.keys = function () {
            return Object.keys(n);
          }),
            (i.resolve = r),
            (e.exports = i),
            (i.id = 6700);
        },
        381: function (e, t, a) {
          (e = a.nmd(e)).exports = (function () {
            "use strict";
            var t, n;
            function i() {
              return t.apply(null, arguments);
            }
            function r(e) {
              t = e;
            }
            function s(e) {
              return (
                e instanceof Array ||
                "[object Array]" === Object.prototype.toString.call(e)
              );
            }
            function o(e) {
              return (
                null != e &&
                "[object Object]" === Object.prototype.toString.call(e)
              );
            }
            function d(e, t) {
              return Object.prototype.hasOwnProperty.call(e, t);
            }
            function l(e) {
              if (Object.getOwnPropertyNames)
                return 0 === Object.getOwnPropertyNames(e).length;
              var t;
              for (t in e) if (d(e, t)) return !1;
              return !0;
            }
            function c(e) {
              return void 0 === e;
            }
            function u(e) {
              return (
                "number" == typeof e ||
                "[object Number]" === Object.prototype.toString.call(e)
              );
            }
            function m(e) {
              return (
                e instanceof Date ||
                "[object Date]" === Object.prototype.toString.call(e)
              );
            }
            function _(e, t) {
              var a,
                n = [];
              for (a = 0; a < e.length; ++a) n.push(t(e[a], a));
              return n;
            }
            function h(e, t) {
              for (var a in t) d(t, a) && (e[a] = t[a]);
              return (
                d(t, "toString") && (e.toString = t.toString),
                d(t, "valueOf") && (e.valueOf = t.valueOf),
                e
              );
            }
            function p(e, t, a, n) {
              return Va(e, t, a, n, !0).utc();
            }
            function g() {
              return {
                empty: !1,
                unusedTokens: [],
                unusedInput: [],
                overflow: -2,
                charsLeftOver: 0,
                nullInput: !1,
                invalidEra: null,
                invalidMonth: null,
                invalidFormat: !1,
                userInvalidated: !1,
                iso: !1,
                parsedDateParts: [],
                era: null,
                meridiem: null,
                rfc2822: !1,
                weekdayMismatch: !1
              };
            }
            function f(e) {
              return null == e._pf && (e._pf = g()), e._pf;
            }
            function v(e) {
              if (null == e._isValid) {
                var t = f(e),
                  a = n.call(t.parsedDateParts, function (e) {
                    return null != e;
                  }),
                  i =
                    !isNaN(e._d.getTime()) &&
                    t.overflow < 0 &&
                    !t.empty &&
                    !t.invalidEra &&
                    !t.invalidMonth &&
                    !t.invalidWeekday &&
                    !t.weekdayMismatch &&
                    !t.nullInput &&
                    !t.invalidFormat &&
                    !t.userInvalidated &&
                    (!t.meridiem || (t.meridiem && a));
                if (
                  (e._strict &&
                    (i =
                      i &&
                      0 === t.charsLeftOver &&
                      0 === t.unusedTokens.length &&
                      void 0 === t.bigHour),
                  null != Object.isFrozen && Object.isFrozen(e))
                )
                  return i;
                e._isValid = i;
              }
              return e._isValid;
            }
            function y(e) {
              var t = p(NaN);
              return null != e ? h(f(t), e) : (f(t).userInvalidated = !0), t;
            }
            n = Array.prototype.some
              ? Array.prototype.some
              : function (e) {
                  var t,
                    a = Object(this),
                    n = a.length >>> 0;
                  for (t = 0; t < n; t++)
                    if (t in a && e.call(this, a[t], t, a)) return !0;
                  return !1;
                };
            var M = (i.momentProperties = []),
              w = !1;
            function $(e, t) {
              var a, n, i;
              if (
                (c(t._isAMomentObject) ||
                  (e._isAMomentObject = t._isAMomentObject),
                c(t._i) || (e._i = t._i),
                c(t._f) || (e._f = t._f),
                c(t._l) || (e._l = t._l),
                c(t._strict) || (e._strict = t._strict),
                c(t._tzm) || (e._tzm = t._tzm),
                c(t._isUTC) || (e._isUTC = t._isUTC),
                c(t._offset) || (e._offset = t._offset),
                c(t._pf) || (e._pf = f(t)),
                c(t._locale) || (e._locale = t._locale),
                M.length > 0)
              )
                for (a = 0; a < M.length; a++)
                  c((i = t[(n = M[a])])) || (e[n] = i);
              return e;
            }
            function b(e) {
              $(this, e),
                (this._d = new Date(null != e._d ? e._d.getTime() : NaN)),
                this.isValid() || (this._d = new Date(NaN)),
                !1 === w && ((w = !0), i.updateOffset(this), (w = !1));
            }
            function L(e) {
              return e instanceof b || (null != e && null != e._isAMomentObject);
            }
            function D(e) {
              !1 === i.suppressDeprecationWarnings &&
                "undefined" != typeof console &&
                console.warn &&
                console.warn("Deprecation warning: " + e);
            }
            function k(e, t) {
              var a = !0;
              return h(function () {
                if (
                  (null != i.deprecationHandler && i.deprecationHandler(null, e),
                  a)
                ) {
                  var n,
                    r,
                    s,
                    o = [];
                  for (r = 0; r < arguments.length; r++) {
                    if (((n = ""), "object" == typeof arguments[r])) {
                      for (s in ((n += "\n[" + r + "] "), arguments[0]))
                        d(arguments[0], s) &&
                          (n += s + ": " + arguments[0][s] + ", ");
                      n = n.slice(0, -2);
                    } else n = arguments[r];
                    o.push(n);
                  }
                  D(
                    e +
                      "\nArguments: " +
                      Array.prototype.slice.call(o).join("") +
                      "\n" +
                      new Error().stack
                  ),
                    (a = !1);
                }
                return t.apply(this, arguments);
              }, t);
            }
            var Y,
              T = {};
            function S(e, t) {
              null != i.deprecationHandler && i.deprecationHandler(e, t),
                T[e] || (D(t), (T[e] = !0));
            }
            function x(e) {
              return (
                ("undefined" != typeof Function && e instanceof Function) ||
                "[object Function]" === Object.prototype.toString.call(e)
              );
            }
            function C(e) {
              var t, a;
              for (a in e)
                d(e, a) && (x((t = e[a])) ? (this[a] = t) : (this["_" + a] = t));
              (this._config = e),
                (this._dayOfMonthOrdinalParseLenient = new RegExp(
                  (this._dayOfMonthOrdinalParse.source ||
                    this._ordinalParse.source) +
                    "|" +
                    /\d{1,2}/.source
                ));
            }
            function I(e, t) {
              var a,
                n = h({}, e);
              for (a in t)
                d(t, a) &&
                  (o(e[a]) && o(t[a])
                    ? ((n[a] = {}), h(n[a], e[a]), h(n[a], t[a]))
                    : null != t[a]
                    ? (n[a] = t[a])
                    : delete n[a]);
              for (a in e) d(e, a) && !d(t, a) && o(e[a]) && (n[a] = h({}, n[a]));
              return n;
            }
            function P(e) {
              null != e && this.set(e);
            }
            (i.suppressDeprecationWarnings = !1),
              (i.deprecationHandler = null),
              (Y = Object.keys
                ? Object.keys
                : function (e) {
                    var t,
                      a = [];
                    for (t in e) d(e, t) && a.push(t);
                    return a;
                  });
            var E = {
              sameDay: "[Today at] LT",
              nextDay: "[Tomorrow at] LT",
              nextWeek: "dddd [at] LT",
              lastDay: "[Yesterday at] LT",
              lastWeek: "[Last] dddd [at] LT",
              sameElse: "L"
            };
            function j(e, t, a) {
              var n = this._calendar[e] || this._calendar.sameElse;
              return x(n) ? n.call(t, a) : n;
            }
            function H(e, t, a) {
              var n = "" + Math.abs(e),
                i = t - n.length;
              return (
                (e >= 0 ? (a ? "+" : "") : "-") +
                Math.pow(10, Math.max(0, i)).toString().substr(1) +
                n
              );
            }
            var F = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
              O = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
              B = {},
              A = {};
            function R(e, t, a, n) {
              var i = n;
              "string" == typeof n &&
                (i = function () {
                  return this[n]();
                }),
                e && (A[e] = i),
                t &&
                  (A[t[0]] = function () {
                    return H(i.apply(this, arguments), t[1], t[2]);
                  }),
                a &&
                  (A[a] = function () {
                    return this.localeData().ordinal(i.apply(this, arguments), e);
                  });
            }
            function U(e) {
              return e.match(/\[[\s\S]/)
                ? e.replace(/^\[|\]$/g, "")
                : e.replace(/\\/g, "");
            }
            function q(e) {
              var t,
                a,
                n = e.match(F);
              for (t = 0, a = n.length; t < a; t++)
                A[n[t]] ? (n[t] = A[n[t]]) : (n[t] = U(n[t]));
              return function (t) {
                var i,
                  r = "";
                for (i = 0; i < a; i++) r += x(n[i]) ? n[i].call(t, e) : n[i];
                return r;
              };
            }
            function N(e, t) {
              return e.isValid()
                ? ((t = W(t, e.localeData())), (B[t] = B[t] || q(t)), B[t](e))
                : e.localeData().invalidDate();
            }
            function W(e, t) {
              var a = 5;
              function n(e) {
                return t.longDateFormat(e) || e;
              }
              for (O.lastIndex = 0; a >= 0 && O.test(e); )
                (e = e.replace(O, n)), (O.lastIndex = 0), (a -= 1);
              return e;
            }
            var z = {
              LTS: "h:mm:ss A",
              LT: "h:mm A",
              L: "MM/DD/YYYY",
              LL: "MMMM D, YYYY",
              LLL: "MMMM D, YYYY h:mm A",
              LLLL: "dddd, MMMM D, YYYY h:mm A"
            };
            function V(e) {
              var t = this._longDateFormat[e],
                a = this._longDateFormat[e.toUpperCase()];
              return t || !a
                ? t
                : ((this._longDateFormat[e] = a
                    .match(F)
                    .map(function (e) {
                      return "MMMM" === e ||
                        "MM" === e ||
                        "DD" === e ||
                        "dddd" === e
                        ? e.slice(1)
                        : e;
                    })
                    .join("")),
                  this._longDateFormat[e]);
            }
            var J = "Invalid date";
            function G() {
              return this._invalidDate;
            }
            var Q = "%d",
              K = /\d{1,2}/;
            function Z(e) {
              return this._ordinal.replace("%d", e);
            }
            var X = {
              future: "in %s",
              past: "%s ago",
              s: "a few seconds",
              ss: "%d seconds",
              m: "a minute",
              mm: "%d minutes",
              h: "an hour",
              hh: "%d hours",
              d: "a day",
              dd: "%d days",
              w: "a week",
              ww: "%d weeks",
              M: "a month",
              MM: "%d months",
              y: "a year",
              yy: "%d years"
            };
            function ee(e, t, a, n) {
              var i = this._relativeTime[a];
              return x(i) ? i(e, t, a, n) : i.replace(/%d/i, e);
            }
            function te(e, t) {
              var a = this._relativeTime[e > 0 ? "future" : "past"];
              return x(a) ? a(t) : a.replace(/%s/i, t);
            }
            var ae = {};
            function ne(e, t) {
              var a = e.toLowerCase();
              ae[a] = ae[a + "s"] = ae[t] = e;
            }
            function ie(e) {
              return "string" == typeof e ? ae[e] || ae[e.toLowerCase()] : void 0;
            }
            function re(e) {
              var t,
                a,
                n = {};
              for (a in e) d(e, a) && (t = ie(a)) && (n[t] = e[a]);
              return n;
            }
            var se = {};
            function oe(e, t) {
              se[e] = t;
            }
            function de(e) {
              var t,
                a = [];
              for (t in e) d(e, t) && a.push({ unit: t, priority: se[t] });
              return (
                a.sort(function (e, t) {
                  return e.priority - t.priority;
                }),
                a
              );
            }
            function le(e) {
              return (e % 4 == 0 && e % 100 != 0) || e % 400 == 0;
            }
            function ce(e) {
              return e < 0 ? Math.ceil(e) || 0 : Math.floor(e);
            }
            function ue(e) {
              var t = +e,
                a = 0;
              return 0 !== t && isFinite(t) && (a = ce(t)), a;
            }
            function me(e, t) {
              return function (a) {
                return null != a
                  ? (he(this, e, a), i.updateOffset(this, t), this)
                  : _e(this, e);
              };
            }
            function _e(e, t) {
              return e.isValid()
                ? e._d["get" + (e._isUTC ? "UTC" : "") + t]()
                : NaN;
            }
            function he(e, t, a) {
              e.isValid() &&
                !isNaN(a) &&
                ("FullYear" === t &&
                le(e.year()) &&
                1 === e.month() &&
                29 === e.date()
                  ? ((a = ue(a)),
                    e._d["set" + (e._isUTC ? "UTC" : "") + t](
                      a,
                      e.month(),
                      et(a, e.month())
                    ))
                  : e._d["set" + (e._isUTC ? "UTC" : "") + t](a));
            }
            function pe(e) {
              return x(this[(e = ie(e))]) ? this[e]() : this;
            }
            function ge(e, t) {
              if ("object" == typeof e) {
                var a,
                  n = de((e = re(e)));
                for (a = 0; a < n.length; a++) this[n[a].unit](e[n[a].unit]);
              } else if (x(this[(e = ie(e))])) return this[e](t);
              return this;
            }
            var fe,
              ve = /\d/,
              ye = /\d\d/,
              Me = /\d{3}/,
              we = /\d{4}/,
              $e = /[+-]?\d{6}/,
              be = /\d\d?/,
              Le = /\d\d\d\d?/,
              De = /\d\d\d\d\d\d?/,
              ke = /\d{1,3}/,
              Ye = /\d{1,4}/,
              Te = /[+-]?\d{1,6}/,
              Se = /\d+/,
              xe = /[+-]?\d+/,
              Ce = /Z|[+-]\d\d:?\d\d/gi,
              Ie = /Z|[+-]\d\d(?::?\d\d)?/gi,
              Pe = /[+-]?\d+(\.\d{1,3})?/,
              Ee = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
            function je(e, t, a) {
              fe[e] = x(t)
                ? t
                : function (e, n) {
                    return e && a ? a : t;
                  };
            }
            function He(e, t) {
              return d(fe, e) ? fe[e](t._strict, t._locale) : new RegExp(Fe(e));
            }
            function Fe(e) {
              return Oe(
                e
                  .replace("\\", "")
                  .replace(
                    /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
                    function (e, t, a, n, i) {
                      return t || a || n || i;
                    }
                  )
              );
            }
            function Oe(e) {
              return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
            }
            fe = {};
            var Be = {};
            function Ae(e, t) {
              var a,
                n = t;
              for (
                "string" == typeof e && (e = [e]),
                  u(t) &&
                    (n = function (e, a) {
                      a[t] = ue(e);
                    }),
                  a = 0;
                a < e.length;
                a++
              )
                Be[e[a]] = n;
            }
            function Re(e, t) {
              Ae(e, function (e, a, n, i) {
                (n._w = n._w || {}), t(e, n._w, n, i);
              });
            }
            function Ue(e, t, a) {
              null != t && d(Be, e) && Be[e](t, a._a, a, e);
            }
            var qe,
              Ne = 0,
              We = 1,
              ze = 2,
              Ve = 3,
              Je = 4,
              Ge = 5,
              Qe = 6,
              Ke = 7,
              Ze = 8;
            function Xe(e, t) {
              return ((e % t) + t) % t;
            }
            function et(e, t) {
              if (isNaN(e) || isNaN(t)) return NaN;
              var a = Xe(t, 12);
              return (
                (e += (t - a) / 12),
                1 === a ? (le(e) ? 29 : 28) : 31 - ((a % 7) % 2)
              );
            }
            (qe = Array.prototype.indexOf
              ? Array.prototype.indexOf
              : function (e) {
                  var t;
                  for (t = 0; t < this.length; ++t) if (this[t] === e) return t;
                  return -1;
                }),
              R("M", ["MM", 2], "Mo", function () {
                return this.month() + 1;
              }),
              R("MMM", 0, 0, function (e) {
                return this.localeData().monthsShort(this, e);
              }),
              R("MMMM", 0, 0, function (e) {
                return this.localeData().months(this, e);
              }),
              ne("month", "M"),
              oe("month", 8),
              je("M", be),
              je("MM", be, ye),
              je("MMM", function (e, t) {
                return t.monthsShortRegex(e);
              }),
              je("MMMM", function (e, t) {
                return t.monthsRegex(e);
              }),
              Ae(["M", "MM"], function (e, t) {
                t[We] = ue(e) - 1;
              }),
              Ae(["MMM", "MMMM"], function (e, t, a, n) {
                var i = a._locale.monthsParse(e, n, a._strict);
                null != i ? (t[We] = i) : (f(a).invalidMonth = e);
              });
            var tt = "January_February_March_April_May_June_July_August_September_October_November_December".split(
                "_"
              ),
              at = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
              nt = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
              it = Ee,
              rt = Ee;
            function st(e, t) {
              return e
                ? s(this._months)
                  ? this._months[e.month()]
                  : this._months[
                      (this._months.isFormat || nt).test(t)
                        ? "format"
                        : "standalone"
                    ][e.month()]
                : s(this._months)
                ? this._months
                : this._months.standalone;
            }
            function ot(e, t) {
              return e
                ? s(this._monthsShort)
                  ? this._monthsShort[e.month()]
                  : this._monthsShort[nt.test(t) ? "format" : "standalone"][
                      e.month()
                    ]
                : s(this._monthsShort)
                ? this._monthsShort
                : this._monthsShort.standalone;
            }
            function dt(e, t, a) {
              var n,
                i,
                r,
                s = e.toLocaleLowerCase();
              if (!this._monthsParse)
                for (
                  this._monthsParse = [],
                    this._longMonthsParse = [],
                    this._shortMonthsParse = [],
                    n = 0;
                  n < 12;
                  ++n
                )
                  (r = p([2e3, n])),
                    (this._shortMonthsParse[n] = this.monthsShort(
                      r,
                      ""
                    ).toLocaleLowerCase()),
                    (this._longMonthsParse[n] = this.months(
                      r,
                      ""
                    ).toLocaleLowerCase());
              return a
                ? "MMM" === t
                  ? -1 !== (i = qe.call(this._shortMonthsParse, s))
                    ? i
                    : null
                  : -1 !== (i = qe.call(this._longMonthsParse, s))
                  ? i
                  : null
                : "MMM" === t
                ? -1 !== (i = qe.call(this._shortMonthsParse, s)) ||
                  -1 !== (i = qe.call(this._longMonthsParse, s))
                  ? i
                  : null
                : -1 !== (i = qe.call(this._longMonthsParse, s)) ||
                  -1 !== (i = qe.call(this._shortMonthsParse, s))
                ? i
                : null;
            }
            function lt(e, t, a) {
              var n, i, r;
              if (this._monthsParseExact) return dt.call(this, e, t, a);
              for (
                this._monthsParse ||
                  ((this._monthsParse = []),
                  (this._longMonthsParse = []),
                  (this._shortMonthsParse = [])),
                  n = 0;
                n < 12;
                n++
              ) {
                if (
                  ((i = p([2e3, n])),
                  a &&
                    !this._longMonthsParse[n] &&
                    ((this._longMonthsParse[n] = new RegExp(
                      "^" + this.months(i, "").replace(".", "") + "$",
                      "i"
                    )),
                    (this._shortMonthsParse[n] = new RegExp(
                      "^" + this.monthsShort(i, "").replace(".", "") + "$",
                      "i"
                    ))),
                  a ||
                    this._monthsParse[n] ||
                    ((r =
                      "^" + this.months(i, "") + "|^" + this.monthsShort(i, "")),
                    (this._monthsParse[n] = new RegExp(r.replace(".", ""), "i"))),
                  a && "MMMM" === t && this._longMonthsParse[n].test(e))
                )
                  return n;
                if (a && "MMM" === t && this._shortMonthsParse[n].test(e))
                  return n;
                if (!a && this._monthsParse[n].test(e)) return n;
              }
            }
            function ct(e, t) {
              var a;
              if (!e.isValid()) return e;
              if ("string" == typeof t)
                if (/^\d+$/.test(t)) t = ue(t);
                else if (!u((t = e.localeData().monthsParse(t)))) return e;
              return (
                (a = Math.min(e.date(), et(e.year(), t))),
                e._d["set" + (e._isUTC ? "UTC" : "") + "Month"](t, a),
                e
              );
            }
            function ut(e) {
              return null != e
                ? (ct(this, e), i.updateOffset(this, !0), this)
                : _e(this, "Month");
            }
            function mt() {
              return et(this.year(), this.month());
            }
            function _t(e) {
              return this._monthsParseExact
                ? (d(this, "_monthsRegex") || pt.call(this),
                  e ? this._monthsShortStrictRegex : this._monthsShortRegex)
                : (d(this, "_monthsShortRegex") || (this._monthsShortRegex = it),
                  this._monthsShortStrictRegex && e
                    ? this._monthsShortStrictRegex
                    : this._monthsShortRegex);
            }
            function ht(e) {
              return this._monthsParseExact
                ? (d(this, "_monthsRegex") || pt.call(this),
                  e ? this._monthsStrictRegex : this._monthsRegex)
                : (d(this, "_monthsRegex") || (this._monthsRegex = rt),
                  this._monthsStrictRegex && e
                    ? this._monthsStrictRegex
                    : this._monthsRegex);
            }
            function pt() {
              function e(e, t) {
                return t.length - e.length;
              }
              var t,
                a,
                n = [],
                i = [],
                r = [];
              for (t = 0; t < 12; t++)
                (a = p([2e3, t])),
                  n.push(this.monthsShort(a, "")),
                  i.push(this.months(a, "")),
                  r.push(this.months(a, "")),
                  r.push(this.monthsShort(a, ""));
              for (n.sort(e), i.sort(e), r.sort(e), t = 0; t < 12; t++)
                (n[t] = Oe(n[t])), (i[t] = Oe(i[t]));
              for (t = 0; t < 24; t++) r[t] = Oe(r[t]);
              (this._monthsRegex = new RegExp("^(" + r.join("|") + ")", "i")),
                (this._monthsShortRegex = this._monthsRegex),
                (this._monthsStrictRegex = new RegExp(
                  "^(" + i.join("|") + ")",
                  "i"
                )),
                (this._monthsShortStrictRegex = new RegExp(
                  "^(" + n.join("|") + ")",
                  "i"
                ));
            }
            function gt(e) {
              return le(e) ? 366 : 365;
            }
            R("Y", 0, 0, function () {
              var e = this.year();
              return e <= 9999 ? H(e, 4) : "+" + e;
            }),
              R(0, ["YY", 2], 0, function () {
                return this.year() % 100;
              }),
              R(0, ["YYYY", 4], 0, "year"),
              R(0, ["YYYYY", 5], 0, "year"),
              R(0, ["YYYYYY", 6, !0], 0, "year"),
              ne("year", "y"),
              oe("year", 1),
              je("Y", xe),
              je("YY", be, ye),
              je("YYYY", Ye, we),
              je("YYYYY", Te, $e),
              je("YYYYYY", Te, $e),
              Ae(["YYYYY", "YYYYYY"], Ne),
              Ae("YYYY", function (e, t) {
                t[Ne] = 2 === e.length ? i.parseTwoDigitYear(e) : ue(e);
              }),
              Ae("YY", function (e, t) {
                t[Ne] = i.parseTwoDigitYear(e);
              }),
              Ae("Y", function (e, t) {
                t[Ne] = parseInt(e, 10);
              }),
              (i.parseTwoDigitYear = function (e) {
                return ue(e) + (ue(e) > 68 ? 1900 : 2e3);
              });
            var ft = me("FullYear", !0);
            function vt() {
              return le(this.year());
            }
            function yt(e, t, a, n, i, r, s) {
              var o;
              return (
                e < 100 && e >= 0
                  ? ((o = new Date(e + 400, t, a, n, i, r, s)),
                    isFinite(o.getFullYear()) && o.setFullYear(e))
                  : (o = new Date(e, t, a, n, i, r, s)),
                o
              );
            }
            function Mt(e) {
              var t, a;
              return (
                e < 100 && e >= 0
                  ? (((a = Array.prototype.slice.call(arguments))[0] = e + 400),
                    (t = new Date(Date.UTC.apply(null, a))),
                    isFinite(t.getUTCFullYear()) && t.setUTCFullYear(e))
                  : (t = new Date(Date.UTC.apply(null, arguments))),
                t
              );
            }
            function wt(e, t, a) {
              var n = 7 + t - a;
              return (-(7 + Mt(e, 0, n).getUTCDay() - t) % 7) + n - 1;
            }
            function $t(e, t, a, n, i) {
              var r,
                s,
                o = 1 + 7 * (t - 1) + ((7 + a - n) % 7) + wt(e, n, i);
              return (
                o <= 0
                  ? (s = gt((r = e - 1)) + o)
                  : o > gt(e)
                  ? ((r = e + 1), (s = o - gt(e)))
                  : ((r = e), (s = o)),
                { year: r, dayOfYear: s }
              );
            }
            function bt(e, t, a) {
              var n,
                i,
                r = wt(e.year(), t, a),
                s = Math.floor((e.dayOfYear() - r - 1) / 7) + 1;
              return (
                s < 1
                  ? (n = s + Lt((i = e.year() - 1), t, a))
                  : s > Lt(e.year(), t, a)
                  ? ((n = s - Lt(e.year(), t, a)), (i = e.year() + 1))
                  : ((i = e.year()), (n = s)),
                { week: n, year: i }
              );
            }
            function Lt(e, t, a) {
              var n = wt(e, t, a),
                i = wt(e + 1, t, a);
              return (gt(e) - n + i) / 7;
            }
            function Dt(e) {
              return bt(e, this._week.dow, this._week.doy).week;
            }
            R("w", ["ww", 2], "wo", "week"),
              R("W", ["WW", 2], "Wo", "isoWeek"),
              ne("week", "w"),
              ne("isoWeek", "W"),
              oe("week", 5),
              oe("isoWeek", 5),
              je("w", be),
              je("ww", be, ye),
              je("W", be),
              je("WW", be, ye),
              Re(["w", "ww", "W", "WW"], function (e, t, a, n) {
                t[n.substr(0, 1)] = ue(e);
              });
            var kt = { dow: 0, doy: 6 };
            function Yt() {
              return this._week.dow;
            }
            function Tt() {
              return this._week.doy;
            }
            function St(e) {
              var t = this.localeData().week(this);
              return null == e ? t : this.add(7 * (e - t), "d");
            }
            function xt(e) {
              var t = bt(this, 1, 4).week;
              return null == e ? t : this.add(7 * (e - t), "d");
            }
            function Ct(e, t) {
              return "string" != typeof e
                ? e
                : isNaN(e)
                ? "number" == typeof (e = t.weekdaysParse(e))
                  ? e
                  : null
                : parseInt(e, 10);
            }
            function It(e, t) {
              return "string" == typeof e
                ? t.weekdaysParse(e) % 7 || 7
                : isNaN(e)
                ? null
                : e;
            }
            function Pt(e, t) {
              return e.slice(t, 7).concat(e.slice(0, t));
            }
            R("d", 0, "do", "day"),
              R("dd", 0, 0, function (e) {
                return this.localeData().weekdaysMin(this, e);
              }),
              R("ddd", 0, 0, function (e) {
                return this.localeData().weekdaysShort(this, e);
              }),
              R("dddd", 0, 0, function (e) {
                return this.localeData().weekdays(this, e);
              }),
              R("e", 0, 0, "weekday"),
              R("E", 0, 0, "isoWeekday"),
              ne("day", "d"),
              ne("weekday", "e"),
              ne("isoWeekday", "E"),
              oe("day", 11),
              oe("weekday", 11),
              oe("isoWeekday", 11),
              je("d", be),
              je("e", be),
              je("E", be),
              je("dd", function (e, t) {
                return t.weekdaysMinRegex(e);
              }),
              je("ddd", function (e, t) {
                return t.weekdaysShortRegex(e);
              }),
              je("dddd", function (e, t) {
                return t.weekdaysRegex(e);
              }),
              Re(["dd", "ddd", "dddd"], function (e, t, a, n) {
                var i = a._locale.weekdaysParse(e, n, a._strict);
                null != i ? (t.d = i) : (f(a).invalidWeekday = e);
              }),
              Re(["d", "e", "E"], function (e, t, a, n) {
                t[n] = ue(e);
              });
            var Et = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
                "_"
              ),
              jt = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
              Ht = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
              Ft = Ee,
              Ot = Ee,
              Bt = Ee;
            function At(e, t) {
              var a = s(this._weekdays)
                ? this._weekdays
                : this._weekdays[
                    e && !0 !== e && this._weekdays.isFormat.test(t)
                      ? "format"
                      : "standalone"
                  ];
              return !0 === e ? Pt(a, this._week.dow) : e ? a[e.day()] : a;
            }
            function Rt(e) {
              return !0 === e
                ? Pt(this._weekdaysShort, this._week.dow)
                : e
                ? this._weekdaysShort[e.day()]
                : this._weekdaysShort;
            }
            function Ut(e) {
              return !0 === e
                ? Pt(this._weekdaysMin, this._week.dow)
                : e
                ? this._weekdaysMin[e.day()]
                : this._weekdaysMin;
            }
            function qt(e, t, a) {
              var n,
                i,
                r,
                s = e.toLocaleLowerCase();
              if (!this._weekdaysParse)
                for (
                  this._weekdaysParse = [],
                    this._shortWeekdaysParse = [],
                    this._minWeekdaysParse = [],
                    n = 0;
                  n < 7;
                  ++n
                )
                  (r = p([2e3, 1]).day(n)),
                    (this._minWeekdaysParse[n] = this.weekdaysMin(
                      r,
                      ""
                    ).toLocaleLowerCase()),
                    (this._shortWeekdaysParse[n] = this.weekdaysShort(
                      r,
                      ""
                    ).toLocaleLowerCase()),
                    (this._weekdaysParse[n] = this.weekdays(
                      r,
                      ""
                    ).toLocaleLowerCase());
              return a
                ? "dddd" === t
                  ? -1 !== (i = qe.call(this._weekdaysParse, s))
                    ? i
                    : null
                  : "ddd" === t
                  ? -1 !== (i = qe.call(this._shortWeekdaysParse, s))
                    ? i
                    : null
                  : -1 !== (i = qe.call(this._minWeekdaysParse, s))
                  ? i
                  : null
                : "dddd" === t
                ? -1 !== (i = qe.call(this._weekdaysParse, s)) ||
                  -1 !== (i = qe.call(this._shortWeekdaysParse, s)) ||
                  -1 !== (i = qe.call(this._minWeekdaysParse, s))
                  ? i
                  : null
                : "ddd" === t
                ? -1 !== (i = qe.call(this._shortWeekdaysParse, s)) ||
                  -1 !== (i = qe.call(this._weekdaysParse, s)) ||
                  -1 !== (i = qe.call(this._minWeekdaysParse, s))
                  ? i
                  : null
                : -1 !== (i = qe.call(this._minWeekdaysParse, s)) ||
                  -1 !== (i = qe.call(this._weekdaysParse, s)) ||
                  -1 !== (i = qe.call(this._shortWeekdaysParse, s))
                ? i
                : null;
            }
            function Nt(e, t, a) {
              var n, i, r;
              if (this._weekdaysParseExact) return qt.call(this, e, t, a);
              for (
                this._weekdaysParse ||
                  ((this._weekdaysParse = []),
                  (this._minWeekdaysParse = []),
                  (this._shortWeekdaysParse = []),
                  (this._fullWeekdaysParse = [])),
                  n = 0;
                n < 7;
                n++
              ) {
                if (
                  ((i = p([2e3, 1]).day(n)),
                  a &&
                    !this._fullWeekdaysParse[n] &&
                    ((this._fullWeekdaysParse[n] = new RegExp(
                      "^" + this.weekdays(i, "").replace(".", "\\.?") + "$",
                      "i"
                    )),
                    (this._shortWeekdaysParse[n] = new RegExp(
                      "^" + this.weekdaysShort(i, "").replace(".", "\\.?") + "$",
                      "i"
                    )),
                    (this._minWeekdaysParse[n] = new RegExp(
                      "^" + this.weekdaysMin(i, "").replace(".", "\\.?") + "$",
                      "i"
                    ))),
                  this._weekdaysParse[n] ||
                    ((r =
                      "^" +
                      this.weekdays(i, "") +
                      "|^" +
                      this.weekdaysShort(i, "") +
                      "|^" +
                      this.weekdaysMin(i, "")),
                    (this._weekdaysParse[n] = new RegExp(
                      r.replace(".", ""),
                      "i"
                    ))),
                  a && "dddd" === t && this._fullWeekdaysParse[n].test(e))
                )
                  return n;
                if (a && "ddd" === t && this._shortWeekdaysParse[n].test(e))
                  return n;
                if (a && "dd" === t && this._minWeekdaysParse[n].test(e))
                  return n;
                if (!a && this._weekdaysParse[n].test(e)) return n;
              }
            }
            function Wt(e) {
              if (!this.isValid()) return null != e ? this : NaN;
              var t = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
              return null != e
                ? ((e = Ct(e, this.localeData())), this.add(e - t, "d"))
                : t;
            }
            function zt(e) {
              if (!this.isValid()) return null != e ? this : NaN;
              var t = (this.day() + 7 - this.localeData()._week.dow) % 7;
              return null == e ? t : this.add(e - t, "d");
            }
            function Vt(e) {
              if (!this.isValid()) return null != e ? this : NaN;
              if (null != e) {
                var t = It(e, this.localeData());
                return this.day(this.day() % 7 ? t : t - 7);
              }
              return this.day() || 7;
            }
            function Jt(e) {
              return this._weekdaysParseExact
                ? (d(this, "_weekdaysRegex") || Kt.call(this),
                  e ? this._weekdaysStrictRegex : this._weekdaysRegex)
                : (d(this, "_weekdaysRegex") || (this._weekdaysRegex = Ft),
                  this._weekdaysStrictRegex && e
                    ? this._weekdaysStrictRegex
                    : this._weekdaysRegex);
            }
            function Gt(e) {
              return this._weekdaysParseExact
                ? (d(this, "_weekdaysRegex") || Kt.call(this),
                  e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex)
                : (d(this, "_weekdaysShortRegex") ||
                    (this._weekdaysShortRegex = Ot),
                  this._weekdaysShortStrictRegex && e
                    ? this._weekdaysShortStrictRegex
                    : this._weekdaysShortRegex);
            }
            function Qt(e) {
              return this._weekdaysParseExact
                ? (d(this, "_weekdaysRegex") || Kt.call(this),
                  e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex)
                : (d(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = Bt),
                  this._weekdaysMinStrictRegex && e
                    ? this._weekdaysMinStrictRegex
                    : this._weekdaysMinRegex);
            }
            function Kt() {
              function e(e, t) {
                return t.length - e.length;
              }
              var t,
                a,
                n,
                i,
                r,
                s = [],
                o = [],
                d = [],
                l = [];
              for (t = 0; t < 7; t++)
                (a = p([2e3, 1]).day(t)),
                  (n = Oe(this.weekdaysMin(a, ""))),
                  (i = Oe(this.weekdaysShort(a, ""))),
                  (r = Oe(this.weekdays(a, ""))),
                  s.push(n),
                  o.push(i),
                  d.push(r),
                  l.push(n),
                  l.push(i),
                  l.push(r);
              s.sort(e),
                o.sort(e),
                d.sort(e),
                l.sort(e),
                (this._weekdaysRegex = new RegExp("^(" + l.join("|") + ")", "i")),
                (this._weekdaysShortRegex = this._weekdaysRegex),
                (this._weekdaysMinRegex = this._weekdaysRegex),
                (this._weekdaysStrictRegex = new RegExp(
                  "^(" + d.join("|") + ")",
                  "i"
                )),
                (this._weekdaysShortStrictRegex = new RegExp(
                  "^(" + o.join("|") + ")",
                  "i"
                )),
                (this._weekdaysMinStrictRegex = new RegExp(
                  "^(" + s.join("|") + ")",
                  "i"
                ));
            }
            function Zt() {
              return this.hours() % 12 || 12;
            }
            function Xt() {
              return this.hours() || 24;
            }
            function ea(e, t) {
              R(e, 0, 0, function () {
                return this.localeData().meridiem(
                  this.hours(),
                  this.minutes(),
                  t
                );
              });
            }
            function ta(e, t) {
              return t._meridiemParse;
            }
            function aa(e) {
              return "p" === (e + "").toLowerCase().charAt(0);
            }
            R("H", ["HH", 2], 0, "hour"),
              R("h", ["hh", 2], 0, Zt),
              R("k", ["kk", 2], 0, Xt),
              R("hmm", 0, 0, function () {
                return "" + Zt.apply(this) + H(this.minutes(), 2);
              }),
              R("hmmss", 0, 0, function () {
                return (
                  "" +
                  Zt.apply(this) +
                  H(this.minutes(), 2) +
                  H(this.seconds(), 2)
                );
              }),
              R("Hmm", 0, 0, function () {
                return "" + this.hours() + H(this.minutes(), 2);
              }),
              R("Hmmss", 0, 0, function () {
                return (
                  "" + this.hours() + H(this.minutes(), 2) + H(this.seconds(), 2)
                );
              }),
              ea("a", !0),
              ea("A", !1),
              ne("hour", "h"),
              oe("hour", 13),
              je("a", ta),
              je("A", ta),
              je("H", be),
              je("h", be),
              je("k", be),
              je("HH", be, ye),
              je("hh", be, ye),
              je("kk", be, ye),
              je("hmm", Le),
              je("hmmss", De),
              je("Hmm", Le),
              je("Hmmss", De),
              Ae(["H", "HH"], Ve),
              Ae(["k", "kk"], function (e, t, a) {
                var n = ue(e);
                t[Ve] = 24 === n ? 0 : n;
              }),
              Ae(["a", "A"], function (e, t, a) {
                (a._isPm = a._locale.isPM(e)), (a._meridiem = e);
              }),
              Ae(["h", "hh"], function (e, t, a) {
                (t[Ve] = ue(e)), (f(a).bigHour = !0);
              }),
              Ae("hmm", function (e, t, a) {
                var n = e.length - 2;
                (t[Ve] = ue(e.substr(0, n))),
                  (t[Je] = ue(e.substr(n))),
                  (f(a).bigHour = !0);
              }),
              Ae("hmmss", function (e, t, a) {
                var n = e.length - 4,
                  i = e.length - 2;
                (t[Ve] = ue(e.substr(0, n))),
                  (t[Je] = ue(e.substr(n, 2))),
                  (t[Ge] = ue(e.substr(i))),
                  (f(a).bigHour = !0);
              }),
              Ae("Hmm", function (e, t, a) {
                var n = e.length - 2;
                (t[Ve] = ue(e.substr(0, n))), (t[Je] = ue(e.substr(n)));
              }),
              Ae("Hmmss", function (e, t, a) {
                var n = e.length - 4,
                  i = e.length - 2;
                (t[Ve] = ue(e.substr(0, n))),
                  (t[Je] = ue(e.substr(n, 2))),
                  (t[Ge] = ue(e.substr(i)));
              });
            var na = /[ap]\.?m?\.?/i,
              ia = me("Hours", !0);
            function ra(e, t, a) {
              return e > 11 ? (a ? "pm" : "PM") : a ? "am" : "AM";
            }
            var sa,
              oa = {
                calendar: E,
                longDateFormat: z,
                invalidDate: J,
                ordinal: Q,
                dayOfMonthOrdinalParse: K,
                relativeTime: X,
                months: tt,
                monthsShort: at,
                week: kt,
                weekdays: Et,
                weekdaysMin: Ht,
                weekdaysShort: jt,
                meridiemParse: na
              },
              da = {},
              la = {};
            function ca(e, t) {
              var a,
                n = Math.min(e.length, t.length);
              for (a = 0; a < n; a += 1) if (e[a] !== t[a]) return a;
              return n;
            }
            function ua(e) {
              return e ? e.toLowerCase().replace("_", "-") : e;
            }
            function ma(e) {
              for (var t, a, n, i, r = 0; r < e.length; ) {
                for (
                  t = (i = ua(e[r]).split("-")).length,
                    a = (a = ua(e[r + 1])) ? a.split("-") : null;
                  t > 0;

                ) {
                  if ((n = _a(i.slice(0, t).join("-")))) return n;
                  if (a && a.length >= t && ca(i, a) >= t - 1) break;
                  t--;
                }
                r++;
              }
              return sa;
            }
            function _a(t) {
              var n = null;
              if (void 0 === da[t] && e && e.exports)
                try {
                  (n = sa._abbr), a(6700)("./" + t), ha(n);
                } catch (e) {
                  da[t] = null;
                }
              return da[t];
            }
            function ha(e, t) {
              var a;
              return (
                e &&
                  ((a = c(t) ? fa(e) : pa(e, t))
                    ? (sa = a)
                    : "undefined" != typeof console &&
                      console.warn &&
                      console.warn(
                        "Locale " + e + " not found. Did you forget to load it?"
                      )),
                sa._abbr
              );
            }
            function pa(e, t) {
              if (null !== t) {
                var a,
                  n = oa;
                if (((t.abbr = e), null != da[e]))
                  S(
                    "defineLocaleOverride",
                    "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
                  ),
                    (n = da[e]._config);
                else if (null != t.parentLocale)
                  if (null != da[t.parentLocale]) n = da[t.parentLocale]._config;
                  else {
                    if (null == (a = _a(t.parentLocale)))
                      return (
                        la[t.parentLocale] || (la[t.parentLocale] = []),
                        la[t.parentLocale].push({ name: e, config: t }),
                        null
                      );
                    n = a._config;
                  }
                return (
                  (da[e] = new P(I(n, t))),
                  la[e] &&
                    la[e].forEach(function (e) {
                      pa(e.name, e.config);
                    }),
                  ha(e),
                  da[e]
                );
              }
              return delete da[e], null;
            }
            function ga(e, t) {
              if (null != t) {
                var a,
                  n,
                  i = oa;
                null != da[e] && null != da[e].parentLocale
                  ? da[e].set(I(da[e]._config, t))
                  : (null != (n = _a(e)) && (i = n._config),
                    (t = I(i, t)),
                    null == n && (t.abbr = e),
                    ((a = new P(t)).parentLocale = da[e]),
                    (da[e] = a)),
                  ha(e);
              } else
                null != da[e] &&
                  (null != da[e].parentLocale
                    ? ((da[e] = da[e].parentLocale), e === ha() && ha(e))
                    : null != da[e] && delete da[e]);
              return da[e];
            }
            function fa(e) {
              var t;
              if (
                (e && e._locale && e._locale._abbr && (e = e._locale._abbr), !e)
              )
                return sa;
              if (!s(e)) {
                if ((t = _a(e))) return t;
                e = [e];
              }
              return ma(e);
            }
            function va() {
              return Y(da);
            }
            function ya(e) {
              var t,
                a = e._a;
              return (
                a &&
                  -2 === f(e).overflow &&
                  ((t =
                    a[We] < 0 || a[We] > 11
                      ? We
                      : a[ze] < 1 || a[ze] > et(a[Ne], a[We])
                      ? ze
                      : a[Ve] < 0 ||
                        a[Ve] > 24 ||
                        (24 === a[Ve] &&
                          (0 !== a[Je] || 0 !== a[Ge] || 0 !== a[Qe]))
                      ? Ve
                      : a[Je] < 0 || a[Je] > 59
                      ? Je
                      : a[Ge] < 0 || a[Ge] > 59
                      ? Ge
                      : a[Qe] < 0 || a[Qe] > 999
                      ? Qe
                      : -1),
                  f(e)._overflowDayOfYear && (t < Ne || t > ze) && (t = ze),
                  f(e)._overflowWeeks && -1 === t && (t = Ke),
                  f(e)._overflowWeekday && -1 === t && (t = Ze),
                  (f(e).overflow = t)),
                e
              );
            }
            var Ma = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
              wa = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
              $a = /Z|[+-]\d\d(?::?\d\d)?/,
              ba = [
                ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
                ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
                ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
                ["GGGG-[W]WW", /\d{4}-W\d\d/, !1],
                ["YYYY-DDD", /\d{4}-\d{3}/],
                ["YYYY-MM", /\d{4}-\d\d/, !1],
                ["YYYYYYMMDD", /[+-]\d{10}/],
                ["YYYYMMDD", /\d{8}/],
                ["GGGG[W]WWE", /\d{4}W\d{3}/],
                ["GGGG[W]WW", /\d{4}W\d{2}/, !1],
                ["YYYYDDD", /\d{7}/],
                ["YYYYMM", /\d{6}/, !1],
                ["YYYY", /\d{4}/, !1]
              ],
              La = [
                ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
                ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
                ["HH:mm:ss", /\d\d:\d\d:\d\d/],
                ["HH:mm", /\d\d:\d\d/],
                ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
                ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
                ["HHmmss", /\d\d\d\d\d\d/],
                ["HHmm", /\d\d\d\d/],
                ["HH", /\d\d/]
              ],
              Da = /^\/?Date\((-?\d+)/i,
              ka = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
              Ya = {
                UT: 0,
                GMT: 0,
                EDT: -240,
                EST: -300,
                CDT: -300,
                CST: -360,
                MDT: -360,
                MST: -420,
                PDT: -420,
                PST: -480
              };
            function Ta(e) {
              var t,
                a,
                n,
                i,
                r,
                s,
                o = e._i,
                d = Ma.exec(o) || wa.exec(o);
              if (d) {
                for (f(e).iso = !0, t = 0, a = ba.length; t < a; t++)
                  if (ba[t][1].exec(d[1])) {
                    (i = ba[t][0]), (n = !1 !== ba[t][2]);
                    break;
                  }
                if (null == i) return void (e._isValid = !1);
                if (d[3]) {
                  for (t = 0, a = La.length; t < a; t++)
                    if (La[t][1].exec(d[3])) {
                      r = (d[2] || " ") + La[t][0];
                      break;
                    }
                  if (null == r) return void (e._isValid = !1);
                }
                if (!n && null != r) return void (e._isValid = !1);
                if (d[4]) {
                  if (!$a.exec(d[4])) return void (e._isValid = !1);
                  s = "Z";
                }
                (e._f = i + (r || "") + (s || "")), Aa(e);
              } else e._isValid = !1;
            }
            function Sa(e, t, a, n, i, r) {
              var s = [
                xa(e),
                at.indexOf(t),
                parseInt(a, 10),
                parseInt(n, 10),
                parseInt(i, 10)
              ];
              return r && s.push(parseInt(r, 10)), s;
            }
            function xa(e) {
              var t = parseInt(e, 10);
              return t <= 49 ? 2e3 + t : t <= 999 ? 1900 + t : t;
            }
            function Ca(e) {
              return e
                .replace(/\([^)]*\)|[\n\t]/g, " ")
                .replace(/(\s\s+)/g, " ")
                .replace(/^\s\s*/, "")
                .replace(/\s\s*$/, "");
            }
            function Ia(e, t, a) {
              return (
                !e ||
                jt.indexOf(e) === new Date(t[0], t[1], t[2]).getDay() ||
                ((f(a).weekdayMismatch = !0), (a._isValid = !1), !1)
              );
            }
            function Pa(e, t, a) {
              if (e) return Ya[e];
              if (t) return 0;
              var n = parseInt(a, 10),
                i = n % 100;
              return ((n - i) / 100) * 60 + i;
            }
            function Ea(e) {
              var t,
                a = ka.exec(Ca(e._i));
              if (a) {
                if (
                  ((t = Sa(a[4], a[3], a[2], a[5], a[6], a[7])), !Ia(a[1], t, e))
                )
                  return;
                (e._a = t),
                  (e._tzm = Pa(a[8], a[9], a[10])),
                  (e._d = Mt.apply(null, e._a)),
                  e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
                  (f(e).rfc2822 = !0);
              } else e._isValid = !1;
            }
            function ja(e) {
              var t = Da.exec(e._i);
              null === t
                ? (Ta(e),
                  !1 === e._isValid &&
                    (delete e._isValid,
                    Ea(e),
                    !1 === e._isValid &&
                      (delete e._isValid,
                      e._strict
                        ? (e._isValid = !1)
                        : i.createFromInputFallback(e))))
                : (e._d = new Date(+t[1]));
            }
            function Ha(e, t, a) {
              return null != e ? e : null != t ? t : a;
            }
            function Fa(e) {
              var t = new Date(i.now());
              return e._useUTC
                ? [t.getUTCFullYear(), t.getUTCMonth(), t.getUTCDate()]
                : [t.getFullYear(), t.getMonth(), t.getDate()];
            }
            function Oa(e) {
              var t,
                a,
                n,
                i,
                r,
                s = [];
              if (!e._d) {
                for (
                  n = Fa(e),
                    e._w && null == e._a[ze] && null == e._a[We] && Ba(e),
                    null != e._dayOfYear &&
                      ((r = Ha(e._a[Ne], n[Ne])),
                      (e._dayOfYear > gt(r) || 0 === e._dayOfYear) &&
                        (f(e)._overflowDayOfYear = !0),
                      (a = Mt(r, 0, e._dayOfYear)),
                      (e._a[We] = a.getUTCMonth()),
                      (e._a[ze] = a.getUTCDate())),
                    t = 0;
                  t < 3 && null == e._a[t];
                  ++t
                )
                  e._a[t] = s[t] = n[t];
                for (; t < 7; t++)
                  e._a[t] = s[t] = null == e._a[t] ? (2 === t ? 1 : 0) : e._a[t];
                24 === e._a[Ve] &&
                  0 === e._a[Je] &&
                  0 === e._a[Ge] &&
                  0 === e._a[Qe] &&
                  ((e._nextDay = !0), (e._a[Ve] = 0)),
                  (e._d = (e._useUTC ? Mt : yt).apply(null, s)),
                  (i = e._useUTC ? e._d.getUTCDay() : e._d.getDay()),
                  null != e._tzm &&
                    e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
                  e._nextDay && (e._a[Ve] = 24),
                  e._w &&
                    void 0 !== e._w.d &&
                    e._w.d !== i &&
                    (f(e).weekdayMismatch = !0);
              }
            }
            function Ba(e) {
              var t, a, n, i, r, s, o, d, l;
              null != (t = e._w).GG || null != t.W || null != t.E
                ? ((r = 1),
                  (s = 4),
                  (a = Ha(t.GG, e._a[Ne], bt(Ja(), 1, 4).year)),
                  (n = Ha(t.W, 1)),
                  ((i = Ha(t.E, 1)) < 1 || i > 7) && (d = !0))
                : ((r = e._locale._week.dow),
                  (s = e._locale._week.doy),
                  (l = bt(Ja(), r, s)),
                  (a = Ha(t.gg, e._a[Ne], l.year)),
                  (n = Ha(t.w, l.week)),
                  null != t.d
                    ? ((i = t.d) < 0 || i > 6) && (d = !0)
                    : null != t.e
                    ? ((i = t.e + r), (t.e < 0 || t.e > 6) && (d = !0))
                    : (i = r)),
                n < 1 || n > Lt(a, r, s)
                  ? (f(e)._overflowWeeks = !0)
                  : null != d
                  ? (f(e)._overflowWeekday = !0)
                  : ((o = $t(a, n, i, r, s)),
                    (e._a[Ne] = o.year),
                    (e._dayOfYear = o.dayOfYear));
            }
            function Aa(e) {
              if (e._f !== i.ISO_8601)
                if (e._f !== i.RFC_2822) {
                  (e._a = []), (f(e).empty = !0);
                  var t,
                    a,
                    n,
                    r,
                    s,
                    o,
                    d = "" + e._i,
                    l = d.length,
                    c = 0;
                  for (
                    n = W(e._f, e._locale).match(F) || [], t = 0;
                    t < n.length;
                    t++
                  )
                    (r = n[t]),
                      (a = (d.match(He(r, e)) || [])[0]) &&
                        ((s = d.substr(0, d.indexOf(a))).length > 0 &&
                          f(e).unusedInput.push(s),
                        (d = d.slice(d.indexOf(a) + a.length)),
                        (c += a.length)),
                      A[r]
                        ? (a ? (f(e).empty = !1) : f(e).unusedTokens.push(r),
                          Ue(r, a, e))
                        : e._strict && !a && f(e).unusedTokens.push(r);
                  (f(e).charsLeftOver = l - c),
                    d.length > 0 && f(e).unusedInput.push(d),
                    e._a[Ve] <= 12 &&
                      !0 === f(e).bigHour &&
                      e._a[Ve] > 0 &&
                      (f(e).bigHour = void 0),
                    (f(e).parsedDateParts = e._a.slice(0)),
                    (f(e).meridiem = e._meridiem),
                    (e._a[Ve] = Ra(e._locale, e._a[Ve], e._meridiem)),
                    null !== (o = f(e).era) &&
                      (e._a[Ne] = e._locale.erasConvertYear(o, e._a[Ne])),
                    Oa(e),
                    ya(e);
                } else Ea(e);
              else Ta(e);
            }
            function Ra(e, t, a) {
              var n;
              return null == a
                ? t
                : null != e.meridiemHour
                ? e.meridiemHour(t, a)
                : null != e.isPM
                ? ((n = e.isPM(a)) && t < 12 && (t += 12),
                  n || 12 !== t || (t = 0),
                  t)
                : t;
            }
            function Ua(e) {
              var t,
                a,
                n,
                i,
                r,
                s,
                o = !1;
              if (0 === e._f.length)
                return (f(e).invalidFormat = !0), void (e._d = new Date(NaN));
              for (i = 0; i < e._f.length; i++)
                (r = 0),
                  (s = !1),
                  (t = $({}, e)),
                  null != e._useUTC && (t._useUTC = e._useUTC),
                  (t._f = e._f[i]),
                  Aa(t),
                  v(t) && (s = !0),
                  (r += f(t).charsLeftOver),
                  (r += 10 * f(t).unusedTokens.length),
                  (f(t).score = r),
                  o
                    ? r < n && ((n = r), (a = t))
                    : (null == n || r < n || s) &&
                      ((n = r), (a = t), s && (o = !0));
              h(e, a || t);
            }
            function qa(e) {
              if (!e._d) {
                var t = re(e._i),
                  a = void 0 === t.day ? t.date : t.day;
                (e._a = _(
                  [t.year, t.month, a, t.hour, t.minute, t.second, t.millisecond],
                  function (e) {
                    return e && parseInt(e, 10);
                  }
                )),
                  Oa(e);
              }
            }
            function Na(e) {
              var t = new b(ya(Wa(e)));
              return t._nextDay && (t.add(1, "d"), (t._nextDay = void 0)), t;
            }
            function Wa(e) {
              var t = e._i,
                a = e._f;
              return (
                (e._locale = e._locale || fa(e._l)),
                null === t || (void 0 === a && "" === t)
                  ? y({ nullInput: !0 })
                  : ("string" == typeof t && (e._i = t = e._locale.preparse(t)),
                    L(t)
                      ? new b(ya(t))
                      : (m(t) ? (e._d = t) : s(a) ? Ua(e) : a ? Aa(e) : za(e),
                        v(e) || (e._d = null),
                        e))
              );
            }
            function za(e) {
              var t = e._i;
              c(t)
                ? (e._d = new Date(i.now()))
                : m(t)
                ? (e._d = new Date(t.valueOf()))
                : "string" == typeof t
                ? ja(e)
                : s(t)
                ? ((e._a = _(t.slice(0), function (e) {
                    return parseInt(e, 10);
                  })),
                  Oa(e))
                : o(t)
                ? qa(e)
                : u(t)
                ? (e._d = new Date(t))
                : i.createFromInputFallback(e);
            }
            function Va(e, t, a, n, i) {
              var r = {};
              return (
                (!0 !== t && !1 !== t) || ((n = t), (t = void 0)),
                (!0 !== a && !1 !== a) || ((n = a), (a = void 0)),
                ((o(e) && l(e)) || (s(e) && 0 === e.length)) && (e = void 0),
                (r._isAMomentObject = !0),
                (r._useUTC = r._isUTC = i),
                (r._l = a),
                (r._i = e),
                (r._f = t),
                (r._strict = n),
                Na(r)
              );
            }
            function Ja(e, t, a, n) {
              return Va(e, t, a, n, !1);
            }
            (i.createFromInputFallback = k(
              "value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",
              function (e) {
                e._d = new Date(e._i + (e._useUTC ? " UTC" : ""));
              }
            )),
              (i.ISO_8601 = function () {}),
              (i.RFC_2822 = function () {});
            var Ga = k(
                "moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",
                function () {
                  var e = Ja.apply(null, arguments);
                  return this.isValid() && e.isValid()
                    ? e < this
                      ? this
                      : e
                    : y();
                }
              ),
              Qa = k(
                "moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",
                function () {
                  var e = Ja.apply(null, arguments);
                  return this.isValid() && e.isValid()
                    ? e > this
                      ? this
                      : e
                    : y();
                }
              );
            function Ka(e, t) {
              var a, n;
              if ((1 === t.length && s(t[0]) && (t = t[0]), !t.length))
                return Ja();
              for (a = t[0], n = 1; n < t.length; ++n)
                (t[n].isValid() && !t[n][e](a)) || (a = t[n]);
              return a;
            }
            function Za() {
              return Ka("isBefore", [].slice.call(arguments, 0));
            }
            function Xa() {
              return Ka("isAfter", [].slice.call(arguments, 0));
            }
            var en = function () {
                return Date.now ? Date.now() : +new Date();
              },
              tn = [
                "year",
                "quarter",
                "month",
                "week",
                "day",
                "hour",
                "minute",
                "second",
                "millisecond"
              ];
            function an(e) {
              var t,
                a,
                n = !1;
              for (t in e)
                if (
                  d(e, t) &&
                  (-1 === qe.call(tn, t) || (null != e[t] && isNaN(e[t])))
                )
                  return !1;
              for (a = 0; a < tn.length; ++a)
                if (e[tn[a]]) {
                  if (n) return !1;
                  parseFloat(e[tn[a]]) !== ue(e[tn[a]]) && (n = !0);
                }
              return !0;
            }
            function nn() {
              return this._isValid;
            }
            function rn() {
              return Tn(NaN);
            }
            function sn(e) {
              var t = re(e),
                a = t.year || 0,
                n = t.quarter || 0,
                i = t.month || 0,
                r = t.week || t.isoWeek || 0,
                s = t.day || 0,
                o = t.hour || 0,
                d = t.minute || 0,
                l = t.second || 0,
                c = t.millisecond || 0;
              (this._isValid = an(t)),
                (this._milliseconds = +c + 1e3 * l + 6e4 * d + 1e3 * o * 60 * 60),
                (this._days = +s + 7 * r),
                (this._months = +i + 3 * n + 12 * a),
                (this._data = {}),
                (this._locale = fa()),
                this._bubble();
            }
            function on(e) {
              return e instanceof sn;
            }
            function dn(e) {
              return e < 0 ? -1 * Math.round(-1 * e) : Math.round(e);
            }
            function ln(e, t, a) {
              var n,
                i = Math.min(e.length, t.length),
                r = Math.abs(e.length - t.length),
                s = 0;
              for (n = 0; n < i; n++)
                ((a && e[n] !== t[n]) || (!a && ue(e[n]) !== ue(t[n]))) && s++;
              return s + r;
            }
            function cn(e, t) {
              R(e, 0, 0, function () {
                var e = this.utcOffset(),
                  a = "+";
                return (
                  e < 0 && ((e = -e), (a = "-")),
                  a + H(~~(e / 60), 2) + t + H(~~e % 60, 2)
                );
              });
            }
            cn("Z", ":"),
              cn("ZZ", ""),
              je("Z", Ie),
              je("ZZ", Ie),
              Ae(["Z", "ZZ"], function (e, t, a) {
                (a._useUTC = !0), (a._tzm = mn(Ie, e));
              });
            var un = /([\+\-]|\d\d)/gi;
            function mn(e, t) {
              var a,
                n,
                i = (t || "").match(e);
              return null === i
                ? null
                : 0 ===
                  (n =
                    60 *
                      (a = ((i[i.length - 1] || []) + "").match(un) || [
                        "-",
                        0,
                        0
                      ])[1] +
                    ue(a[2]))
                ? 0
                : "+" === a[0]
                ? n
                : -n;
            }
            function _n(e, t) {
              var a, n;
              return t._isUTC
                ? ((a = t.clone()),
                  (n =
                    (L(e) || m(e) ? e.valueOf() : Ja(e).valueOf()) - a.valueOf()),
                  a._d.setTime(a._d.valueOf() + n),
                  i.updateOffset(a, !1),
                  a)
                : Ja(e).local();
            }
            function hn(e) {
              return -Math.round(e._d.getTimezoneOffset());
            }
            function pn(e, t, a) {
              var n,
                r = this._offset || 0;
              if (!this.isValid()) return null != e ? this : NaN;
              if (null != e) {
                if ("string" == typeof e) {
                  if (null === (e = mn(Ie, e))) return this;
                } else Math.abs(e) < 16 && !a && (e *= 60);
                return (
                  !this._isUTC && t && (n = hn(this)),
                  (this._offset = e),
                  (this._isUTC = !0),
                  null != n && this.add(n, "m"),
                  r !== e &&
                    (!t || this._changeInProgress
                      ? Pn(this, Tn(e - r, "m"), 1, !1)
                      : this._changeInProgress ||
                        ((this._changeInProgress = !0),
                        i.updateOffset(this, !0),
                        (this._changeInProgress = null))),
                  this
                );
              }
              return this._isUTC ? r : hn(this);
            }
            function gn(e, t) {
              return null != e
                ? ("string" != typeof e && (e = -e), this.utcOffset(e, t), this)
                : -this.utcOffset();
            }
            function fn(e) {
              return this.utcOffset(0, e);
            }
            function vn(e) {
              return (
                this._isUTC &&
                  (this.utcOffset(0, e),
                  (this._isUTC = !1),
                  e && this.subtract(hn(this), "m")),
                this
              );
            }
            function yn() {
              if (null != this._tzm) this.utcOffset(this._tzm, !1, !0);
              else if ("string" == typeof this._i) {
                var e = mn(Ce, this._i);
                null != e ? this.utcOffset(e) : this.utcOffset(0, !0);
              }
              return this;
            }
            function Mn(e) {
              return (
                !!this.isValid() &&
                ((e = e ? Ja(e).utcOffset() : 0),
                (this.utcOffset() - e) % 60 == 0)
              );
            }
            function wn() {
              return (
                this.utcOffset() > this.clone().month(0).utcOffset() ||
                this.utcOffset() > this.clone().month(5).utcOffset()
              );
            }
            function $n() {
              if (!c(this._isDSTShifted)) return this._isDSTShifted;
              var e,
                t = {};
              return (
                $(t, this),
                (t = Wa(t))._a
                  ? ((e = t._isUTC ? p(t._a) : Ja(t._a)),
                    (this._isDSTShifted =
                      this.isValid() && ln(t._a, e.toArray()) > 0))
                  : (this._isDSTShifted = !1),
                this._isDSTShifted
              );
            }
            function bn() {
              return !!this.isValid() && !this._isUTC;
            }
            function Ln() {
              return !!this.isValid() && this._isUTC;
            }
            function Dn() {
              return !!this.isValid() && this._isUTC && 0 === this._offset;
            }
            i.updateOffset = function () {};
            var kn = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
              Yn = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
            function Tn(e, t) {
              var a,
                n,
                i,
                r = e,
                s = null;
              return (
                on(e)
                  ? (r = { ms: e._milliseconds, d: e._days, M: e._months })
                  : u(e) || !isNaN(+e)
                  ? ((r = {}), t ? (r[t] = +e) : (r.milliseconds = +e))
                  : (s = kn.exec(e))
                  ? ((a = "-" === s[1] ? -1 : 1),
                    (r = {
                      y: 0,
                      d: ue(s[ze]) * a,
                      h: ue(s[Ve]) * a,
                      m: ue(s[Je]) * a,
                      s: ue(s[Ge]) * a,
                      ms: ue(dn(1e3 * s[Qe])) * a
                    }))
                  : (s = Yn.exec(e))
                  ? ((a = "-" === s[1] ? -1 : 1),
                    (r = {
                      y: Sn(s[2], a),
                      M: Sn(s[3], a),
                      w: Sn(s[4], a),
                      d: Sn(s[5], a),
                      h: Sn(s[6], a),
                      m: Sn(s[7], a),
                      s: Sn(s[8], a)
                    }))
                  : null == r
                  ? (r = {})
                  : "object" == typeof r &&
                    ("from" in r || "to" in r) &&
                    ((i = Cn(Ja(r.from), Ja(r.to))),
                    ((r = {}).ms = i.milliseconds),
                    (r.M = i.months)),
                (n = new sn(r)),
                on(e) && d(e, "_locale") && (n._locale = e._locale),
                on(e) && d(e, "_isValid") && (n._isValid = e._isValid),
                n
              );
            }
            function Sn(e, t) {
              var a = e && parseFloat(e.replace(",", "."));
              return (isNaN(a) ? 0 : a) * t;
            }
            function xn(e, t) {
              var a = {};
              return (
                (a.months = t.month() - e.month() + 12 * (t.year() - e.year())),
                e.clone().add(a.months, "M").isAfter(t) && --a.months,
                (a.milliseconds = +t - +e.clone().add(a.months, "M")),
                a
              );
            }
            function Cn(e, t) {
              var a;
              return e.isValid() && t.isValid()
                ? ((t = _n(t, e)),
                  e.isBefore(t)
                    ? (a = xn(e, t))
                    : (((a = xn(t, e)).milliseconds = -a.milliseconds),
                      (a.months = -a.months)),
                  a)
                : { milliseconds: 0, months: 0 };
            }
            function In(e, t) {
              return function (a, n) {
                var i;
                return (
                  null === n ||
                    isNaN(+n) ||
                    (S(
                      t,
                      "moment()." +
                        t +
                        "(period, number) is deprecated. Please use moment()." +
                        t +
                        "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."
                    ),
                    (i = a),
                    (a = n),
                    (n = i)),
                  Pn(this, Tn(a, n), e),
                  this
                );
              };
            }
            function Pn(e, t, a, n) {
              var r = t._milliseconds,
                s = dn(t._days),
                o = dn(t._months);
              e.isValid() &&
                ((n = null == n || n),
                o && ct(e, _e(e, "Month") + o * a),
                s && he(e, "Date", _e(e, "Date") + s * a),
                r && e._d.setTime(e._d.valueOf() + r * a),
                n && i.updateOffset(e, s || o));
            }
            (Tn.fn = sn.prototype), (Tn.invalid = rn);
            var En = In(1, "add"),
              jn = In(-1, "subtract");
            function Hn(e) {
              return "string" == typeof e || e instanceof String;
            }
            function Fn(e) {
              return L(e) || m(e) || Hn(e) || u(e) || Bn(e) || On(e) || null == e;
            }
            function On(e) {
              var t,
                a,
                n = o(e) && !l(e),
                i = !1,
                r = [
                  "years",
                  "year",
                  "y",
                  "months",
                  "month",
                  "M",
                  "days",
                  "day",
                  "d",
                  "dates",
                  "date",
                  "D",
                  "hours",
                  "hour",
                  "h",
                  "minutes",
                  "minute",
                  "m",
                  "seconds",
                  "second",
                  "s",
                  "milliseconds",
                  "millisecond",
                  "ms"
                ];
              for (t = 0; t < r.length; t += 1) (a = r[t]), (i = i || d(e, a));
              return n && i;
            }
            function Bn(e) {
              var t = s(e),
                a = !1;
              return (
                t &&
                  (a =
                    0 ===
                    e.filter(function (t) {
                      return !u(t) && Hn(e);
                    }).length),
                t && a
              );
            }
            function An(e) {
              var t,
                a,
                n = o(e) && !l(e),
                i = !1,
                r = [
                  "sameDay",
                  "nextDay",
                  "lastDay",
                  "nextWeek",
                  "lastWeek",
                  "sameElse"
                ];
              for (t = 0; t < r.length; t += 1) (a = r[t]), (i = i || d(e, a));
              return n && i;
            }
            function Rn(e, t) {
              var a = e.diff(t, "days", !0);
              return a < -6
                ? "sameElse"
                : a < -1
                ? "lastWeek"
                : a < 0
                ? "lastDay"
                : a < 1
                ? "sameDay"
                : a < 2
                ? "nextDay"
                : a < 7
                ? "nextWeek"
                : "sameElse";
            }
            function Un(e, t) {
              1 === arguments.length &&
                (arguments[0]
                  ? Fn(arguments[0])
                    ? ((e = arguments[0]), (t = void 0))
                    : An(arguments[0]) && ((t = arguments[0]), (e = void 0))
                  : ((e = void 0), (t = void 0)));
              var a = e || Ja(),
                n = _n(a, this).startOf("day"),
                r = i.calendarFormat(this, n) || "sameElse",
                s = t && (x(t[r]) ? t[r].call(this, a) : t[r]);
              return this.format(s || this.localeData().calendar(r, this, Ja(a)));
            }
            function qn() {
              return new b(this);
            }
            function Nn(e, t) {
              var a = L(e) ? e : Ja(e);
              return (
                !(!this.isValid() || !a.isValid()) &&
                ("millisecond" === (t = ie(t) || "millisecond")
                  ? this.valueOf() > a.valueOf()
                  : a.valueOf() < this.clone().startOf(t).valueOf())
              );
            }
            function Wn(e, t) {
              var a = L(e) ? e : Ja(e);
              return (
                !(!this.isValid() || !a.isValid()) &&
                ("millisecond" === (t = ie(t) || "millisecond")
                  ? this.valueOf() < a.valueOf()
                  : this.clone().endOf(t).valueOf() < a.valueOf())
              );
            }
            function zn(e, t, a, n) {
              var i = L(e) ? e : Ja(e),
                r = L(t) ? t : Ja(t);
              return (
                !!(this.isValid() && i.isValid() && r.isValid()) &&
                ("(" === (n = n || "()")[0]
                  ? this.isAfter(i, a)
                  : !this.isBefore(i, a)) &&
                (")" === n[1] ? this.isBefore(r, a) : !this.isAfter(r, a))
              );
            }
            function Vn(e, t) {
              var a,
                n = L(e) ? e : Ja(e);
              return (
                !(!this.isValid() || !n.isValid()) &&
                ("millisecond" === (t = ie(t) || "millisecond")
                  ? this.valueOf() === n.valueOf()
                  : ((a = n.valueOf()),
                    this.clone().startOf(t).valueOf() <= a &&
                      a <= this.clone().endOf(t).valueOf()))
              );
            }
            function Jn(e, t) {
              return this.isSame(e, t) || this.isAfter(e, t);
            }
            function Gn(e, t) {
              return this.isSame(e, t) || this.isBefore(e, t);
            }
            function Qn(e, t, a) {
              var n, i, r;
              if (!this.isValid()) return NaN;
              if (!(n = _n(e, this)).isValid()) return NaN;
              switch (
                ((i = 6e4 * (n.utcOffset() - this.utcOffset())), (t = ie(t)))
              ) {
                case "year":
                  r = Kn(this, n) / 12;
                  break;
                case "month":
                  r = Kn(this, n);
                  break;
                case "quarter":
                  r = Kn(this, n) / 3;
                  break;
                case "second":
                  r = (this - n) / 1e3;
                  break;
                case "minute":
                  r = (this - n) / 6e4;
                  break;
                case "hour":
                  r = (this - n) / 36e5;
                  break;
                case "day":
                  r = (this - n - i) / 864e5;
                  break;
                case "week":
                  r = (this - n - i) / 6048e5;
                  break;
                default:
                  r = this - n;
              }
              return a ? r : ce(r);
            }
            function Kn(e, t) {
              if (e.date() < t.date()) return -Kn(t, e);
              var a = 12 * (t.year() - e.year()) + (t.month() - e.month()),
                n = e.clone().add(a, "months");
              return (
                -(
                  a +
                  (t - n < 0
                    ? (t - n) / (n - e.clone().add(a - 1, "months"))
                    : (t - n) / (e.clone().add(a + 1, "months") - n))
                ) || 0
              );
            }
            function Zn() {
              return this.clone()
                .locale("en")
                .format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
            }
            function Xn(e) {
              if (!this.isValid()) return null;
              var t = !0 !== e,
                a = t ? this.clone().utc() : this;
              return a.year() < 0 || a.year() > 9999
                ? N(
                    a,
                    t
                      ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]"
                      : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"
                  )
                : x(Date.prototype.toISOString)
                ? t
                  ? this.toDate().toISOString()
                  : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3)
                      .toISOString()
                      .replace("Z", N(a, "Z"))
                : N(
                    a,
                    t
                      ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"
                      : "YYYY-MM-DD[T]HH:mm:ss.SSSZ"
                  );
            }
            function ei() {
              if (!this.isValid()) return "moment.invalid(/* " + this._i + " */)";
              var e,
                t,
                a,
                n,
                i = "moment",
                r = "";
              return (
                this.isLocal() ||
                  ((i =
                    0 === this.utcOffset() ? "moment.utc" : "moment.parseZone"),
                  (r = "Z")),
                (e = "[" + i + '("]'),
                (t = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY"),
                (a = "-MM-DD[T]HH:mm:ss.SSS"),
                (n = r + '[")]'),
                this.format(e + t + a + n)
              );
            }
            function ti(e) {
              e || (e = this.isUtc() ? i.defaultFormatUtc : i.defaultFormat);
              var t = N(this, e);
              return this.localeData().postformat(t);
            }
            function ai(e, t) {
              return this.isValid() && ((L(e) && e.isValid()) || Ja(e).isValid())
                ? Tn({ to: this, from: e }).locale(this.locale()).humanize(!t)
                : this.localeData().invalidDate();
            }
            function ni(e) {
              return this.from(Ja(), e);
            }
            function ii(e, t) {
              return this.isValid() && ((L(e) && e.isValid()) || Ja(e).isValid())
                ? Tn({ from: this, to: e }).locale(this.locale()).humanize(!t)
                : this.localeData().invalidDate();
            }
            function ri(e) {
              return this.to(Ja(), e);
            }
            function si(e) {
              var t;
              return void 0 === e
                ? this._locale._abbr
                : (null != (t = fa(e)) && (this._locale = t), this);
            }
            (i.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ"),
              (i.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]");
            var oi = k(
              "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
              function (e) {
                return void 0 === e ? this.localeData() : this.locale(e);
              }
            );
            function di() {
              return this._locale;
            }
            var li = 1e3,
              ci = 60 * li,
              ui = 60 * ci,
              mi = 3506328 * ui;
            function _i(e, t) {
              return ((e % t) + t) % t;
            }
            function hi(e, t, a) {
              return e < 100 && e >= 0
                ? new Date(e + 400, t, a) - mi
                : new Date(e, t, a).valueOf();
            }
            function pi(e, t, a) {
              return e < 100 && e >= 0
                ? Date.UTC(e + 400, t, a) - mi
                : Date.UTC(e, t, a);
            }
            function gi(e) {
              var t, a;
              if (
                void 0 === (e = ie(e)) ||
                "millisecond" === e ||
                !this.isValid()
              )
                return this;
              switch (((a = this._isUTC ? pi : hi), e)) {
                case "year":
                  t = a(this.year(), 0, 1);
                  break;
                case "quarter":
                  t = a(this.year(), this.month() - (this.month() % 3), 1);
                  break;
                case "month":
                  t = a(this.year(), this.month(), 1);
                  break;
                case "week":
                  t = a(this.year(), this.month(), this.date() - this.weekday());
                  break;
                case "isoWeek":
                  t = a(
                    this.year(),
                    this.month(),
                    this.date() - (this.isoWeekday() - 1)
                  );
                  break;
                case "day":
                case "date":
                  t = a(this.year(), this.month(), this.date());
                  break;
                case "hour":
                  (t = this._d.valueOf()),
                    (t -= _i(t + (this._isUTC ? 0 : this.utcOffset() * ci), ui));
                  break;
                case "minute":
                  (t = this._d.valueOf()), (t -= _i(t, ci));
                  break;
                case "second":
                  (t = this._d.valueOf()), (t -= _i(t, li));
              }
              return this._d.setTime(t), i.updateOffset(this, !0), this;
            }
            function fi(e) {
              var t, a;
              if (
                void 0 === (e = ie(e)) ||
                "millisecond" === e ||
                !this.isValid()
              )
                return this;
              switch (((a = this._isUTC ? pi : hi), e)) {
                case "year":
                  t = a(this.year() + 1, 0, 1) - 1;
                  break;
                case "quarter":
                  t =
                    a(this.year(), this.month() - (this.month() % 3) + 3, 1) - 1;
                  break;
                case "month":
                  t = a(this.year(), this.month() + 1, 1) - 1;
                  break;
                case "week":
                  t =
                    a(
                      this.year(),
                      this.month(),
                      this.date() - this.weekday() + 7
                    ) - 1;
                  break;
                case "isoWeek":
                  t =
                    a(
                      this.year(),
                      this.month(),
                      this.date() - (this.isoWeekday() - 1) + 7
                    ) - 1;
                  break;
                case "day":
                case "date":
                  t = a(this.year(), this.month(), this.date() + 1) - 1;
                  break;
                case "hour":
                  (t = this._d.valueOf()),
                    (t +=
                      ui -
                      _i(t + (this._isUTC ? 0 : this.utcOffset() * ci), ui) -
                      1);
                  break;
                case "minute":
                  (t = this._d.valueOf()), (t += ci - _i(t, ci) - 1);
                  break;
                case "second":
                  (t = this._d.valueOf()), (t += li - _i(t, li) - 1);
              }
              return this._d.setTime(t), i.updateOffset(this, !0), this;
            }
            function vi() {
              return this._d.valueOf() - 6e4 * (this._offset || 0);
            }
            function yi() {
              return Math.floor(this.valueOf() / 1e3);
            }
            function Mi() {
              return new Date(this.valueOf());
            }
            function wi() {
              var e = this;
              return [
                e.year(),
                e.month(),
                e.date(),
                e.hour(),
                e.minute(),
                e.second(),
                e.millisecond()
              ];
            }
            function $i() {
              var e = this;
              return {
                years: e.year(),
                months: e.month(),
                date: e.date(),
                hours: e.hours(),
                minutes: e.minutes(),
                seconds: e.seconds(),
                milliseconds: e.milliseconds()
              };
            }
            function bi() {
              return this.isValid() ? this.toISOString() : null;
            }
            function Li() {
              return v(this);
            }
            function Di() {
              return h({}, f(this));
            }
            function ki() {
              return f(this).overflow;
            }
            function Yi() {
              return {
                input: this._i,
                format: this._f,
                locale: this._locale,
                isUTC: this._isUTC,
                strict: this._strict
              };
            }
            function Ti(e, t) {
              var a,
                n,
                r,
                s = this._eras || fa("en")._eras;
              for (a = 0, n = s.length; a < n; ++a) {
                switch (typeof s[a].since) {
                  case "string":
                    (r = i(s[a].since).startOf("day")),
                      (s[a].since = r.valueOf());
                }
                switch (typeof s[a].until) {
                  case "undefined":
                    s[a].until = 1 / 0;
                    break;
                  case "string":
                    (r = i(s[a].until).startOf("day").valueOf()),
                      (s[a].until = r.valueOf());
                }
              }
              return s;
            }
            function Si(e, t, a) {
              var n,
                i,
                r,
                s,
                o,
                d = this.eras();
              for (e = e.toUpperCase(), n = 0, i = d.length; n < i; ++n)
                if (
                  ((r = d[n].name.toUpperCase()),
                  (s = d[n].abbr.toUpperCase()),
                  (o = d[n].narrow.toUpperCase()),
                  a)
                )
                  switch (t) {
                    case "N":
                    case "NN":
                    case "NNN":
                      if (s === e) return d[n];
                      break;
                    case "NNNN":
                      if (r === e) return d[n];
                      break;
                    case "NNNNN":
                      if (o === e) return d[n];
                  }
                else if ([r, s, o].indexOf(e) >= 0) return d[n];
            }
            function xi(e, t) {
              var a = e.since <= e.until ? 1 : -1;
              return void 0 === t
                ? i(e.since).year()
                : i(e.since).year() + (t - e.offset) * a;
            }
            function Ci() {
              var e,
                t,
                a,
                n = this.localeData().eras();
              for (e = 0, t = n.length; e < t; ++e) {
                if (
                  ((a = this.clone().startOf("day").valueOf()),
                  n[e].since <= a && a <= n[e].until)
                )
                  return n[e].name;
                if (n[e].until <= a && a <= n[e].since) return n[e].name;
              }
              return "";
            }
            function Ii() {
              var e,
                t,
                a,
                n = this.localeData().eras();
              for (e = 0, t = n.length; e < t; ++e) {
                if (
                  ((a = this.clone().startOf("day").valueOf()),
                  n[e].since <= a && a <= n[e].until)
                )
                  return n[e].narrow;
                if (n[e].until <= a && a <= n[e].since) return n[e].narrow;
              }
              return "";
            }
            function Pi() {
              var e,
                t,
                a,
                n = this.localeData().eras();
              for (e = 0, t = n.length; e < t; ++e) {
                if (
                  ((a = this.clone().startOf("day").valueOf()),
                  n[e].since <= a && a <= n[e].until)
                )
                  return n[e].abbr;
                if (n[e].until <= a && a <= n[e].since) return n[e].abbr;
              }
              return "";
            }
            function Ei() {
              var e,
                t,
                a,
                n,
                r = this.localeData().eras();
              for (e = 0, t = r.length; e < t; ++e)
                if (
                  ((a = r[e].since <= r[e].until ? 1 : -1),
                  (n = this.clone().startOf("day").valueOf()),
                  (r[e].since <= n && n <= r[e].until) ||
                    (r[e].until <= n && n <= r[e].since))
                )
                  return (this.year() - i(r[e].since).year()) * a + r[e].offset;
              return this.year();
            }
            function ji(e) {
              return (
                d(this, "_erasNameRegex") || Ui.call(this),
                e ? this._erasNameRegex : this._erasRegex
              );
            }
            function Hi(e) {
              return (
                d(this, "_erasAbbrRegex") || Ui.call(this),
                e ? this._erasAbbrRegex : this._erasRegex
              );
            }
            function Fi(e) {
              return (
                d(this, "_erasNarrowRegex") || Ui.call(this),
                e ? this._erasNarrowRegex : this._erasRegex
              );
            }
            function Oi(e, t) {
              return t.erasAbbrRegex(e);
            }
            function Bi(e, t) {
              return t.erasNameRegex(e);
            }
            function Ai(e, t) {
              return t.erasNarrowRegex(e);
            }
            function Ri(e, t) {
              return t._eraYearOrdinalRegex || Se;
            }
            function Ui() {
              var e,
                t,
                a = [],
                n = [],
                i = [],
                r = [],
                s = this.eras();
              for (e = 0, t = s.length; e < t; ++e)
                n.push(Oe(s[e].name)),
                  a.push(Oe(s[e].abbr)),
                  i.push(Oe(s[e].narrow)),
                  r.push(Oe(s[e].name)),
                  r.push(Oe(s[e].abbr)),
                  r.push(Oe(s[e].narrow));
              (this._erasRegex = new RegExp("^(" + r.join("|") + ")", "i")),
                (this._erasNameRegex = new RegExp("^(" + n.join("|") + ")", "i")),
                (this._erasAbbrRegex = new RegExp("^(" + a.join("|") + ")", "i")),
                (this._erasNarrowRegex = new RegExp(
                  "^(" + i.join("|") + ")",
                  "i"
                ));
            }
            function qi(e, t) {
              R(0, [e, e.length], 0, t);
            }
            function Ni(e) {
              return Qi.call(
                this,
                e,
                this.week(),
                this.weekday(),
                this.localeData()._week.dow,
                this.localeData()._week.doy
              );
            }
            function Wi(e) {
              return Qi.call(this, e, this.isoWeek(), this.isoWeekday(), 1, 4);
            }
            function zi() {
              return Lt(this.year(), 1, 4);
            }
            function Vi() {
              return Lt(this.isoWeekYear(), 1, 4);
            }
            function Ji() {
              var e = this.localeData()._week;
              return Lt(this.year(), e.dow, e.doy);
            }
            function Gi() {
              var e = this.localeData()._week;
              return Lt(this.weekYear(), e.dow, e.doy);
            }
            function Qi(e, t, a, n, i) {
              var r;
              return null == e
                ? bt(this, n, i).year
                : (t > (r = Lt(e, n, i)) && (t = r),
                  Ki.call(this, e, t, a, n, i));
            }
            function Ki(e, t, a, n, i) {
              var r = $t(e, t, a, n, i),
                s = Mt(r.year, 0, r.dayOfYear);
              return (
                this.year(s.getUTCFullYear()),
                this.month(s.getUTCMonth()),
                this.date(s.getUTCDate()),
                this
              );
            }
            function Zi(e) {
              return null == e
                ? Math.ceil((this.month() + 1) / 3)
                : this.month(3 * (e - 1) + (this.month() % 3));
            }
            R("N", 0, 0, "eraAbbr"),
              R("NN", 0, 0, "eraAbbr"),
              R("NNN", 0, 0, "eraAbbr"),
              R("NNNN", 0, 0, "eraName"),
              R("NNNNN", 0, 0, "eraNarrow"),
              R("y", ["y", 1], "yo", "eraYear"),
              R("y", ["yy", 2], 0, "eraYear"),
              R("y", ["yyy", 3], 0, "eraYear"),
              R("y", ["yyyy", 4], 0, "eraYear"),
              je("N", Oi),
              je("NN", Oi),
              je("NNN", Oi),
              je("NNNN", Bi),
              je("NNNNN", Ai),
              Ae(["N", "NN", "NNN", "NNNN", "NNNNN"], function (e, t, a, n) {
                var i = a._locale.erasParse(e, n, a._strict);
                i ? (f(a).era = i) : (f(a).invalidEra = e);
              }),
              je("y", Se),
              je("yy", Se),
              je("yyy", Se),
              je("yyyy", Se),
              je("yo", Ri),
              Ae(["y", "yy", "yyy", "yyyy"], Ne),
              Ae(["yo"], function (e, t, a, n) {
                var i;
                a._locale._eraYearOrdinalRegex &&
                  (i = e.match(a._locale._eraYearOrdinalRegex)),
                  a._locale.eraYearOrdinalParse
                    ? (t[Ne] = a._locale.eraYearOrdinalParse(e, i))
                    : (t[Ne] = parseInt(e, 10));
              }),
              R(0, ["gg", 2], 0, function () {
                return this.weekYear() % 100;
              }),
              R(0, ["GG", 2], 0, function () {
                return this.isoWeekYear() % 100;
              }),
              qi("gggg", "weekYear"),
              qi("ggggg", "weekYear"),
              qi("GGGG", "isoWeekYear"),
              qi("GGGGG", "isoWeekYear"),
              ne("weekYear", "gg"),
              ne("isoWeekYear", "GG"),
              oe("weekYear", 1),
              oe("isoWeekYear", 1),
              je("G", xe),
              je("g", xe),
              je("GG", be, ye),
              je("gg", be, ye),
              je("GGGG", Ye, we),
              je("gggg", Ye, we),
              je("GGGGG", Te, $e),
              je("ggggg", Te, $e),
              Re(["gggg", "ggggg", "GGGG", "GGGGG"], function (e, t, a, n) {
                t[n.substr(0, 2)] = ue(e);
              }),
              Re(["gg", "GG"], function (e, t, a, n) {
                t[n] = i.parseTwoDigitYear(e);
              }),
              R("Q", 0, "Qo", "quarter"),
              ne("quarter", "Q"),
              oe("quarter", 7),
              je("Q", ve),
              Ae("Q", function (e, t) {
                t[We] = 3 * (ue(e) - 1);
              }),
              R("D", ["DD", 2], "Do", "date"),
              ne("date", "D"),
              oe("date", 9),
              je("D", be),
              je("DD", be, ye),
              je("Do", function (e, t) {
                return e
                  ? t._dayOfMonthOrdinalParse || t._ordinalParse
                  : t._dayOfMonthOrdinalParseLenient;
              }),
              Ae(["D", "DD"], ze),
              Ae("Do", function (e, t) {
                t[ze] = ue(e.match(be)[0]);
              });
            var Xi = me("Date", !0);
            function er(e) {
              var t =
                Math.round(
                  (this.clone().startOf("day") - this.clone().startOf("year")) /
                    864e5
                ) + 1;
              return null == e ? t : this.add(e - t, "d");
            }
            R("DDD", ["DDDD", 3], "DDDo", "dayOfYear"),
              ne("dayOfYear", "DDD"),
              oe("dayOfYear", 4),
              je("DDD", ke),
              je("DDDD", Me),
              Ae(["DDD", "DDDD"], function (e, t, a) {
                a._dayOfYear = ue(e);
              }),
              R("m", ["mm", 2], 0, "minute"),
              ne("minute", "m"),
              oe("minute", 14),
              je("m", be),
              je("mm", be, ye),
              Ae(["m", "mm"], Je);
            var tr = me("Minutes", !1);
            R("s", ["ss", 2], 0, "second"),
              ne("second", "s"),
              oe("second", 15),
              je("s", be),
              je("ss", be, ye),
              Ae(["s", "ss"], Ge);
            var ar,
              nr,
              ir = me("Seconds", !1);
            for (
              R("S", 0, 0, function () {
                return ~~(this.millisecond() / 100);
              }),
                R(0, ["SS", 2], 0, function () {
                  return ~~(this.millisecond() / 10);
                }),
                R(0, ["SSS", 3], 0, "millisecond"),
                R(0, ["SSSS", 4], 0, function () {
                  return 10 * this.millisecond();
                }),
                R(0, ["SSSSS", 5], 0, function () {
                  return 100 * this.millisecond();
                }),
                R(0, ["SSSSSS", 6], 0, function () {
                  return 1e3 * this.millisecond();
                }),
                R(0, ["SSSSSSS", 7], 0, function () {
                  return 1e4 * this.millisecond();
                }),
                R(0, ["SSSSSSSS", 8], 0, function () {
                  return 1e5 * this.millisecond();
                }),
                R(0, ["SSSSSSSSS", 9], 0, function () {
                  return 1e6 * this.millisecond();
                }),
                ne("millisecond", "ms"),
                oe("millisecond", 16),
                je("S", ke, ve),
                je("SS", ke, ye),
                je("SSS", ke, Me),
                ar = "SSSS";
              ar.length <= 9;
              ar += "S"
            )
              je(ar, Se);
            function rr(e, t) {
              t[Qe] = ue(1e3 * ("0." + e));
            }
            for (ar = "S"; ar.length <= 9; ar += "S") Ae(ar, rr);
            function sr() {
              return this._isUTC ? "UTC" : "";
            }
            function or() {
              return this._isUTC ? "Coordinated Universal Time" : "";
            }
            (nr = me("Milliseconds", !1)),
              R("z", 0, 0, "zoneAbbr"),
              R("zz", 0, 0, "zoneName");
            var dr = b.prototype;
            function lr(e) {
              return Ja(1e3 * e);
            }
            function cr() {
              return Ja.apply(null, arguments).parseZone();
            }
            function ur(e) {
              return e;
            }
            (dr.add = En),
              (dr.calendar = Un),
              (dr.clone = qn),
              (dr.diff = Qn),
              (dr.endOf = fi),
              (dr.format = ti),
              (dr.from = ai),
              (dr.fromNow = ni),
              (dr.to = ii),
              (dr.toNow = ri),
              (dr.get = pe),
              (dr.invalidAt = ki),
              (dr.isAfter = Nn),
              (dr.isBefore = Wn),
              (dr.isBetween = zn),
              (dr.isSame = Vn),
              (dr.isSameOrAfter = Jn),
              (dr.isSameOrBefore = Gn),
              (dr.isValid = Li),
              (dr.lang = oi),
              (dr.locale = si),
              (dr.localeData = di),
              (dr.max = Qa),
              (dr.min = Ga),
              (dr.parsingFlags = Di),
              (dr.set = ge),
              (dr.startOf = gi),
              (dr.subtract = jn),
              (dr.toArray = wi),
              (dr.toObject = $i),
              (dr.toDate = Mi),
              (dr.toISOString = Xn),
              (dr.inspect = ei),
              "undefined" != typeof Symbol &&
                null != Symbol.for &&
                (dr[Symbol.for("nodejs.util.inspect.custom")] = function () {
                  return "Moment<" + this.format() + ">";
                }),
              (dr.toJSON = bi),
              (dr.toString = Zn),
              (dr.unix = yi),
              (dr.valueOf = vi),
              (dr.creationData = Yi),
              (dr.eraName = Ci),
              (dr.eraNarrow = Ii),
              (dr.eraAbbr = Pi),
              (dr.eraYear = Ei),
              (dr.year = ft),
              (dr.isLeapYear = vt),
              (dr.weekYear = Ni),
              (dr.isoWeekYear = Wi),
              (dr.quarter = dr.quarters = Zi),
              (dr.month = ut),
              (dr.daysInMonth = mt),
              (dr.week = dr.weeks = St),
              (dr.isoWeek = dr.isoWeeks = xt),
              (dr.weeksInYear = Ji),
              (dr.weeksInWeekYear = Gi),
              (dr.isoWeeksInYear = zi),
              (dr.isoWeeksInISOWeekYear = Vi),
              (dr.date = Xi),
              (dr.day = dr.days = Wt),
              (dr.weekday = zt),
              (dr.isoWeekday = Vt),
              (dr.dayOfYear = er),
              (dr.hour = dr.hours = ia),
              (dr.minute = dr.minutes = tr),
              (dr.second = dr.seconds = ir),
              (dr.millisecond = dr.milliseconds = nr),
              (dr.utcOffset = pn),
              (dr.utc = fn),
              (dr.local = vn),
              (dr.parseZone = yn),
              (dr.hasAlignedHourOffset = Mn),
              (dr.isDST = wn),
              (dr.isLocal = bn),
              (dr.isUtcOffset = Ln),
              (dr.isUtc = Dn),
              (dr.isUTC = Dn),
              (dr.zoneAbbr = sr),
              (dr.zoneName = or),
              (dr.dates = k(
                "dates accessor is deprecated. Use date instead.",
                Xi
              )),
              (dr.months = k(
                "months accessor is deprecated. Use month instead",
                ut
              )),
              (dr.years = k(
                "years accessor is deprecated. Use year instead",
                ft
              )),
              (dr.zone = k(
                "moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",
                gn
              )),
              (dr.isDSTShifted = k(
                "isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",
                $n
              ));
            var mr = P.prototype;
            function _r(e, t, a, n) {
              var i = fa(),
                r = p().set(n, t);
              return i[a](r, e);
            }
            function hr(e, t, a) {
              if ((u(e) && ((t = e), (e = void 0)), (e = e || ""), null != t))
                return _r(e, t, a, "month");
              var n,
                i = [];
              for (n = 0; n < 12; n++) i[n] = _r(e, n, a, "month");
              return i;
            }
            function pr(e, t, a, n) {
              "boolean" == typeof e
                ? (u(t) && ((a = t), (t = void 0)), (t = t || ""))
                : ((a = t = e),
                  (e = !1),
                  u(t) && ((a = t), (t = void 0)),
                  (t = t || ""));
              var i,
                r = fa(),
                s = e ? r._week.dow : 0,
                o = [];
              if (null != a) return _r(t, (a + s) % 7, n, "day");
              for (i = 0; i < 7; i++) o[i] = _r(t, (i + s) % 7, n, "day");
              return o;
            }
            function gr(e, t) {
              return hr(e, t, "months");
            }
            function fr(e, t) {
              return hr(e, t, "monthsShort");
            }
            function vr(e, t, a) {
              return pr(e, t, a, "weekdays");
            }
            function yr(e, t, a) {
              return pr(e, t, a, "weekdaysShort");
            }
            function Mr(e, t, a) {
              return pr(e, t, a, "weekdaysMin");
            }
            (mr.calendar = j),
              (mr.longDateFormat = V),
              (mr.invalidDate = G),
              (mr.ordinal = Z),
              (mr.preparse = ur),
              (mr.postformat = ur),
              (mr.relativeTime = ee),
              (mr.pastFuture = te),
              (mr.set = C),
              (mr.eras = Ti),
              (mr.erasParse = Si),
              (mr.erasConvertYear = xi),
              (mr.erasAbbrRegex = Hi),
              (mr.erasNameRegex = ji),
              (mr.erasNarrowRegex = Fi),
              (mr.months = st),
              (mr.monthsShort = ot),
              (mr.monthsParse = lt),
              (mr.monthsRegex = ht),
              (mr.monthsShortRegex = _t),
              (mr.week = Dt),
              (mr.firstDayOfYear = Tt),
              (mr.firstDayOfWeek = Yt),
              (mr.weekdays = At),
              (mr.weekdaysMin = Ut),
              (mr.weekdaysShort = Rt),
              (mr.weekdaysParse = Nt),
              (mr.weekdaysRegex = Jt),
              (mr.weekdaysShortRegex = Gt),
              (mr.weekdaysMinRegex = Qt),
              (mr.isPM = aa),
              (mr.meridiem = ra),
              ha("en", {
                eras: [
                  {
                    since: "0001-01-01",
                    until: 1 / 0,
                    offset: 1,
                    name: "Anno Domini",
                    narrow: "AD",
                    abbr: "AD"
                  },
                  {
                    since: "0000-12-31",
                    until: -1 / 0,
                    offset: 1,
                    name: "Before Christ",
                    narrow: "BC",
                    abbr: "BC"
                  }
                ],
                dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
                ordinal: function (e) {
                  var t = e % 10;
                  return (
                    e +
                    (1 === ue((e % 100) / 10)
                      ? "th"
                      : 1 === t
                      ? "st"
                      : 2 === t
                      ? "nd"
                      : 3 === t
                      ? "rd"
                      : "th")
                  );
                }
              }),
              (i.lang = k(
                "moment.lang is deprecated. Use moment.locale instead.",
                ha
              )),
              (i.langData = k(
                "moment.langData is deprecated. Use moment.localeData instead.",
                fa
              ));
            var wr = Math.abs;
            function $r() {
              var e = this._data;
              return (
                (this._milliseconds = wr(this._milliseconds)),
                (this._days = wr(this._days)),
                (this._months = wr(this._months)),
                (e.milliseconds = wr(e.milliseconds)),
                (e.seconds = wr(e.seconds)),
                (e.minutes = wr(e.minutes)),
                (e.hours = wr(e.hours)),
                (e.months = wr(e.months)),
                (e.years = wr(e.years)),
                this
              );
            }
            function br(e, t, a, n) {
              var i = Tn(t, a);
              return (
                (e._milliseconds += n * i._milliseconds),
                (e._days += n * i._days),
                (e._months += n * i._months),
                e._bubble()
              );
            }
            function Lr(e, t) {
              return br(this, e, t, 1);
            }
            function Dr(e, t) {
              return br(this, e, t, -1);
            }
            function kr(e) {
              return e < 0 ? Math.floor(e) : Math.ceil(e);
            }
            function Yr() {
              var e,
                t,
                a,
                n,
                i,
                r = this._milliseconds,
                s = this._days,
                o = this._months,
                d = this._data;
              return (
                (r >= 0 && s >= 0 && o >= 0) ||
                  (r <= 0 && s <= 0 && o <= 0) ||
                  ((r += 864e5 * kr(Sr(o) + s)), (s = 0), (o = 0)),
                (d.milliseconds = r % 1e3),
                (e = ce(r / 1e3)),
                (d.seconds = e % 60),
                (t = ce(e / 60)),
                (d.minutes = t % 60),
                (a = ce(t / 60)),
                (d.hours = a % 24),
                (s += ce(a / 24)),
                (o += i = ce(Tr(s))),
                (s -= kr(Sr(i))),
                (n = ce(o / 12)),
                (o %= 12),
                (d.days = s),
                (d.months = o),
                (d.years = n),
                this
              );
            }
            function Tr(e) {
              return (4800 * e) / 146097;
            }
            function Sr(e) {
              return (146097 * e) / 4800;
            }
            function xr(e) {
              if (!this.isValid()) return NaN;
              var t,
                a,
                n = this._milliseconds;
              if ("month" === (e = ie(e)) || "quarter" === e || "year" === e)
                switch (
                  ((t = this._days + n / 864e5), (a = this._months + Tr(t)), e)
                ) {
                  case "month":
                    return a;
                  case "quarter":
                    return a / 3;
                  case "year":
                    return a / 12;
                }
              else
                switch (((t = this._days + Math.round(Sr(this._months))), e)) {
                  case "week":
                    return t / 7 + n / 6048e5;
                  case "day":
                    return t + n / 864e5;
                  case "hour":
                    return 24 * t + n / 36e5;
                  case "minute":
                    return 1440 * t + n / 6e4;
                  case "second":
                    return 86400 * t + n / 1e3;
                  case "millisecond":
                    return Math.floor(864e5 * t) + n;
                  default:
                    throw new Error("Unknown unit " + e);
                }
            }
            function Cr() {
              return this.isValid()
                ? this._milliseconds +
                    864e5 * this._days +
                    (this._months % 12) * 2592e6 +
                    31536e6 * ue(this._months / 12)
                : NaN;
            }
            function Ir(e) {
              return function () {
                return this.as(e);
              };
            }
            var Pr = Ir("ms"),
              Er = Ir("s"),
              jr = Ir("m"),
              Hr = Ir("h"),
              Fr = Ir("d"),
              Or = Ir("w"),
              Br = Ir("M"),
              Ar = Ir("Q"),
              Rr = Ir("y");
            function Ur() {
              return Tn(this);
            }
            function qr(e) {
              return (e = ie(e)), this.isValid() ? this[e + "s"]() : NaN;
            }
            function Nr(e) {
              return function () {
                return this.isValid() ? this._data[e] : NaN;
              };
            }
            var Wr = Nr("milliseconds"),
              zr = Nr("seconds"),
              Vr = Nr("minutes"),
              Jr = Nr("hours"),
              Gr = Nr("days"),
              Qr = Nr("months"),
              Kr = Nr("years");
            function Zr() {
              return ce(this.days() / 7);
            }
            var Xr = Math.round,
              es = { ss: 44, s: 45, m: 45, h: 22, d: 26, w: null, M: 11 };
            function ts(e, t, a, n, i) {
              return i.relativeTime(t || 1, !!a, e, n);
            }
            function as(e, t, a, n) {
              var i = Tn(e).abs(),
                r = Xr(i.as("s")),
                s = Xr(i.as("m")),
                o = Xr(i.as("h")),
                d = Xr(i.as("d")),
                l = Xr(i.as("M")),
                c = Xr(i.as("w")),
                u = Xr(i.as("y")),
                m =
                  (r <= a.ss && ["s", r]) ||
                  (r < a.s && ["ss", r]) ||
                  (s <= 1 && ["m"]) ||
                  (s < a.m && ["mm", s]) ||
                  (o <= 1 && ["h"]) ||
                  (o < a.h && ["hh", o]) ||
                  (d <= 1 && ["d"]) ||
                  (d < a.d && ["dd", d]);
              return (
                null != a.w &&
                  (m = m || (c <= 1 && ["w"]) || (c < a.w && ["ww", c])),
                ((m = m ||
                  (l <= 1 && ["M"]) ||
                  (l < a.M && ["MM", l]) ||
                  (u <= 1 && ["y"]) || ["yy", u])[2] = t),
                (m[3] = +e > 0),
                (m[4] = n),
                ts.apply(null, m)
              );
            }
            function ns(e) {
              return void 0 === e ? Xr : "function" == typeof e && ((Xr = e), !0);
            }
            function is(e, t) {
              return (
                void 0 !== es[e] &&
                (void 0 === t
                  ? es[e]
                  : ((es[e] = t), "s" === e && (es.ss = t - 1), !0))
              );
            }
            function rs(e, t) {
              if (!this.isValid()) return this.localeData().invalidDate();
              var a,
                n,
                i = !1,
                r = es;
              return (
                "object" == typeof e && ((t = e), (e = !1)),
                "boolean" == typeof e && (i = e),
                "object" == typeof t &&
                  ((r = Object.assign({}, es, t)),
                  null != t.s && null == t.ss && (r.ss = t.s - 1)),
                (n = as(this, !i, r, (a = this.localeData()))),
                i && (n = a.pastFuture(+this, n)),
                a.postformat(n)
              );
            }
            var ss = Math.abs;
            function os(e) {
              return (e > 0) - (e < 0) || +e;
            }
            function ds() {
              if (!this.isValid()) return this.localeData().invalidDate();
              var e,
                t,
                a,
                n,
                i,
                r,
                s,
                o,
                d = ss(this._milliseconds) / 1e3,
                l = ss(this._days),
                c = ss(this._months),
                u = this.asSeconds();
              return u
                ? ((e = ce(d / 60)),
                  (t = ce(e / 60)),
                  (d %= 60),
                  (e %= 60),
                  (a = ce(c / 12)),
                  (c %= 12),
                  (n = d ? d.toFixed(3).replace(/\.?0+$/, "") : ""),
                  (i = u < 0 ? "-" : ""),
                  (r = os(this._months) !== os(u) ? "-" : ""),
                  (s = os(this._days) !== os(u) ? "-" : ""),
                  (o = os(this._milliseconds) !== os(u) ? "-" : ""),
                  i +
                    "P" +
                    (a ? r + a + "Y" : "") +
                    (c ? r + c + "M" : "") +
                    (l ? s + l + "D" : "") +
                    (t || e || d ? "T" : "") +
                    (t ? o + t + "H" : "") +
                    (e ? o + e + "M" : "") +
                    (d ? o + n + "S" : ""))
                : "P0D";
            }
            var ls = sn.prototype;
            return (
              (ls.isValid = nn),
              (ls.abs = $r),
              (ls.add = Lr),
              (ls.subtract = Dr),
              (ls.as = xr),
              (ls.asMilliseconds = Pr),
              (ls.asSeconds = Er),
              (ls.asMinutes = jr),
              (ls.asHours = Hr),
              (ls.asDays = Fr),
              (ls.asWeeks = Or),
              (ls.asMonths = Br),
              (ls.asQuarters = Ar),
              (ls.asYears = Rr),
              (ls.valueOf = Cr),
              (ls._bubble = Yr),
              (ls.clone = Ur),
              (ls.get = qr),
              (ls.milliseconds = Wr),
              (ls.seconds = zr),
              (ls.minutes = Vr),
              (ls.hours = Jr),
              (ls.days = Gr),
              (ls.weeks = Zr),
              (ls.months = Qr),
              (ls.years = Kr),
              (ls.humanize = rs),
              (ls.toISOString = ds),
              (ls.toString = ds),
              (ls.toJSON = ds),
              (ls.locale = si),
              (ls.localeData = di),
              (ls.toIsoString = k(
                "toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
                ds
              )),
              (ls.lang = oi),
              R("X", 0, 0, "unix"),
              R("x", 0, 0, "valueOf"),
              je("x", xe),
              je("X", Pe),
              Ae("X", function (e, t, a) {
                a._d = new Date(1e3 * parseFloat(e));
              }),
              Ae("x", function (e, t, a) {
                a._d = new Date(ue(e));
              }),
              (i.version = "2.29.1"),
              r(Ja),
              (i.fn = dr),
              (i.min = Za),
              (i.max = Xa),
              (i.now = en),
              (i.utc = p),
              (i.unix = lr),
              (i.months = gr),
              (i.isDate = m),
              (i.locale = ha),
              (i.invalid = y),
              (i.duration = Tn),
              (i.isMoment = L),
              (i.weekdays = vr),
              (i.parseZone = cr),
              (i.localeData = fa),
              (i.isDuration = on),
              (i.monthsShort = fr),
              (i.weekdaysMin = Mr),
              (i.defineLocale = pa),
              (i.updateLocale = ga),
              (i.locales = va),
              (i.weekdaysShort = yr),
              (i.normalizeUnits = ie),
              (i.relativeTimeRounding = ns),
              (i.relativeTimeThreshold = is),
              (i.calendarFormat = Rn),
              (i.prototype = dr),
              (i.HTML5_FMT = {
                DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
                DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
                DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
                DATE: "YYYY-MM-DD",
                TIME: "HH:mm",
                TIME_SECONDS: "HH:mm:ss",
                TIME_MS: "HH:mm:ss.SSS",
                WEEK: "GGGG-[W]WW",
                MONTH: "YYYY-MM"
              }),
              i
            );
          })();
        }
      },
      __webpack_module_cache__ = {},
      deferred;
    function __webpack_require__(e) {
      var t = __webpack_module_cache__[e];
      if (void 0 !== t) return t.exports;
      var a = (__webpack_module_cache__[e] = { id: e, loaded: !1, exports: {} });
      return (
        __webpack_modules__[e].call(a.exports, a, a.exports, __webpack_require__),
        (a.loaded = !0),
        a.exports
      );
    }
    (__webpack_require__.m = __webpack_modules__),
      (deferred = []),
      (__webpack_require__.O = (e, t, a, n) => {
        if (!t) {
          var i = 1 / 0;
          for (o = 0; o < deferred.length; o++) {
            for (var [t, a, n] = deferred[o], r = !0, s = 0; s < t.length; s++)
              (!1 & n || i >= n) &&
              Object.keys(__webpack_require__.O).every((e) =>
                __webpack_require__.O[e](t[s])
              )
                ? t.splice(s--, 1)
                : ((r = !1), n < i && (i = n));
            r && (deferred.splice(o--, 1), (e = a()));
          }
          return e;
        }
        n = n || 0;
        for (var o = deferred.length; o > 0 && deferred[o - 1][2] > n; o--)
          deferred[o] = deferred[o - 1];
        deferred[o] = [t, a, n];
      }),
      (__webpack_require__.n = (e) => {
        var t = e && e.__esModule ? () => e.default : () => e;
        return __webpack_require__.d(t, { a: t }), t;
      }),
      (__webpack_require__.d = (e, t) => {
        for (var a in t)
          __webpack_require__.o(t, a) &&
            !__webpack_require__.o(e, a) &&
            Object.defineProperty(e, a, { enumerable: !0, get: t[a] });
      }),
      (__webpack_require__.o = (e, t) =>
        Object.prototype.hasOwnProperty.call(e, t)),
      (__webpack_require__.r = (e) => {
        "undefined" != typeof Symbol &&
          Symbol.toStringTag &&
          Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
          Object.defineProperty(e, "__esModule", { value: !0 });
      }),
      (__webpack_require__.nmd = (e) => (
        (e.paths = []), e.children || (e.children = []), e
      )),
      (() => {
        var e = {
          589: 0,
          278: 0,
          961: 0,
          477: 0,
          126: 0,
          349: 0,
          877: 0,
          134: 0,
          346: 0
        };
        __webpack_require__.O.j = (t) => 0 === e[t];
        var t = (t, a) => {
            var n,
              i,
              [r, s, o] = a,
              d = 0;
            for (n in s)
              __webpack_require__.o(s, n) && (__webpack_require__.m[n] = s[n]);
            if (o) var l = o(__webpack_require__);
            for (t && t(a); d < r.length; d++)
              (i = r[d]),
                __webpack_require__.o(e, i) && e[i] && e[i][0](),
                (e[r[d]] = 0);
            return __webpack_require__.O(l);
          },
          a = (self.webpackChunk = self.webpackChunk || []);
        a.forEach(t.bind(null, 0)), (a.push = t.bind(null, a.push.bind(a)));
      })(),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3878)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4532)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3147)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8178)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5133)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6721)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2716)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6045)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6576)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2880)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3879)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4166)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1554)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5555)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9916)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(877)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1915)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3737)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(217)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3949)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(681)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4874)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1065)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7201)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6224)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3184)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6935)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9886)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3314)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6117)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(364)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7138)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9960)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8095)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3106)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5250)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7957)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1669)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(974)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7565)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5688)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3830)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8872)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9786)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1882)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9205)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7603)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(295)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4117)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4163)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2895)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4599)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9459)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3177)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8180)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5775)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5792)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7977)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2325)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6550)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7710)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(629)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8369)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9920)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(10)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7513)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5350)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7336)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5321)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2733)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(306)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4810)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3109)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7836)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5228)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8542)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4111)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4376)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3074)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3764)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2841)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2899)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1667)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3958)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7240)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4457)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5416)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(383)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9946)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3950)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2512)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7610)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7828)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4248)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7495)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1015)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7684)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4173)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5903)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3906)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(770)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5891)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1676)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3616)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3362)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9932)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5462)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6535)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1632)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9425)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5305)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8722)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(36)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5744)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4664)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4018)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2102)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7448)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2280)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3390)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6219)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8291)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2745)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7011)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9329)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9591)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(169)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3382)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6619)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9434)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9239)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9110)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8343)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(312)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2565)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2458)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1753)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3666)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4116)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2142)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2958)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4592)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9807)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(569)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1611)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3985)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7510)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1307)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1698)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1230)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9828)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6758)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1622)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2229)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3788)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(26)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5397)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9544)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7492)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(566)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6789)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8681)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6544)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6315)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3445)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(794)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3592)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7465)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(766)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8525)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7970)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1105)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9470)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8433)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6539)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8418)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2267)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(502)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8283)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6551)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3219)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3851)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9113)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1613)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1693)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8821)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8277)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(318)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2383)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8621)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1948)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4477)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1470)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1448)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(8284)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(972)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(291)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(338)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4245)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7506)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2252)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9494)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5137)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(9)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3143)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(7097)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(6449)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(3257)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(5913)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1123)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(2459)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(1033)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(4185)
      ),
      __webpack_require__.O(
        void 0,
        [278, 961, 477, 126, 349, 877, 134, 346],
        () => __webpack_require__(586)
      );
    var __webpack_exports__ = __webpack_require__.O(
      void 0,
      [278, 961, 477, 126, 349, 877, 134, 346],
      () => __webpack_require__(5195)
    );
    __webpack_exports__ = __webpack_require__.O(__webpack_exports__);
  })();
